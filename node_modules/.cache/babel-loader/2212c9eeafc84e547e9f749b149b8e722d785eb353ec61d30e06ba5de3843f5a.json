{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\nvar consts = {\n  GroupGuid: '{271bbba0-1ee7}'\n};\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n *\n * @hidden\n */\nvar Adaptor = /** @class */function () {\n  /**\n   * Constructor for Adaptor class\n   *\n   * @param {DataOptions} ds?\n   * @param ds\n   * @hidden\n   * @returns aggregates\n   */\n  function Adaptor(ds) {\n    // common options for all the adaptors\n    this.options = {\n      from: 'table',\n      requestType: 'json',\n      sortBy: 'sorted',\n      select: 'select',\n      skip: 'skip',\n      group: 'group',\n      take: 'take',\n      search: 'search',\n      count: 'requiresCounts',\n      where: 'where',\n      aggregates: 'aggregates',\n      expand: 'expand'\n    };\n    /**\n     * Specifies the type of adaptor.\n     *\n     * @default Adaptor\n     */\n    this.type = Adaptor;\n    this.dataSource = ds;\n    this.pvt = {};\n  }\n  /**\n   * Returns the data from the query processing.\n   *\n   * @param {Object} data\n   * @param {DataOptions} ds?\n   * @param {Query} query?\n   * @param {Request} xhr?\n   * @param ds\n   * @param query\n   * @param xhr\n   * @returns Object\n   */\n  Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n    return data;\n  };\n  return Adaptor;\n}();\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n *\n * @hidden\n */\nvar JsonAdaptor = /** @class */function (_super) {\n  __extends(JsonAdaptor, _super);\n  function JsonAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Process the JSON data based on the provided queries.\n   *\n   * @param  {DataManager} dataManager\n   * @param  {Query} query\n   * @returns Object\n   */\n  JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n    var result = dataManager.dataSource.json.slice(0);\n    var count = result.length;\n    var countFlg = true;\n    var ret;\n    var key;\n    var lazyLoad = {};\n    var keyCount = 0;\n    var group = [];\n    var sort = [];\n    var page;\n    for (var i = 0; i < query.lazyLoad.length; i++) {\n      keyCount++;\n      lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n    }\n    var agg = {};\n    for (var i = 0; i < query.queries.length; i++) {\n      key = query.queries[i];\n      if ((key.fn === 'onPage' || key.fn === 'onGroup' || key.fn === 'onSortBy') && query.lazyLoad.length) {\n        if (key.fn === 'onGroup') {\n          group.push(key.e);\n        }\n        if (key.fn === 'onPage') {\n          page = key.e;\n        }\n        if (key.fn === 'onSortBy') {\n          sort.unshift(key.e);\n        }\n        continue;\n      }\n      ret = this[key.fn].call(this, result, key.e, query);\n      if (key.fn === 'onAggregates') {\n        agg[key.e.field + ' - ' + key.e.type] = ret;\n      } else {\n        result = ret !== undefined ? ret : result;\n      }\n      if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n        countFlg = false;\n      }\n      if (countFlg) {\n        count = result.length;\n      }\n    }\n    if (keyCount) {\n      var args = {\n        query: query,\n        lazyLoad: lazyLoad,\n        result: result,\n        group: group,\n        page: page,\n        sort: sort\n      };\n      var lazyLoadData = this.lazyLoadGroup(args);\n      result = lazyLoadData.result;\n      count = lazyLoadData.count;\n    }\n    if (query.isCountRequired) {\n      result = {\n        result: result,\n        count: count,\n        aggregates: agg\n      };\n    }\n    return result;\n  };\n  /**\n   * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n   *\n   * @param  {LazyLoadGroupArgs} args\n   */\n  JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n    var count = 0;\n    var agg = this.getAggregate(args.query);\n    var result = args.result;\n    if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n      var req = args.lazyLoad.onDemandGroupInfo;\n      for (var i = req.where.length - 1; i >= 0; i--) {\n        result = this.onWhere(result, req.where[i]);\n      }\n      if (args.group.length !== req.level) {\n        var field = args.group[req.level].fieldName;\n        result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n        result = this.onSortBy(result, args.sort[parseInt(req.level.toString(), 10)], args.query, true);\n      } else {\n        for (var i = args.sort.length - 1; i >= req.level; i--) {\n          result = this.onSortBy(result, args.sort[parseInt(i.toString(), 10)], args.query, false);\n        }\n      }\n      count = result.length;\n      var data = result;\n      result = result.slice(req.skip);\n      result = result.slice(0, req.take);\n      if (args.group.length !== req.level) {\n        this.formGroupResult(result, data);\n      }\n    } else {\n      var field_1 = args.group[0].fieldName;\n      result = DataUtil.group(result, field_1, agg, null, null, args.group[0].comparer, true);\n      count = result.length;\n      var data = result;\n      if (args.sort.length) {\n        var sort = args.sort.length > 1 ? args.sort.filter(function (x) {\n          return x.fieldName === field_1;\n        })[0] : args.sort[0];\n        result = this.onSortBy(result, sort, args.query, true);\n      }\n      if (args.page) {\n        result = this.onPage(result, args.page, args.query);\n      }\n      this.formGroupResult(result, data);\n    }\n    return {\n      result: result,\n      count: count\n    };\n  };\n  JsonAdaptor.prototype.formGroupResult = function (result, data) {\n    if (result.length && data.length) {\n      var uid = 'GroupGuid';\n      var childLevel = 'childLevels';\n      var level = 'level';\n      var records = 'records';\n      result[uid] = data[uid];\n      result[childLevel] = data[childLevel];\n      result[level] = data[level];\n      result[records] = data[records];\n    }\n    return result;\n  };\n  /**\n   * Separate the aggregate query from the given queries\n   *\n   * @param  {Query} query\n   */\n  JsonAdaptor.prototype.getAggregate = function (query) {\n    var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n    var agg = [];\n    if (aggQuery.length) {\n      var tmp = void 0;\n      for (var i = 0; i < aggQuery.length; i++) {\n        tmp = aggQuery[i].e;\n        agg.push({\n          type: tmp.type,\n          field: DataUtil.getValue(tmp.field, query)\n        });\n      }\n    }\n    return agg;\n  };\n  /**\n   * Performs batch update in the JSON array which add, remove and update records.\n   *\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n  JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var i;\n    var deletedRecordsLen = changes.deletedRecords.length;\n    for (i = 0; i < changes.addedRecords.length; i++) {\n      this.insert(dm, changes.addedRecords[i]);\n    }\n    for (i = 0; i < changes.changedRecords.length; i++) {\n      this.update(dm, e.key, changes.changedRecords[i]);\n    }\n    for (i = 0; i < deletedRecordsLen; i++) {\n      this.remove(dm, e.key, changes.deletedRecords[i]);\n    }\n    return changes;\n  };\n  /**\n   * Performs filter operation with the given data and where query.\n   *\n   * @param {Object[]} ds\n   * @param {{validate:Function}} e\n   * @param e.validate\n   */\n  JsonAdaptor.prototype.onWhere = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.filter(function (obj) {\n      if (e) {\n        return e.validate(obj);\n      }\n    });\n  };\n  /**\n   * Returns aggregate function based on the aggregate type.\n   *\n   * @param {Object[]} ds\n   * @param e\n   * @param {string} } type\n   * @param e.field\n   * @param e.type\n   */\n  JsonAdaptor.prototype.onAggregates = function (ds, e) {\n    var fn = DataUtil.aggregates[e.type];\n    if (!ds || !fn || ds.length === 0) {\n      return null;\n    }\n    return fn(ds, e.field);\n  };\n  /**\n   * Performs search operation based on the given query.\n   *\n   * @param  {Object[]} ds\n   * @param  {QueryOptions} e\n   */\n  JsonAdaptor.prototype.onSearch = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    if (e.fieldNames.length === 0) {\n      DataUtil.getFieldList(ds[0], e.fieldNames);\n    }\n    return ds.filter(function (obj) {\n      for (var j = 0; j < e.fieldNames.length; j++) {\n        if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  };\n  /**\n   * Sort the data with given direction and field.\n   *\n   * @param {Object[]} ds\n   * @param e\n   * @param {Object} b\n   * @param e.comparer\n   * @param e.fieldName\n   * @param query\n   * @param isLazyLoadGroupSort\n   */\n  JsonAdaptor.prototype.onSortBy = function (ds, e, query, isLazyLoadGroupSort) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    var fnCompare;\n    var field = DataUtil.getValue(e.fieldName, query);\n    if (!field) {\n      return ds.sort(e.comparer);\n    }\n    if (field instanceof Array) {\n      field = field.slice(0);\n      for (var i = field.length - 1; i >= 0; i--) {\n        if (!field[i]) {\n          continue;\n        }\n        fnCompare = e.comparer;\n        if (DataUtil.endsWith(field[i], ' desc')) {\n          fnCompare = DataUtil.fnSort('descending');\n          field[i] = field[i].replace(' desc', '');\n        }\n        ds = DataUtil.sort(ds, field[i], fnCompare);\n      }\n      return ds;\n    }\n    return DataUtil.sort(ds, isLazyLoadGroupSort ? 'key' : field, e.comparer);\n  };\n  /**\n   * Group the data based on the given query.\n   *\n   * @param  {Object[]} ds\n   * @param  {QueryOptions} e\n   * @param  {Query} query\n   */\n  JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    var agg = this.getAggregate(query);\n    return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n  };\n  /**\n   * Retrieves records based on the given page index and size.\n   *\n   * @param {Object[]} ds\n   * @param e\n   * @param {number} } pageIndex\n   * @param e.pageSize\n   * @param {Query} query\n   * @param e.pageIndex\n   */\n  JsonAdaptor.prototype.onPage = function (ds, e, query) {\n    var size = DataUtil.getValue(e.pageSize, query);\n    var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n    var end = start + size;\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.slice(start, end);\n  };\n  /**\n   * Retrieves records based on the given start and end index from query.\n   *\n   * @param {Object[]} ds\n   * @param e\n   * @param {number} } end\n   * @param e.start\n   * @param e.end\n   */\n  JsonAdaptor.prototype.onRange = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n  };\n  /**\n   * Picks the given count of records from the top of the datasource.\n   *\n   * @param {Object[]} ds\n   * @param {{nos:number}} e\n   * @param e.nos\n   */\n  JsonAdaptor.prototype.onTake = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.slice(0, DataUtil.getValue(e.nos));\n  };\n  /**\n   * Skips the given count of records from the data source.\n   *\n   * @param {Object[]} ds\n   * @param {{nos:number}} e\n   * @param e.nos\n   */\n  JsonAdaptor.prototype.onSkip = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.slice(DataUtil.getValue(e.nos));\n  };\n  /**\n   * Selects specified columns from the data source.\n   *\n   * @param {Object[]} ds\n   * @param {{fieldNames:string}} e\n   * @param e.fieldNames\n   */\n  JsonAdaptor.prototype.onSelect = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n  };\n  /**\n   * Inserts new record in the table.\n   *\n   * @param {DataManager} dm\n   * @param {Object} data\n   * @param tableName\n   * @param query\n   * @param {number} position\n   */\n  JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    if (isNullOrUndefined(position)) {\n      return dm.dataSource.json.push(data);\n    } else {\n      return dm.dataSource.json.splice(position, 0, data);\n    }\n  };\n  /**\n   * Remove the data from the dataSource based on the key field value.\n   *\n   * @param {DataManager} dm\n   * @param {string} keyField\n   * @param {Object} value\n   * @param {string} tableName?\n   * @param tableName\n   * @returns null\n   */\n  JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n    if (typeof value === 'object' && !(value instanceof Date)) {\n      value = DataUtil.getObject(keyField, value);\n    }\n    for (i = 0; i < ds.length; i++) {\n      if (DataUtil.getObject(keyField, ds[i]) === value) {\n        break;\n      }\n    }\n    return i !== ds.length ? ds.splice(i, 1) : null;\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   *\n   * @param {DataManager} dm\n   * @param {string} keyField\n   * @param {Object} value\n   * @param {string} tableName?\n   * @param tableName\n   * @returns null\n   */\n  JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n    var key;\n    if (!isNullOrUndefined(keyField)) {\n      key = getValue(keyField, value);\n    }\n    for (i = 0; i < ds.length; i++) {\n      if (!isNullOrUndefined(keyField) && getValue(keyField, ds[i]) === key) {\n        break;\n      }\n    }\n    return i < ds.length ? merge(ds[i], value) : null;\n  };\n  return JsonAdaptor;\n}(Adaptor);\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n *\n * @hidden\n */\nvar UrlAdaptor = /** @class */function (_super) {\n  __extends(UrlAdaptor, _super);\n  function UrlAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Process the query to generate request body.\n   *\n   * @param {DataManager} dm\n   * @param {Query} query\n   * @param {Object[]} hierarchyFilters?\n   * @param hierarchyFilters\n   * @returns p\n   */\n  // tslint:disable-next-line:max-func-body-length\n  UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var params = query.params;\n    var url = dm.dataSource.url;\n    var temp;\n    var skip;\n    var take = null;\n    var options = this.options;\n    var request = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    };\n    // calc Paging & Range\n    if ('onPage' in singles) {\n      temp = singles.onPage;\n      skip = DataUtil.getValue(temp.pageIndex, query);\n      take = DataUtil.getValue(temp.pageSize, query);\n      skip = (skip - 1) * take;\n    } else if ('onRange' in singles) {\n      temp = singles.onRange;\n      skip = temp.start;\n      take = temp.end - temp.start;\n    }\n    // Sorting\n    for (var i = 0; i < queries.sorts.length; i++) {\n      temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n      request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', {\n        name: temp,\n        direction: queries.sorts[i].e.direction\n      }, query));\n    }\n    // hierarchy\n    if (hierarchyFilters) {\n      temp = this.getFiltersFrom(hierarchyFilters, query);\n      if (temp) {\n        request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n      }\n    }\n    // Filters\n    for (var i = 0; i < queries.filters.length; i++) {\n      var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n      if (this.getModuleName && this.getModuleName() === 'ODataV4Adaptor' && !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n        res = '(' + res + ')';\n      }\n      request.filters.push(res);\n      var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n      for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n        var prop = keys_1[_i];\n        if (DataUtil.isNull(request[prop])) {\n          delete request[prop];\n        }\n      }\n    }\n    // Searches\n    for (var i = 0; i < queries.searches.length; i++) {\n      temp = queries.searches[i].e;\n      request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n        fields: temp.fieldNames,\n        operator: temp.operator,\n        key: temp.searchKey,\n        ignoreCase: temp.ignoreCase\n      }, query));\n    }\n    // Grouping\n    for (var i = 0; i < queries.groups.length; i++) {\n      request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n    }\n    // aggregates\n    for (var i = 0; i < queries.aggregates.length; i++) {\n      temp = queries.aggregates[i].e;\n      request.aggregates.push({\n        type: temp.type,\n        field: DataUtil.getValue(temp.field, query)\n      });\n    }\n    var req = {};\n    this.getRequestQuery(options, query, singles, request, req);\n    // Params\n    DataUtil.callAdaptorFunction(this, 'addParams', {\n      dm: dm,\n      query: query,\n      params: params,\n      reqParams: req\n    });\n    if (query.lazyLoad.length) {\n      for (var i = 0; i < query.lazyLoad.length; i++) {\n        req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n      }\n    }\n    // cleanup\n    var keys = Object.keys(req);\n    for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n      var prop = keys_2[_a];\n      if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n        delete req[prop];\n      }\n    }\n    if (!(options.skip in req && options.take in req) && take !== null) {\n      req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n      req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n    }\n    var p = this.pvt;\n    this.pvt = {};\n    if (this.options.requestType === 'json') {\n      return {\n        data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n        url: url,\n        pvtData: p,\n        type: 'POST',\n        contentType: 'application/json; charset=utf-8'\n      };\n    }\n    temp = this.convertToQueryString(req, query, dm);\n    temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n    return {\n      type: 'GET',\n      url: temp.length ? url.replace(/\\/*$/, temp) : url,\n      pvtData: p\n    };\n  };\n  UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n    var param = 'param';\n    var req = request1;\n    req[options.from] = query.fromTable;\n    if (options.apply && query.distincts.length) {\n      req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n    }\n    if (!query.distincts.length && options.expand) {\n      req[options.expand] = 'onExpand' in this && 'onSelect' in singles ? DataUtil.callAdaptorFunction(this, 'onExpand', {\n        selects: DataUtil.getValue(singles.onSelect.fieldNames, query),\n        expands: query.expands\n      }, query) : query.expands;\n    }\n    req[options.select] = 'onSelect' in singles && !query.distincts.length ? DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n    req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n    req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n    req[options.skip] = 'onSkip' in singles ? DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n    req[options.take] = 'onTake' in singles ? DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n    req[options.where] = request.filters.length || request.searches.length ? DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n    req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n    req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n    req[options.aggregates] = request.aggregates.length ? DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n    req[param] = [];\n  };\n  /**\n   * Convert the object from processQuery to string which can be added query string.\n   *\n   * @param {Object} req\n   * @param request\n   * @param {Query} query\n   * @param {DataManager} dm\n   */\n  UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    return '';\n    // this needs to be overridden\n  };\n  /**\n   * Return the data from the data manager processing.\n   *\n   * @param {DataResult} data\n   * @param {DataOptions} ds?\n   * @param {Query} query?\n   * @param {Request} xhr?\n   * @param {Object} request?\n   * @param {CrudOptions} changes?\n   * @param ds\n   * @param query\n   * @param xhr\n   * @param request\n   * @param changes\n   */\n  UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (xhr && xhr.headers.get('Content-Type') && xhr.headers.get('Content-Type').indexOf('application/json') !== -1) {\n      var handleTimeZone = DataUtil.timeZoneHandling;\n      if (ds && !ds.timeZoneHandling) {\n        DataUtil.timeZoneHandling = false;\n      }\n      data = DataUtil.parse.parseJson(data);\n      DataUtil.timeZoneHandling = handleTimeZone;\n    }\n    var requests = request;\n    var pvt = requests.pvtData || {};\n    var groupDs = data ? data.groupDs : [];\n    if (xhr && xhr.headers.get('Content-Type') && xhr.headers.get('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n    var d = JSON.parse(requests.data);\n    if (d && d.action === 'batch' && data && data.addedRecords) {\n      changes.addedRecords = data.addedRecords;\n      return changes;\n    }\n    if (data && data.d) {\n      data = data.d;\n    }\n    var args = {};\n    if (data && 'count' in data) {\n      args.count = data.count;\n    }\n    args.result = data && data.result ? data.result : data;\n    var isExpand = false;\n    if (Array.isArray(data.result) && data.result.length) {\n      var key = 'key';\n      var val = 'value';\n      var level = 'level';\n      if (!isNullOrUndefined(data.result[0][key])) {\n        args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n      }\n      if (query && query.lazyLoad.length && pvt.groups.length) {\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n          if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n            var value = query.lazyLoad[i][val][level];\n            if (pvt.groups.length === value) {\n              isExpand = true;\n            }\n          }\n        }\n      }\n    }\n    if (!isExpand) {\n      this.getAggregateResult(pvt, data, args, groupDs, query);\n    }\n    return DataUtil.isNull(args.count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n        this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n      }\n    }\n    var uid = 'GroupGuid';\n    var childLvl = 'childLevels';\n    var lvl = 'level';\n    var records = 'records';\n    data[uid] = consts[uid];\n    data[lvl] = level;\n    data[childLvl] = childLevel;\n    data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n    return data;\n  };\n  UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n    var childGroupedRecords = [];\n    var records = 'records';\n    for (var i = 0; i < data.length; i++) {\n      if (!hasRecords) {\n        for (var j = 0; j < data[i].items.length; j++) {\n          childGroupedRecords.push(data[i].items[j]);\n        }\n      } else {\n        childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n      }\n    }\n    return childGroupedRecords;\n  };\n  /**\n   * Add the group query to the adaptor`s option.\n   *\n   * @param  {Object[]} e\n   * @returns void\n   */\n  UrlAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return e;\n  };\n  /**\n   * Add the aggregate query to the adaptor`s option.\n   *\n   * @param  {Aggregates[]} e\n   * @returns void\n   */\n  UrlAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   *\n   * @param {DataManager} dm\n   * @param {CrudOptions} changes\n   * @param {Object} e\n   * @param query\n   * @param original\n   */\n  UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var url;\n    var key;\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e[url],\n        key: e[key]\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   *\n   * @param  {DataManager} dm\n   * @param  {Request} request\n   * @returns void\n   */\n  UrlAdaptor.prototype.beforeSend = function (dm, request) {\n    // need to extend this method\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   *\n   * @param {DataManager} dm\n   * @param {Object} data\n   * @param {string} tableName\n   * @param query\n   */\n  UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   *\n   * @param {DataManager} dm\n   * @param {string} keyField\n   * @param {number|string} value\n   * @param {string} tableName\n   * @param query\n   */\n  UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: value,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Prepare and return request body which is used to update record.\n   *\n   * @param {DataManager} dm\n   * @param {string} keyField\n   * @param {Object} value\n   * @param {string} tableName\n   * @param query\n   */\n  UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: value,\n        action: 'update',\n        keyColumn: keyField,\n        key: DataUtil.getObject(keyField, value),\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * To generate the predicate based on the filtered query.\n   *\n   * @param  {Object[]|string[]|number[]} data\n   * @param  {Query} query\n   * @hidden\n   */\n  UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n    var key = query.fKey;\n    var value;\n    var prop = key;\n    var pKey = query.key;\n    var predicats = [];\n    if (typeof data[0] !== 'object') {\n      prop = null;\n    }\n    for (var i = 0; i < data.length; i++) {\n      if (typeof data[0] === 'object') {\n        value = DataUtil.getObject(pKey || prop, data[i]);\n      } else {\n        value = data[i];\n      }\n      predicats.push(new Predicate(key, 'equal', value));\n    }\n    return Predicate.or(predicats);\n  };\n  UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n    var pData = data;\n    if (data && data.result) {\n      pData = data.result;\n    }\n    if (pvt && pvt.aggregates && pvt.aggregates.length) {\n      var agg = pvt.aggregates;\n      var fn = void 0;\n      var aggregateData = pData;\n      var res = {};\n      if (data.aggregate) {\n        aggregateData = data.aggregate;\n      }\n      for (var i = 0; i < agg.length; i++) {\n        fn = DataUtil.aggregates[agg[i].type];\n        if (fn) {\n          res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n        }\n      }\n      args.aggregates = res;\n    }\n    var key = 'key';\n    var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n    if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n      var groups = pvt.groups;\n      for (var i = 0; i < groups.length; i++) {\n        var level = null;\n        if (!isNullOrUndefined(groupDs)) {\n          groupDs = DataUtil.group(groupDs, groups[i]);\n        }\n        var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n        pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n      }\n      args.result = pData;\n    }\n    return args;\n  };\n  UrlAdaptor.prototype.getQueryRequest = function (query) {\n    var req = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    };\n    req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n    req.groups = Query.filterQueries(query.queries, 'onGroup');\n    req.filters = Query.filterQueries(query.queries, 'onWhere');\n    req.searches = Query.filterQueries(query.queries, 'onSearch');\n    req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n    return req;\n  };\n  UrlAdaptor.prototype.addParams = function (options) {\n    var req = options.reqParams;\n    if (options.params.length) {\n      req.params = {};\n    }\n    for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n      var tmp = _a[_i];\n      if (req[tmp.key]) {\n        throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n      }\n      req[tmp.key] = tmp.value;\n      if (tmp.fn) {\n        req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n      }\n      req.params[tmp.key] = req[tmp.key];\n    }\n  };\n  return UrlAdaptor;\n}(Adaptor);\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n *\n * @hidden\n */\nvar ODataAdaptor = /** @class */function (_super) {\n  __extends(ODataAdaptor, _super);\n  function ODataAdaptor(props) {\n    var _this = _super.call(this) || this;\n    // options replaced the default adaptor options\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$inlinecount',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PUT'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n  ODataAdaptor.prototype.getModuleName = function () {\n    return 'ODataAdaptor';\n  };\n  /**\n   * Generate request string based on the filter criteria from query.\n   *\n   * @param {Predicate} pred\n   * @param {boolean} requiresCast?\n   * @param predicate\n   * @param query\n   * @param requiresCast\n   */\n  ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var operator;\n    var guid;\n    var val = predicate.value;\n    var type = typeof val;\n    var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n    if (val instanceof Date) {\n      val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n    }\n    if (type === 'string') {\n      val = val.replace(/'/g, '\\'\\'');\n      if (predicate.ignoreCase) {\n        val = val.toLowerCase();\n      }\n      if (predicate.operator !== 'like') {\n        val = encodeURIComponent(val);\n      }\n      if (predicate.operator !== 'wildcard' && predicate.operator !== 'like') {\n        val = '\\'' + val + '\\'';\n      }\n      if (requiresCast) {\n        field = 'cast(' + field + ', \\'Edm.String\\')';\n      }\n      if (DataUtil.parse.isGuid(val)) {\n        guid = 'guid';\n      }\n      if (predicate.ignoreCase) {\n        if (!guid) {\n          field = 'tolower(' + field + ')';\n        }\n        val = val.toLowerCase();\n      }\n    }\n    if (predicate.operator === 'isempty' || predicate.operator === 'isnull' || predicate.operator === 'isnotempty' || predicate.operator === 'isnotnull') {\n      operator = predicate.operator.indexOf('isnot') !== -1 ? DataUtil.odBiOperator['notequal'] : DataUtil.odBiOperator['equal'];\n      val = predicate.operator === 'isnull' || predicate.operator === 'isnotnull' ? null : '\\'\\'';\n    } else {\n      operator = DataUtil.odBiOperator[predicate.operator];\n    }\n    if (operator) {\n      returnValue += field;\n      returnValue += operator;\n      if (guid) {\n        returnValue += guid;\n      }\n      return returnValue + val;\n    }\n    if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n      operator = DataUtil.odv4UniOperator[predicate.operator];\n    } else {\n      operator = DataUtil.odUniOperator[predicate.operator];\n    }\n    if (operator === 'like') {\n      val = val;\n      if (val.indexOf('%') !== -1) {\n        if (val.charAt(0) === '%' && val.lastIndexOf('%') < 2) {\n          val = val.substring(1, val.length);\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['startswith'] : DataUtil.odUniOperator['startswith'];\n        } else if (val.charAt(val.length - 1) === '%' && val.indexOf('%') > val.length - 3) {\n          val = val.substring(0, val.length - 1);\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['endswith'] : DataUtil.odUniOperator['endswith'];\n        } else if (val.lastIndexOf('%') !== val.indexOf('%') && val.lastIndexOf('%') > val.indexOf('%') + 1) {\n          val = val.substring(val.indexOf('%') + 1, val.lastIndexOf('%'));\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n        } else {\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n        }\n      }\n      val = encodeURIComponent(val);\n      val = '\\'' + val + '\\'';\n    } else if (operator === 'wildcard') {\n      val = val;\n      if (val.indexOf('*') !== -1) {\n        var splittedStringValue = val.split('*');\n        var splittedValue = void 0;\n        var count = 0;\n        if (val.indexOf('*') !== 0 && splittedStringValue[0].indexOf('%3f') === -1 && splittedStringValue[0].indexOf('?') === -1) {\n          splittedValue = splittedStringValue[0];\n          splittedValue = '\\'' + splittedValue + '\\'';\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['startswith'] : DataUtil.odUniOperator['startswith'];\n          returnValue += operator + '(';\n          returnValue += field + ',';\n          if (guid) {\n            returnValue += guid;\n          }\n          returnValue += splittedValue + ')';\n          count++;\n        }\n        if (val.lastIndexOf('*') !== val.length - 1 && splittedStringValue[splittedStringValue.length - 1].indexOf('%3f') === -1 && splittedStringValue[splittedStringValue.length - 1].indexOf('?') === -1) {\n          splittedValue = splittedStringValue[splittedStringValue.length - 1];\n          splittedValue = '\\'' + splittedValue + '\\'';\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['endswith'] : DataUtil.odUniOperator['endswith'];\n          if (count > 0) {\n            returnValue += ' and ';\n          }\n          returnValue += operator + '(';\n          returnValue += field + ',';\n          if (guid) {\n            returnValue += guid;\n          }\n          returnValue += splittedValue + ')';\n          count++;\n        }\n        if (splittedStringValue.length > 2) {\n          for (var i = 1; i < splittedStringValue.length - 1; i++) {\n            if (splittedStringValue[i].indexOf('%3f') === -1 && splittedStringValue[i].indexOf('?') === -1) {\n              splittedValue = splittedStringValue[i];\n              splittedValue = '\\'' + splittedValue + '\\'';\n              operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n              if (count > 0) {\n                returnValue += ' and ';\n              }\n              if (operator === 'substringof' || operator === 'not substringof') {\n                var temp = splittedValue;\n                splittedValue = field;\n                field = temp;\n              }\n              returnValue += operator + '(';\n              returnValue += field + ',';\n              if (guid) {\n                returnValue += guid;\n              }\n              returnValue += splittedValue + ')';\n              count++;\n            }\n          }\n        }\n        if (count === 0) {\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n          if (val.indexOf('?') !== -1 || val.indexOf('%3f') !== -1) {\n            val = val.indexOf('?') !== -1 ? val.split('?').join('') : val.split('%3f').join('');\n          }\n          val = '\\'' + val + '\\'';\n        } else {\n          operator = 'wildcard';\n        }\n      } else {\n        operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n        if (val.indexOf('?') !== -1 || val.indexOf('%3f') !== -1) {\n          val = val.indexOf('?') !== -1 ? val.split('?').join('') : val.split('%3f').join('');\n        }\n        val = '\\'' + val + '\\'';\n      }\n    }\n    if (operator === 'substringof' || operator === 'not substringof') {\n      var temp = val;\n      val = field;\n      field = temp;\n    }\n    if (operator !== 'wildcard') {\n      returnValue += operator + '(';\n      returnValue += field + ',';\n      if (guid) {\n        returnValue += guid;\n      }\n      returnValue += val + ')';\n    }\n    return returnValue;\n  };\n  ODataAdaptor.prototype.addParams = function (options) {\n    _super.prototype.addParams.call(this, options);\n    delete options.reqParams.params;\n  };\n  /**\n   * Generate request string based on the multiple filter criteria from query.\n   *\n   * @param {Predicate} pred\n   * @param {boolean} requiresCast?\n   * @param predicate\n   * @param query\n   * @param requiresCast\n   */\n  ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n    var res = [];\n    for (var i = 0; i < predicate.predicates.length; i++) {\n      res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n    }\n    return res.join(' ' + predicate.condition + ' ');\n  };\n  /**\n   * Generate query string based on the multiple filter criteria from query.\n   *\n   * @param {Predicate} filter\n   * @param {boolean} requiresCast?\n   * @param query\n   * @param requiresCast\n   */\n  ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n    return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n  };\n  /**\n   * Generate query string based on the multiple filter criteria from query.\n   *\n   * @param  {string[]} filters\n   */\n  ODataAdaptor.prototype.onWhere = function (filters) {\n    if (this.pvt.search) {\n      filters.push(this.onEachWhere(this.pvt.search, null, true));\n    }\n    return filters.join(' and ');\n  };\n  /**\n   * Generate query string based on the multiple search criteria from query.\n   *\n   * @param e\n   * @param {string} operator\n   * @param {string} key\n   * @param {boolean} } ignoreCase\n   * @param e.fields\n   * @param e.operator\n   * @param e.key\n   * @param e.ignoreCase\n   */\n  ODataAdaptor.prototype.onEachSearch = function (e) {\n    if (e.fields && e.fields.length === 0) {\n      DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n    }\n    var filter = this.pvt.search || [];\n    for (var i = 0; i < e.fields.length; i++) {\n      filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n    }\n    this.pvt.search = filter;\n  };\n  /**\n   * Generate query string based on the search criteria from query.\n   *\n   * @param  {Object} e\n   */\n  ODataAdaptor.prototype.onSearch = function (e) {\n    this.pvt.search = Predicate.or(this.pvt.search);\n    return '';\n  };\n  /**\n   * Generate query string based on multiple sort criteria from query.\n   *\n   * @param  {QueryOptions} e\n   */\n  ODataAdaptor.prototype.onEachSort = function (e) {\n    var res = [];\n    if (e.name instanceof Array) {\n      for (var i = 0; i < e.name.length; i++) {\n        res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n      }\n    } else {\n      res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n    }\n    return res.join(',');\n  };\n  /**\n   * Returns sort query string.\n   *\n   * @param  {string[]} e\n   */\n  ODataAdaptor.prototype.onSortBy = function (e) {\n    return e.reverse().join(',');\n  };\n  /**\n   * Adds the group query to the adaptor option.\n   *\n   * @param  {Object[]} e\n   * @returns string\n   */\n  ODataAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return [];\n  };\n  /**\n   * Returns the select query string.\n   *\n   * @param  {string[]} e\n   */\n  ODataAdaptor.prototype.onSelect = function (e) {\n    for (var i = 0; i < e.length; i++) {\n      e[i] = ODataAdaptor.getField(e[i]);\n    }\n    return e.join(',');\n  };\n  /**\n   * Add the aggregate query to the adaptor option.\n   *\n   * @param  {Object[]} e\n   * @returns string\n   */\n  ODataAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n    return '';\n  };\n  /**\n   * Returns the query string which requests total count from the data source.\n   *\n   * @param  {boolean} e\n   * @returns string\n   */\n  ODataAdaptor.prototype.onCount = function (e) {\n    return e === true ? 'allpages' : '';\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   *\n   * @param {DataManager} dm\n   * @param {Request} request\n   * @param {Fetch} settings?\n   * @param settings\n   */\n  ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.headers.set('Accept', this.options.multipartAccept);\n      request.headers.set('DataServiceVersion', '2.0');\n      //request.overrideMimeType('text/plain; charset=x-user-defined');\n    } else {\n      request.headers.set('Accept', this.options.accept);\n    }\n    request.headers.set('DataServiceVersion', '2.0');\n    request.headers.set('MaxDataServiceVersion', '2.0');\n  };\n  /**\n   * Returns the data from the query processing.\n   *\n   * @param {DataResult} data\n   * @param {DataOptions} ds?\n   * @param {Query} query?\n   * @param {Request} xhr?\n   * @param {Fetch} request?\n   * @param {CrudOptions} changes?\n   * @param ds\n   * @param query\n   * @param xhr\n   * @param request\n   * @param changes\n   * @returns aggregateResult\n   */\n  ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaCheck = 'odata.metadata';\n    if (request && request.type === 'GET' && !this.rootUrl && data[metaCheck]) {\n      var dataUrls = data[metaCheck].split('/$metadata#');\n      this.rootUrl = dataUrls[0];\n      this.resourceTableName = dataUrls[1];\n    }\n    var pvtData = 'pvtData';\n    if (!isNullOrUndefined(data.d)) {\n      var dataCopy = query && query.isCountRequired ? data.d.results : data.d;\n      var metaData = '__metadata';\n      if (!isNullOrUndefined(dataCopy)) {\n        for (var i = 0; i < dataCopy.length; i++) {\n          if (!isNullOrUndefined(dataCopy[i][metaData])) {\n            delete dataCopy[i][metaData];\n          }\n        }\n      }\n    }\n    var pvt = request && request[pvtData];\n    var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n    var versionCheck = xhr && request.fetchRequest.headers.get('DataServiceVersion');\n    var count = null;\n    var version = versionCheck && parseInt(versionCheck, 10) || 2;\n    if (query && query.isCountRequired) {\n      var oDataCount = '__count';\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n      if (data.d) {\n        data = data.d;\n      }\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n    }\n    if (version === 3 && data.value) {\n      data = data.value;\n    }\n    if (data.d) {\n      data = data.d;\n    }\n    if (version < 3 && data.results) {\n      data = data.results;\n    }\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  /**\n   * Converts the request object to query string.\n   *\n   * @param {Object} req\n   * @param request\n   * @param {Query} query\n   * @param {DataManager} dm\n   * @returns tableName\n   */\n  ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    var res = [];\n    var table = 'table';\n    var tableName = request[table] || '';\n    var format = '$format';\n    delete request[table];\n    if (dm.dataSource.requiresFormat) {\n      request[format] = 'json';\n    }\n    var keys = Object.keys(request);\n    for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n      var prop = keys_4[_i];\n      res.push(prop + '=' + request[prop]);\n    }\n    res = res.join('&');\n    if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n      return res;\n    }\n    return res.length ? tableName + '?' + res : tableName || '';\n  };\n  ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n    for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n      var prop = _a[_i];\n      if (convertObj[prop] instanceof Date) {\n        convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n      }\n    }\n    return convertObj;\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   *\n   * @param {DataManager} dm\n   * @param {Object} data\n   * @param {string} tableName?\n   * @param tableName\n   */\n  ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n      data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   *\n   * @param {DataManager} dm\n   * @param {string} keyField\n   * @param {number} value\n   * @param {string} tableName?\n   * @param tableName\n   */\n  ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var url;\n    if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n      url = \"('\" + value + \"')\";\n    } else {\n      url = \"(\" + value + \")\";\n    }\n    return {\n      type: 'DELETE',\n      url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n    };\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   *\n   * @param {DataManager} dm\n   * @param {string} keyField\n   * @param {Object} value\n   * @param {string} tableName?\n   * @param tableName\n   * @param query\n   * @param original\n   * @returns this\n   */\n  ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n    if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n      value = this.compareAndRemove(value, original, keyField);\n    }\n    var url;\n    if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n      url = \"('\" + value[keyField] + \"')\";\n    } else {\n      url = \"(\" + value[keyField] + \")\";\n    }\n    return {\n      type: this.options.updateType,\n      url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n      data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n      accept: this.options.accept\n    };\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   *\n   * @param {DataManager} dm\n   * @param {CrudOptions} changes\n   * @param {RemoteArgs} e\n   * @param query\n   * @param original\n   * @returns {Object}\n   */\n  ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = dm.dataSource.batchUrl || this.rootUrl ? (dm.dataSource.batchUrl || this.rootUrl) + '/' + this.options.batch : (dm.dataSource.batchUrl || dm.dataSource.url).replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var args = {\n      url: e.url,\n      key: e.key,\n      cid: 1,\n      cSet: DataUtil.getGuid(this.options.changeSet)\n    };\n    var req = '--' + initialGuid + '\\n';\n    req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n    this.pvt.changeSet = 0;\n    req += this.generateInsertRequest(changes.addedRecords, args, dm);\n    req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n    req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n    req += args.cSet + '--\\n';\n    req += '--' + initialGuid + '--';\n    return {\n      type: 'POST',\n      url: url,\n      dataType: 'json',\n      contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n      data: req\n    };\n  };\n  /**\n   * Generate the string content from the removed records.\n   * The result will be send during batch update.\n   *\n   * @param {Object[]} arr\n   * @param {RemoteArgs} e\n   * @param dm\n   * @returns this\n   */\n  ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n    var req = '';\n    var stat = {\n      'method': 'DELETE ',\n      'url': function (data, i, key) {\n        var url = DataUtil.getObject(key, data[i]);\n        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n          return '(' + url + ')';\n        } else if (url instanceof Date) {\n          var dateTime = data[i][key];\n          return '(' + dateTime.toJSON() + ')';\n        } else {\n          return \"('\" + url + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return '';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req + '\\n';\n  };\n  /**\n   * Generate the string content from the inserted records.\n   * The result will be send during batch update.\n   *\n   * @param {Object[]} arr\n   * @param {RemoteArgs} e\n   * @param dm\n   */\n  ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n    var req = '';\n    var stat = {\n      'method': 'POST ',\n      'url': function (data, i, key) {\n        return '';\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n  /**\n   * Generate the string content from the updated records.\n   * The result will be send during batch update.\n   *\n   * @param {Object[]} arr\n   * @param {RemoteArgs} e\n   * @param dm\n   * @param org\n   */\n  ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n    var _this = this;\n    if (!arr) {\n      return '';\n    }\n    var req = '';\n    arr.forEach(function (change) {\n      return change = _this.compareAndRemove(change, org.filter(function (o) {\n        return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change);\n      })[0], e.key);\n    });\n    var stat = {\n      'method': this.options.updateType + ' ',\n      'url': function (data, i, key) {\n        if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n          return '(' + data[i][key] + ')';\n        } else if (data[i][key] instanceof Date) {\n          var date = data[i][key];\n          return '(' + date.toJSON() + ')';\n        } else {\n          return \"('\" + data[i][key] + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n  ODataAdaptor.getField = function (prop) {\n    return prop.replace(/\\./g, '/');\n  };\n  ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n    var req = '';\n    for (var i = 0; i < arr.length; i++) {\n      req += '\\n' + e.cSet + '\\n';\n      req += this.options.changeSetContent + '\\n\\n';\n      req += stat.method;\n      if (stat.method === 'POST ') {\n        req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n        req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'DELETE ') {\n        req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      }\n      req += 'Accept: ' + this.options.accept + '\\n';\n      req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n      req += this.options.batchChangeSetContentType + '\\n';\n      if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n        req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n        delete arr[i]['@odata.etag'];\n      } else {\n        req += '\\n';\n      }\n      req += stat.data(arr, i);\n    }\n    return req;\n  };\n  ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n    if (xhr && xhr.headers.get('Content-Type') && xhr.headers.get('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n    if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n      var guid = xhr.headers.get('Content-Type');\n      var cIdx = void 0;\n      var jsonObj = void 0;\n      var d = data + '';\n      guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n      d = d.split(guid);\n      if (d.length < 2) {\n        return {};\n      }\n      d = d[1];\n      var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n      if (exVal) {\n        d.replace(exVal[0], '');\n      }\n      var changeGuid = exVal ? exVal[1] : '';\n      d = d.split(changeGuid);\n      for (var i = d.length; i > -1; i--) {\n        if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n          continue;\n        }\n        cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n        if (changes.addedRecords[cIdx]) {\n          jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n          extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n        }\n      }\n      return changes;\n    }\n    return null;\n  };\n  ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n    var _this = this;\n    if (isNullOrUndefined(original)) {\n      return data;\n    }\n    Object.keys(data).forEach(function (prop) {\n      if (prop !== key && prop !== '@odata.etag') {\n        if (DataUtil.isPlainObject(data[prop])) {\n          _this.compareAndRemove(data[prop], original[prop]);\n          var final = Object.keys(data[prop]).filter(function (data) {\n            return data !== '@odata.etag';\n          });\n          if (final.length === 0) {\n            delete data[prop];\n          }\n        } else if (data[prop] === original[prop]) {\n          delete data[prop];\n        } else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n          delete data[prop];\n        }\n      }\n    });\n    return data;\n  };\n  return ODataAdaptor;\n}(UrlAdaptor);\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n *\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */function (_super) {\n  __extends(ODataV4Adaptor, _super);\n  function ODataV4Adaptor(props) {\n    var _this = _super.call(this, props) || this;\n    // options replaced the default adaptor options\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json, text/javascript, */*; q=0.01',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$count',\n      search: '$search',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PATCH',\n      localTime: false,\n      apply: '$apply'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n  ODataV4Adaptor.prototype.getModuleName = function () {\n    return 'ODataV4Adaptor';\n  };\n  /**\n   * Returns the query string which requests total count from the data source.\n   *\n   * @param  {boolean} e\n   * @returns string\n   */\n  ODataV4Adaptor.prototype.onCount = function (e) {\n    return e === true ? 'true' : '';\n  };\n  /**\n   * Generate request string based on the filter criteria from query.\n   *\n   * @param {Predicate} pred\n   * @param {boolean} requiresCast?\n   * @param predicate\n   * @param query\n   * @param requiresCast\n   */\n  ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var val = predicate.value;\n    var isDate = val instanceof Date;\n    if (query instanceof Query) {\n      var queries = this.getQueryRequest(query);\n      for (var i = 0; i < queries.filters.length; i++) {\n        if (queries.filters[i].e.key === predicate.value) {\n          requiresCast = true;\n        }\n      }\n    }\n    returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n    if (isDate) {\n      returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n    }\n    if (DataUtil.parse.isGuid(val)) {\n      returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n    }\n    return returnValue;\n  };\n  /**\n   * Generate query string based on the multiple search criteria from query.\n   *\n   * @param e\n   * @param {string} operator\n   * @param {string} key\n   * @param {boolean} } ignoreCase\n   * @param e.fields\n   * @param e.operator\n   * @param e.key\n   * @param e.ignoreCase\n   */\n  ODataV4Adaptor.prototype.onEachSearch = function (e) {\n    var search = this.pvt.searches || [];\n    search.push(e.key);\n    this.pvt.searches = search;\n  };\n  /**\n   *  Generate query string based on the search criteria from query.\n   *\n   * @param  {Object} e\n   */\n  ODataV4Adaptor.prototype.onSearch = function (e) {\n    return this.pvt.searches.join(' OR ');\n  };\n  /**\n   * Returns the expand query string.\n   *\n   * @param {string} e\n   * @param e.selects\n   * @param e.expands\n   */\n  ODataV4Adaptor.prototype.onExpand = function (e) {\n    var _this = this;\n    var selected = {};\n    var expanded = {};\n    var expands = e.expands.slice();\n    var exArr = [];\n    var selects = e.selects.filter(function (item) {\n      return item.indexOf('.') > -1;\n    });\n    selects.forEach(function (select) {\n      var splits = select.split('.');\n      if (!(splits[0] in selected)) {\n        selected[splits[0]] = [];\n      }\n      if (splits.length === 2) {\n        if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\n          if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\n            selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\n          } else {\n            selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\n          }\n        } else {\n          selected[splits[0]].push('$select=' + splits[1]);\n        }\n      } else {\n        var sel = '$select=' + splits[splits.length - 1];\n        var exp = '';\n        var close_1 = '';\n        for (var i = 1; i < splits.length - 1; i++) {\n          exp = exp + '$expand=' + splits[i] + '(';\n          close_1 = close_1 + ')';\n        }\n        var combineVal = exp + sel + close_1;\n        if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 && _this.expandQueryIndex(selected[splits[0]], true)) {\n          var idx = _this.expandQueryIndex(selected[splits[0]]);\n          selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\n        } else {\n          selected[splits[0]].push(combineVal);\n        }\n      }\n    });\n    //Auto expand from select query\n    Object.keys(selected).forEach(function (expand) {\n      if (expands.indexOf(expand) === -1) {\n        expands.push(expand);\n      }\n    });\n    expands.forEach(function (expand) {\n      expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\n    });\n    Object.keys(expanded).forEach(function (ex) {\n      return exArr.push(expanded[ex]);\n    });\n    return exArr.join(',');\n  };\n  ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\n    for (var i = 0; i < query.length; i++) {\n      if (query[i].indexOf('$expand') !== -1) {\n        return isExpand ? true : i;\n      }\n    }\n    return isExpand ? false : 0;\n  };\n  /**\n   * Returns the groupby query string.\n   *\n   * @param {string} e\n   * @param distinctFields\n   */\n  ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n    var fields = distinctFields.map(function (field) {\n      return ODataAdaptor.getField(field);\n    }).join(',');\n    return \"groupby((\" + fields + \"))\";\n  };\n  /**\n   * Returns the select query string.\n   *\n   * @param  {string[]} e\n   */\n  ODataV4Adaptor.prototype.onSelect = function (e) {\n    return _super.prototype.onSelect.call(this, e.filter(function (item) {\n      return item.indexOf('.') === -1;\n    }));\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   *\n   * @param  {DataManager} dm\n   * @param  {Request} request\n   * @param  {Fetch} settings\n   * @returns void\n   */\n  ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n      request.headers.set('Prefer', 'return=representation');\n    }\n    request.headers.set('Accept', this.options.accept);\n  };\n  /**\n   * Returns the data from the query processing.\n   *\n   * @param {DataResult} data\n   * @param {DataOptions} ds?\n   * @param {Query} query?\n   * @param {Request} xhr?\n   * @param {Fetch} request?\n   * @param {CrudOptions} changes?\n   * @param ds\n   * @param query\n   * @param xhr\n   * @param request\n   * @param changes\n   * @returns aggregateResult\n   */\n  ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaName = '@odata.context';\n    var metaV4Name = '@context';\n    if (request && request.type === 'GET' && !this.rootUrl && (data[metaName] || data[metaV4Name])) {\n      var dataUrl = data[metaName] ? data[metaName].split('/$metadata#') : data[metaV4Name].split('/$metadata#');\n      this.rootUrl = dataUrl[0];\n      this.resourceTableName = dataUrl[1];\n    }\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n    var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n    var count = null;\n    var dataCount = '@odata.count';\n    var dataV4Count = '@count';\n    if (query && query.isCountRequired) {\n      if (dataCount in data) {\n        count = data[dataCount];\n      } else if (dataV4Count in data) {\n        count = data[dataV4Count];\n      }\n    }\n    data = !isNullOrUndefined(data.value) ? data.value : data;\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: count,\n      aggregates: args.aggregates\n    };\n  };\n  return ODataV4Adaptor;\n}(ODataAdaptor);\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n *\n * @hidden\n */\nvar WebApiAdaptor = /** @class */function (_super) {\n  __extends(WebApiAdaptor, _super);\n  function WebApiAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  WebApiAdaptor.prototype.getModuleName = function () {\n    return 'WebApiAdaptor';\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   *\n   * @param {DataManager} dm\n   * @param {Object} data\n   * @param {string} tableName?\n   * @param tableName\n   */\n  WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.url,\n      data: JSON.stringify(data)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   *\n   * @param {DataManager} dm\n   * @param {string} keyField\n   * @param {number} value\n   * @param {string} tableName?\n   * @param tableName\n   */\n  WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    return {\n      type: 'DELETE',\n      url: dm.dataSource.url + '/' + value,\n      data: JSON.stringify(value)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to update record.\n   *\n   * @param {DataManager} dm\n   * @param {string} keyField\n   * @param {Object} value\n   * @param {string} tableName?\n   * @param tableName\n   */\n  WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    return {\n      type: 'PUT',\n      url: dm.dataSource.url,\n      data: JSON.stringify(value)\n    };\n  };\n  WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var _this = this;\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var req = [];\n    var _loop_1 = function (i, x) {\n      changes.addedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': 'POST ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    };\n    //insertion\n    for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n      _loop_1(i, x);\n    }\n    var _loop_2 = function (i, x) {\n      changes.changedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': _this.options.updateType + ' ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    };\n    //updation\n    for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n      _loop_2(i, x);\n    }\n    var _loop_3 = function (i, x) {\n      changes.deletedRecords.forEach(function (j, d) {\n        var state = {\n          'mtd': 'DELETE ',\n          'url': function (data, i, key) {\n            var url = DataUtil.getObject(key, data[i]);\n            if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n              return '/' + url;\n            } else if (url instanceof Date) {\n              var datTime = data[i][key];\n              return '/' + datTime.toJSON();\n            } else {\n              return \"/'\" + url + \"'\";\n            }\n          },\n          'data': function (data, i) {\n            return '';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    };\n    //deletion\n    for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n      _loop_3(i, x);\n    }\n    req.push('--' + initialGuid + '--', '');\n    return {\n      type: 'POST',\n      url: url,\n      contentType: 'multipart/mixed; boundary=' + initialGuid,\n      data: req.join('\\r\\n')\n    };\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   *\n   * @param  {DataManager} dm\n   * @param  {Request} request\n   * @param  {Fetch} settings\n   * @returns void\n   */\n  WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    request.headers.set('Accept', 'application/json, text/javascript, */*; q=0.01');\n  };\n  /**\n   * Returns the data from the query processing.\n   *\n   * @param {DataResult} data\n   * @param {DataOptions} ds?\n   * @param {Query} query?\n   * @param {Request} xhr?\n   * @param {Fetch} request?\n   * @param {CrudOptions} changes?\n   * @param ds\n   * @param query\n   * @param xhr\n   * @param request\n   * @param changes\n   * @returns aggregateResult\n   */\n  WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n    var count = null;\n    var args = {};\n    if (request && request.type.toLowerCase() !== 'post') {\n      var versionCheck = xhr && request.fetchRequest.headers.get('DataServiceVersion');\n      var version = versionCheck && parseInt(versionCheck, 10) || 2;\n      if (query && query.isCountRequired) {\n        if (!DataUtil.isNull(data.Count)) {\n          count = data.Count;\n        }\n      }\n      if (version < 3 && data.Items) {\n        data = data.Items;\n      }\n      args.count = count;\n      args.result = data;\n      this.getAggregateResult(pvt, data, args, null, query);\n    }\n    args.result = args.result || data;\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  return WebApiAdaptor;\n}(ODataAdaptor);\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n *\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */function (_super) {\n  __extends(WebMethodAdaptor, _super);\n  function WebMethodAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Prepare the request body based on the query.\n   * The query information can be accessed at the WebMethod using variable named `value`.\n   *\n   * @param {DataManager} dm\n   * @param {Query} query\n   * @param {Object[]} hierarchyFilters?\n   * @param hierarchyFilters\n   * @returns application\n   */\n  WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n    var getData = 'data';\n    var data = DataUtil.parse.parseJson(obj[getData]);\n    var result = {};\n    var value = 'value';\n    if (data.param) {\n      for (var i = 0; i < data.param.length; i++) {\n        var param = data.param[i];\n        var key = Object.keys(param)[0];\n        result[key] = param[key];\n      }\n    }\n    result[value] = data;\n    var pvtData = 'pvtData';\n    var url = 'url';\n    return {\n      data: JSON.stringify(result),\n      url: obj[url],\n      pvtData: obj[pvtData],\n      type: 'POST',\n      contentType: 'application/json; charset=utf-8'\n    };\n  };\n  return WebMethodAdaptor;\n}(UrlAdaptor);\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n *\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */function (_super) {\n  __extends(RemoteSaveAdaptor, _super);\n  /**\n   * @hidden\n   */\n  function RemoteSaveAdaptor() {\n    var _this = _super.call(this) || this;\n    setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n    return _this;\n  }\n  RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    this.pvt.position = position;\n    this.updateType = 'add';\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n    _super.prototype.remove.call(this, dm, keyField, val);\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: val,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n    this.updateType = 'update';\n    this.updateKey = keyField;\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: val,\n        action: 'update',\n        keyColumn: keyField,\n        key: val[keyField],\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n    var i;\n    var newData = request ? JSON.parse(request.data) : data;\n    data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n    if (this.updateType === 'add') {\n      _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n    }\n    if (this.updateType === 'update') {\n      _super.prototype.update.call(this, ds, this.updateKey, data);\n    }\n    this.updateType = undefined;\n    if (data.added) {\n      for (i = 0; i < data.added.length; i++) {\n        _super.prototype.insert.call(this, ds, data.added[i]);\n      }\n    }\n    if (data.changed) {\n      for (i = 0; i < data.changed.length; i++) {\n        _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n      }\n    }\n    if (data.deleted) {\n      for (i = 0; i < data.deleted.length; i++) {\n        _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n      }\n    }\n    return data;\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * Also perform the changes in the locally cached data to sync with the remote data.\n   * The result is used by the batch request.\n   *\n   * @param {DataManager} dm\n   * @param {CrudOptions} changes\n   * @param {RemoteArgs} e\n   * @param query\n   * @param original\n   */\n  RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e.url,\n        key: e.key\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  RemoteSaveAdaptor.prototype.addParams = function (options) {\n    var urlParams = new UrlAdaptor();\n    urlParams.addParams(options);\n  };\n  return RemoteSaveAdaptor;\n}(JsonAdaptor);\nexport { RemoteSaveAdaptor };\n/**\n * Fetch Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\n *\n * @hidden\n */\nvar CustomDataAdaptor = /** @class */function (_super) {\n  __extends(CustomDataAdaptor, _super);\n  function CustomDataAdaptor(props) {\n    var _this = _super.call(this) || this;\n    // options replaced the default adaptor options\n    _this.options = extend({}, _this.options, {\n      getData: new Function(),\n      addRecord: new Function(),\n      updateRecord: new Function(),\n      deleteRecord: new Function(),\n      batchUpdate: new Function()\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n  CustomDataAdaptor.prototype.getModuleName = function () {\n    return 'CustomDataAdaptor';\n  };\n  return CustomDataAdaptor;\n}(UrlAdaptor);\nexport { CustomDataAdaptor };\n/**\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\n *\n * @hidden\n */\nvar GraphQLAdaptor = /** @class */function (_super) {\n  __extends(GraphQLAdaptor, _super);\n  function GraphQLAdaptor(options) {\n    var _this = _super.call(this) || this;\n    _this.opt = options;\n    _this.schema = _this.opt.response;\n    _this.query = _this.opt.query;\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    // tslint:disable-next-line:no-empty\n    _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () {};\n    /* eslint-enable @typescript-eslint/no-empty-function */\n    _this.getQuery = function () {\n      return _this.query;\n    };\n    return _this;\n  }\n  GraphQLAdaptor.prototype.getModuleName = function () {\n    return 'GraphQLAdaptor';\n  };\n  /**\n   * Process the JSON data based on the provided queries.\n   *\n   * @param {DataManager} dm\n   * @param {Query} query?\n   * @param datamanager\n   * @param query\n   */\n  GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\n    var urlQuery = _super.prototype.processQuery.apply(this, arguments);\n    var dm = JSON.parse(urlQuery.data);\n    // constructing GraphQL parameters\n    var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where', 'search', 'requiresCounts', 'aggregates', 'params'];\n    var temp = {};\n    var str = 'searchwhereparams';\n    keys.filter(function (e) {\n      temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\n    });\n    var vars = this.getVariables() || {};\n    // tslint:disable-next-line:no-string-literal\n    vars['datamanager'] = temp;\n    var data = JSON.stringify({\n      query: this.getQuery(),\n      variables: vars\n    });\n    urlQuery.data = data;\n    return urlQuery;\n  };\n  /**\n   * Returns the data from the query processing.\n   * It will also cache the data for later usage.\n   *\n   * @param {DataResult} data\n   * @param {DataManager} ds?\n   * @param {Query} query?\n   * @param {Request} xhr?\n   * @param {Object} request?\n   * @param resData\n   * @param ds\n   * @param query\n   * @param xhr\n   * @param request\n   * @returns DataResult\n   */\n  GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\n    var res = resData;\n    var count;\n    var aggregates;\n    var result = getValue(this.schema.result, res.data);\n    if (this.schema.count) {\n      count = getValue(this.schema.count, res.data);\n    }\n    if (this.schema.aggregates) {\n      aggregates = getValue(this.schema.aggregates, res.data);\n      aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\n    }\n    var pvt = request.pvtData || {};\n    var args = {\n      result: result,\n      aggregates: aggregates\n    };\n    var data = args;\n    if (pvt && pvt.groups && pvt.groups.length) {\n      this.getAggregateResult(pvt, data, args, null, query);\n    }\n    return !isNullOrUndefined(count) ? {\n      result: args.result,\n      count: count,\n      aggregates: aggregates\n    } : args.result;\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   */\n  GraphQLAdaptor.prototype.insert = function () {\n    var inserted = _super.prototype.insert.apply(this, arguments);\n    return this.generateCrudData(inserted, 'insert');\n  };\n  /**\n   * Prepare and returns request body which is used to update a new record in the table.\n   */\n  GraphQLAdaptor.prototype.update = function () {\n    var inserted = _super.prototype.update.apply(this, arguments);\n    return this.generateCrudData(inserted, 'update');\n  };\n  /**\n   * Prepare and returns request body which is used to remove a new record in the table.\n   */\n  GraphQLAdaptor.prototype.remove = function () {\n    var inserted = _super.prototype.remove.apply(this, arguments);\n    return this.generateCrudData(inserted, 'remove');\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   *\n   * @param {DataManager} dm\n   * @param {CrudOptions} changes\n   * @param {Object} e\n   * @param e.key\n   * @param {Query} query\n   * @param {Object} original\n   */\n  GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var batch = _super.prototype.batchRequest.apply(this, arguments);\n    // tslint:disable-next-line:typedef\n    var bData = JSON.parse(batch.data);\n    bData.key = e.key;\n    batch.data = JSON.stringify(bData);\n    return this.generateCrudData(batch, 'batch');\n  };\n  GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\n    var parsed = JSON.parse(crudData.data);\n    crudData.data = JSON.stringify({\n      query: this.opt.getMutation(action),\n      variables: parsed\n    });\n    return crudData;\n  };\n  return GraphQLAdaptor;\n}(UrlAdaptor);\nexport { GraphQLAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n *\n * @hidden\n */\nvar CacheAdaptor = /** @class */function (_super) {\n  __extends(CacheAdaptor, _super);\n  /**\n   * Constructor for CacheAdaptor class.\n   *\n   * @param {CacheAdaptor} adaptor?\n   * @param {number} timeStamp?\n   * @param {number} pageSize?\n   * @param adaptor\n   * @param timeStamp\n   * @param pageSize\n   * @hidden\n   */\n  function CacheAdaptor(adaptor, timeStamp, pageSize) {\n    var _this = _super.call(this) || this;\n    _this.isCrudAction = false;\n    _this.isInsertAction = false;\n    if (!isNullOrUndefined(adaptor)) {\n      _this.cacheAdaptor = adaptor;\n    }\n    _this.pageSize = pageSize;\n    _this.guidId = DataUtil.getGuid('cacheAdaptor');\n    var obj = {\n      keys: [],\n      results: []\n    };\n    window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n    var guid = _this.guidId;\n    if (!isNullOrUndefined(timeStamp)) {\n      setInterval(function () {\n        var data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n        var forDel = [];\n        for (var i = 0; i < data.results.length; i++) {\n          var currentTime = +new Date();\n          var requestTime = +new Date(data.results[i].timeStamp);\n          data.results[i].timeStamp = currentTime - requestTime;\n          if (currentTime - requestTime > timeStamp) {\n            forDel.push(i);\n          }\n        }\n        for (var i = 0; i < forDel.length; i++) {\n          data.results.splice(forDel[i], 1);\n          data.keys.splice(forDel[i], 1);\n        }\n        window.localStorage.removeItem(guid);\n        window.localStorage.setItem(guid, JSON.stringify(data));\n      }, timeStamp);\n    }\n    return _this;\n  }\n  /**\n   * It will generate the key based on the URL when we send a request to server.\n   *\n   * @param {string} url\n   * @param {Query} query?\n   * @param query\n   * @hidden\n   */\n  CacheAdaptor.prototype.generateKey = function (url, query) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var key = url;\n    var page = 'onPage';\n    if (page in singles) {\n      key += singles[page].pageIndex;\n    }\n    queries.sorts.forEach(function (obj) {\n      key += obj.e.direction + obj.e.fieldName;\n    });\n    queries.groups.forEach(function (obj) {\n      key += obj.e.fieldName;\n    });\n    queries.searches.forEach(function (obj) {\n      key += obj.e.searchKey;\n    });\n    for (var filter = 0; filter < queries.filters.length; filter++) {\n      var currentFilter = queries.filters[filter];\n      if (currentFilter.e.isComplex) {\n        var newQuery = query.clone();\n        newQuery.queries = [];\n        for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n          newQuery.queries.push({\n            fn: 'onWhere',\n            e: currentFilter.e.predicates[i],\n            filter: query.queries.filter\n          });\n        }\n        key += currentFilter.e.condition + this.generateKey(url, newQuery);\n      } else {\n        key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n      }\n    }\n    return key;\n  };\n  /**\n   * Process the query to generate request body.\n   * If the data is already cached, it will return the cached data.\n   *\n   * @param {DataManager} dm\n   * @param {Query} query?\n   * @param {Object[]} hierarchyFilters?\n   * @param query\n   * @param hierarchyFilters\n   */\n  CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var key = this.generateKey(dm.dataSource.url, query);\n    var cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n    if (data != null && !this.isCrudAction && !this.isInsertAction) {\n      return data;\n    }\n    this.isCrudAction = null;\n    this.isInsertAction = null;\n    /* eslint-disable prefer-spread */\n    return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    /* eslint-enable prefer-spread */\n  };\n  /**\n   * Returns the data from the query processing.\n   * It will also cache the data for later usage.\n   *\n   * @param {DataResult} data\n   * @param {DataManager} ds?\n   * @param {Query} query?\n   * @param {Request} xhr?\n   * @param {Fetch} request?\n   * @param {CrudOptions} changes?\n   * @param ds\n   * @param query\n   * @param xhr\n   * @param request\n   * @param changes\n   */\n  CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (this.isInsertAction || request && this.cacheAdaptor.options.batch && DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post') {\n      return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n    }\n    /* eslint-disable prefer-spread */\n    data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    /* eslint-enable prefer-spread */\n    var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n    var obj = {};\n    obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var index = obj.keys.indexOf(key);\n    if (index !== -1) {\n      obj.results.splice(index, 1);\n      obj.keys.splice(index, 1);\n    }\n    obj.results[obj.keys.push(key) - 1] = {\n      keys: key,\n      result: data.result,\n      timeStamp: new Date(),\n      count: data.count\n    };\n    while (obj.results.length > this.pageSize) {\n      obj.results.splice(0, 1);\n      obj.keys.splice(0, 1);\n    }\n    window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n    return data;\n  };\n  /**\n   * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n   *\n   * @param {DataManager} dm\n   * @param {Request} request\n   * @param {Fetch} settings?\n   * @param settings\n   */\n  CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.headers.set('Accept', this.cacheAdaptor.options.multipartAccept);\n    }\n    if (!dm.dataSource.crossDomain) {\n      request.headers.set('Accept', this.cacheAdaptor.options.accept);\n    }\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   *\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName\n   */\n  CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.update(dm, keyField, value, tableName);\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   *\n   * @param {DataManager} dm\n   * @param {Object} data\n   * @param {string} tableName?\n   * @param tableName\n   */\n  CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n    this.isInsertAction = true;\n    return this.cacheAdaptor.insert(dm, data, tableName);\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   *\n   * @param {DataManager} dm\n   * @param {string} keyField\n   * @param {Object} value\n   * @param {string} tableName?\n   * @param tableName\n   */\n  CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   *\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n  CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    return this.cacheAdaptor.batchRequest(dm, changes, e);\n  };\n  return CacheAdaptor;\n}(UrlAdaptor);\nexport { CacheAdaptor };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","merge","extend","isNullOrUndefined","setValue","getValue","DataUtil","Query","Predicate","consts","GroupGuid","Adaptor","ds","options","from","requestType","sortBy","select","skip","group","take","search","count","where","aggregates","expand","type","dataSource","pvt","processResponse","data","query","xhr","JsonAdaptor","_super","apply","arguments","processQuery","dataManager","result","json","slice","length","countFlg","ret","key","lazyLoad","keyCount","sort","page","i","value","agg","queries","fn","push","e","unshift","call","field","undefined","args","lazyLoadData","lazyLoadGroup","isCountRequired","getAggregate","onDemandGroupInfo","req","onWhere","level","fieldName","comparer","onSortBy","parseInt","toString","formGroupResult","field_1","filter","x","onPage","uid","childLevel","records","aggQuery","filterQueries","tmp","batchRequest","dm","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","obj","validate","onAggregates","onSearch","fieldNames","getFieldList","j","getObject","searchKey","ignoreCase","ignoreAccent","isLazyLoadGroupSort","fnCompare","endsWith","fnSort","replace","onGroup","size","pageSize","start","pageIndex","end","onRange","onTake","nos","onSkip","onSelect","tableName","position","splice","keyField","Date","UrlAdaptor","hierarchyFilters","getQueryRequest","singles","filterQueryLists","params","url","temp","request","sorts","groups","filters","searches","callAdaptorFunction","name","direction","getFiltersFrom","toJson","res","getModuleName","keys_3","keys","_i","keys_1","prop","isNull","fields","operator","getRequestQuery","reqParams","_a","keys_2","JSON","stringify","parse","jsonDateReplacer","pvtData","contentType","convertToQueryString","indexOf","request1","param","fromTable","distincts","selects","expands","headers","get","handleTimeZone","timeZoneHandling","parseJson","requests","groupDs","action","isExpand","isArray","val","formRemoteGroupedData","getAggregateResult","items","childLvl","lvl","getGroupedRecords","hasRecords","childGroupedRecords","concat","original","batchUrl","crudUrl","removeUrl","dataType","changed","added","deleted","table","getAddParams","beforeSend","insertUrl","keyColumn","updateUrl","fKey","pKey","predicats","or","pData","aggregateData","aggregate","isServerGrouping","groupQuery","addParams","Error","ODataAdaptor","props","_this","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","onPredicate","predicate","requiresCast","returnValue","guid","getField","replacer","toLowerCase","encodeURIComponent","isGuid","odBiOperator","odv4UniOperator","odUniOperator","charAt","lastIndexOf","substring","splittedStringValue","split","splittedValue","join","onComplexPredicate","predicates","onEachWhere","condition","isComplex","onEachSearch","throwError","onEachSort","reverse","onCount","settings","set","metaCheck","rootUrl","dataUrls","resourceTableName","dataCopy","results","metaData","emptyAndBatch","processBatchResponse","versionCheck","fetchRequest","version","oDataCount","format","requiresFormat","keys_4","localTimeReplacer","convertObj","dateParse","toLocalTime","localTime","compareAndRemove","initialGuid","getGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","arr","stat","dateTime","toJSON","generateBodyContent","org","forEach","change","o","date","method","cIdx","jsonObj","exVal","exec","changeGuid","test","isPlainObject","final","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","splits","sel","exp","close_1","combineVal","expandQueryIndex","idx","ex","onDistinct","distinctFields","map","metaName","metaV4Name","dataUrl","dataCount","dataV4Count","WebApiAdaptor","_loop_1","location","host","_loop_2","_loop_3","state","datTime","Count","Items","WebMethodAdaptor","getData","RemoteSaveAdaptor","updateKey","newData","urlParams","CustomDataAdaptor","Function","addRecord","updateRecord","deleteRecord","batchUpdate","GraphQLAdaptor","opt","schema","response","getVariables","getQuery","datamanager","urlQuery","str","vars","variables","resData","inserted","generateCrudData","bData","crudData","parsed","getMutation","CacheAdaptor","adaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","window","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","clone","cachedItems","index","crossDomain"],"sources":["/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/node_modules/@syncfusion/ej2-data/src/adaptors.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n *\n * @hidden\n */\nvar Adaptor = /** @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     *\n     * @param {DataOptions} ds?\n     * @param ds\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors\n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates',\n            expand: 'expand'\n        };\n        /**\n         * Specifies the type of adaptor.\n         *\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     *\n     * @param {Object} data\n     * @param {DataOptions} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param ds\n     * @param query\n     * @param xhr\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n *\n * @hidden\n */\nvar JsonAdaptor = /** @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     *\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var lazyLoad = {};\n        var keyCount = 0;\n        var group = [];\n        var sort = [];\n        var page;\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n            keyCount++;\n            lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n        }\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            if ((key.fn === 'onPage' || key.fn === 'onGroup' || key.fn === 'onSortBy') && query.lazyLoad.length) {\n                if (key.fn === 'onGroup') {\n                    group.push(key.e);\n                }\n                if (key.fn === 'onPage') {\n                    page = key.e;\n                }\n                if (key.fn === 'onSortBy') {\n                    sort.unshift(key.e);\n                }\n                continue;\n            }\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (keyCount) {\n            var args = {\n                query: query, lazyLoad: lazyLoad, result: result, group: group, page: page, sort: sort\n            };\n            var lazyLoadData = this.lazyLoadGroup(args);\n            result = lazyLoadData.result;\n            count = lazyLoadData.count;\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n     *\n     * @param  {LazyLoadGroupArgs} args\n     */\n    JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n        var count = 0;\n        var agg = this.getAggregate(args.query);\n        var result = args.result;\n        if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n            var req = args.lazyLoad.onDemandGroupInfo;\n            for (var i = req.where.length - 1; i >= 0; i--) {\n                result = this.onWhere(result, req.where[i]);\n            }\n            if (args.group.length !== req.level) {\n                var field = args.group[req.level].fieldName;\n                result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n                result = this.onSortBy(result, args.sort[parseInt(req.level.toString(), 10)], args.query, true);\n            }\n            else {\n                for (var i = args.sort.length - 1; i >= req.level; i--) {\n                    result = this.onSortBy(result, args.sort[parseInt(i.toString(), 10)], args.query, false);\n                }\n            }\n            count = result.length;\n            var data = result;\n            result = result.slice(req.skip);\n            result = result.slice(0, req.take);\n            if (args.group.length !== req.level) {\n                this.formGroupResult(result, data);\n            }\n        }\n        else {\n            var field_1 = args.group[0].fieldName;\n            result = DataUtil.group(result, field_1, agg, null, null, args.group[0].comparer, true);\n            count = result.length;\n            var data = result;\n            if (args.sort.length) {\n                var sort = args.sort.length > 1 ?\n                    args.sort.filter(function (x) { return x.fieldName === field_1; })[0] : args.sort[0];\n                result = this.onSortBy(result, sort, args.query, true);\n            }\n            if (args.page) {\n                result = this.onPage(result, args.page, args.query);\n            }\n            this.formGroupResult(result, data);\n        }\n        return { result: result, count: count };\n    };\n    JsonAdaptor.prototype.formGroupResult = function (result, data) {\n        if (result.length && data.length) {\n            var uid = 'GroupGuid';\n            var childLevel = 'childLevels';\n            var level = 'level';\n            var records = 'records';\n            result[uid] = data[uid];\n            result[childLevel] = data[childLevel];\n            result[level] = data[level];\n            result[records] = data[records];\n        }\n        return result;\n    };\n    /**\n     * Separate the aggregate query from the given queries\n     *\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.getAggregate = function (query) {\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return agg;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     *\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     *\n     * @param {Object[]} ds\n     * @param {{validate:Function}} e\n     * @param e.validate\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     *\n     * @param {Object[]} ds\n     * @param e\n     * @param {string} } type\n     * @param e.field\n     * @param e.type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     *\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     *\n     * @param {Object[]} ds\n     * @param e\n     * @param {Object} b\n     * @param e.comparer\n     * @param e.fieldName\n     * @param query\n     * @param isLazyLoadGroupSort\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query, isLazyLoadGroupSort) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, isLazyLoadGroupSort ? 'key' : field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     *\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var agg = this.getAggregate(query);\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     *\n     * @param {Object[]} ds\n     * @param e\n     * @param {number} } pageIndex\n     * @param e.pageSize\n     * @param {Query} query\n     * @param e.pageIndex\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     *\n     * @param {Object[]} ds\n     * @param e\n     * @param {number} } end\n     * @param e.start\n     * @param e.end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     *\n     * @param {Object[]} ds\n     * @param {{nos:number}} e\n     * @param e.nos\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     *\n     * @param {Object[]} ds\n     * @param {{nos:number}} e\n     * @param e.nos\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     *\n     * @param {Object[]} ds\n     * @param {{fieldNames:string}} e\n     * @param e.fieldNames\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     *\n     * @param {DataManager} dm\n     * @param {Object} data\n     * @param tableName\n     * @param query\n     * @param {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {Object} value\n     * @param {string} tableName?\n     * @param tableName\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            value = DataUtil.getObject(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (DataUtil.getObject(keyField, ds[i]) === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {Object} value\n     * @param {string} tableName?\n     * @param tableName\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key;\n        if (!isNullOrUndefined(keyField)) {\n            key = getValue(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (!isNullOrUndefined(keyField) && (getValue(keyField, ds[i])) === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n *\n * @hidden\n */\nvar UrlAdaptor = /** @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     *\n     * @param {DataManager} dm\n     * @param {Query} query\n     * @param {Object[]} hierarchyFilters?\n     * @param hierarchyFilters\n     * @returns p\n     */\n    // tslint:disable-next-line:max-func-body-length\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n            if ((this.getModuleName &&\n                this.getModuleName() === 'ODataV4Adaptor') &&\n                !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n                res = '(' + res + ')';\n            }\n            request.filters.push(res);\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        if (query.lazyLoad.length) {\n            for (var i = 0; i < query.lazyLoad.length; i++) {\n                req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n            }\n        }\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     *\n     * @param {Object} req\n     * @param request\n     * @param {Query} query\n     * @param {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     *\n     * @param {DataResult} data\n     * @param {DataOptions} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param {Object} request?\n     * @param {CrudOptions} changes?\n     * @param ds\n     * @param query\n     * @param xhr\n     * @param request\n     * @param changes\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.headers.get('Content-Type') &&\n            xhr.headers.get('Content-Type').indexOf('application/json') !== -1) {\n            var handleTimeZone = DataUtil.timeZoneHandling;\n            if (ds && !ds.timeZoneHandling) {\n                DataUtil.timeZoneHandling = false;\n            }\n            data = DataUtil.parse.parseJson(data);\n            DataUtil.timeZoneHandling = handleTimeZone;\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.headers.get('Content-Type') &&\n            xhr.headers.get('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        var isExpand = false;\n        if (Array.isArray(data.result) && data.result.length) {\n            var key = 'key';\n            var val = 'value';\n            var level = 'level';\n            if (!isNullOrUndefined(data.result[0][key])) {\n                args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n            }\n            if (query && query.lazyLoad.length && pvt.groups.length) {\n                for (var i = 0; i < query.lazyLoad.length; i++) {\n                    if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n                        var value = query.lazyLoad[i][val][level];\n                        if (pvt.groups.length === value) {\n                            isExpand = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (!isExpand) {\n            this.getAggregateResult(pvt, data, args, groupDs, query);\n        }\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n        for (var i = 0; i < data.length; i++) {\n            if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n                this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n            }\n        }\n        var uid = 'GroupGuid';\n        var childLvl = 'childLevels';\n        var lvl = 'level';\n        var records = 'records';\n        data[uid] = consts[uid];\n        data[lvl] = level;\n        data[childLvl] = childLevel;\n        data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n        return data;\n    };\n    UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n        var childGroupedRecords = [];\n        var records = 'records';\n        for (var i = 0; i < data.length; i++) {\n            if (!hasRecords) {\n                for (var j = 0; j < data[i].items.length; j++) {\n                    childGroupedRecords.push(data[i].items[j]);\n                }\n            }\n            else {\n                childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n            }\n        }\n        return childGroupedRecords;\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     *\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     *\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     *\n     * @param {DataManager} dm\n     * @param {CrudOptions} changes\n     * @param {Object} e\n     * @param query\n     * @param original\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     *\n     * @param  {DataManager} dm\n     * @param  {Request} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     *\n     * @param {DataManager} dm\n     * @param {Object} data\n     * @param {string} tableName\n     * @param query\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {number|string} value\n     * @param {string} tableName\n     * @param query\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {Object} value\n     * @param {string} tableName\n     * @param query\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: DataUtil.getObject(keyField, value),\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     *\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        var key = 'key';\n        var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n        if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n *\n * @hidden\n */\nvar ODataAdaptor = /** @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    ODataAdaptor.prototype.getModuleName = function () {\n        return 'ODataAdaptor';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     *\n     * @param {Predicate} pred\n     * @param {boolean} requiresCast?\n     * @param predicate\n     * @param query\n     * @param requiresCast\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = val.replace(/'/g, '\\'\\'');\n            if (predicate.ignoreCase) {\n                val = val.toLowerCase();\n            }\n            if (predicate.operator !== 'like') {\n                val = encodeURIComponent(val);\n            }\n            if (predicate.operator !== 'wildcard' && predicate.operator !== 'like') {\n                val = '\\'' + val + '\\'';\n            }\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        if (predicate.operator === 'isempty' || predicate.operator === 'isnull' || predicate.operator === 'isnotempty' ||\n            predicate.operator === 'isnotnull') {\n            operator = predicate.operator.indexOf('isnot') !== -1 ? DataUtil.odBiOperator['notequal'] : DataUtil.odBiOperator['equal'];\n            val = predicate.operator === 'isnull' || predicate.operator === 'isnotnull' ? null : '\\'\\'';\n        }\n        else {\n            operator = DataUtil.odBiOperator[predicate.operator];\n        }\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n            operator = DataUtil.odv4UniOperator[predicate.operator];\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'like') {\n            val = val;\n            if (val.indexOf('%') !== -1) {\n                if (val.charAt(0) === '%' && val.lastIndexOf('%') < 2) {\n                    val = val.substring(1, val.length);\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['startswith'] : DataUtil.odUniOperator['startswith'];\n                }\n                else if (val.charAt(val.length - 1) === '%' && val.indexOf('%') > val.length - 3) {\n                    val = val.substring(0, val.length - 1);\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['endswith'] : DataUtil.odUniOperator['endswith'];\n                }\n                else if (val.lastIndexOf('%') !== val.indexOf('%') && val.lastIndexOf('%') > val.indexOf('%') + 1) {\n                    val = val.substring(val.indexOf('%') + 1, val.lastIndexOf('%'));\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n                }\n                else {\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n                }\n            }\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n        }\n        else if (operator === 'wildcard') {\n            val = val;\n            if (val.indexOf('*') !== -1) {\n                var splittedStringValue = val.split('*');\n                var splittedValue = void 0;\n                var count = 0;\n                if (val.indexOf('*') !== 0 && splittedStringValue[0].indexOf('%3f') === -1 &&\n                    splittedStringValue[0].indexOf('?') === -1) {\n                    splittedValue = splittedStringValue[0];\n                    splittedValue = '\\'' + splittedValue + '\\'';\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['startswith'] : DataUtil.odUniOperator['startswith'];\n                    returnValue += operator + '(';\n                    returnValue += field + ',';\n                    if (guid) {\n                        returnValue += guid;\n                    }\n                    returnValue += splittedValue + ')';\n                    count++;\n                }\n                if (val.lastIndexOf('*') !== val.length - 1 && splittedStringValue[splittedStringValue.length - 1].indexOf('%3f') === -1 &&\n                    splittedStringValue[splittedStringValue.length - 1].indexOf('?') === -1) {\n                    splittedValue = splittedStringValue[splittedStringValue.length - 1];\n                    splittedValue = '\\'' + splittedValue + '\\'';\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['endswith'] : DataUtil.odUniOperator['endswith'];\n                    if (count > 0) {\n                        returnValue += ' and ';\n                    }\n                    returnValue += operator + '(';\n                    returnValue += field + ',';\n                    if (guid) {\n                        returnValue += guid;\n                    }\n                    returnValue += splittedValue + ')';\n                    count++;\n                }\n                if (splittedStringValue.length > 2) {\n                    for (var i = 1; i < splittedStringValue.length - 1; i++) {\n                        if (splittedStringValue[i].indexOf('%3f') === -1 && splittedStringValue[i].indexOf('?') === -1) {\n                            splittedValue = splittedStringValue[i];\n                            splittedValue = '\\'' + splittedValue + '\\'';\n                            operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                                DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n                            if (count > 0) {\n                                returnValue += ' and ';\n                            }\n                            if (operator === 'substringof' || operator === 'not substringof') {\n                                var temp = splittedValue;\n                                splittedValue = field;\n                                field = temp;\n                            }\n                            returnValue += operator + '(';\n                            returnValue += field + ',';\n                            if (guid) {\n                                returnValue += guid;\n                            }\n                            returnValue += splittedValue + ')';\n                            count++;\n                        }\n                    }\n                }\n                if (count === 0) {\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n                    if (val.indexOf('?') !== -1 || val.indexOf('%3f') !== -1) {\n                        val = val.indexOf('?') !== -1 ? val.split('?').join('') : val.split('%3f').join('');\n                    }\n                    val = '\\'' + val + '\\'';\n                }\n                else {\n                    operator = 'wildcard';\n                }\n            }\n            else {\n                operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                    DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n                if (val.indexOf('?') !== -1 || val.indexOf('%3f') !== -1) {\n                    val = val.indexOf('?') !== -1 ? val.split('?').join('') : val.split('%3f').join('');\n                }\n                val = '\\'' + val + '\\'';\n            }\n        }\n        if (operator === 'substringof' || operator === 'not substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        if (operator !== 'wildcard') {\n            returnValue += operator + '(';\n            returnValue += field + ',';\n            if (guid) {\n                returnValue += guid;\n            }\n            returnValue += val + ')';\n        }\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     *\n     * @param {Predicate} pred\n     * @param {boolean} requiresCast?\n     * @param predicate\n     * @param query\n     * @param requiresCast\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     *\n     * @param {Predicate} filter\n     * @param {boolean} requiresCast?\n     * @param query\n     * @param requiresCast\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     *\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     *\n     * @param e\n     * @param {string} operator\n     * @param {string} key\n     * @param {boolean} } ignoreCase\n     * @param e.fields\n     * @param e.operator\n     * @param e.key\n     * @param e.ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     *\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     *\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     *\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     *\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     *\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     *\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     *\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     *\n     * @param {DataManager} dm\n     * @param {Request} request\n     * @param {Fetch} settings?\n     * @param settings\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.headers.set('Accept', this.options.multipartAccept);\n            request.headers.set('DataServiceVersion', '2.0');\n            //request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.headers.set('Accept', this.options.accept);\n        }\n        request.headers.set('DataServiceVersion', '2.0');\n        request.headers.set('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     *\n     * @param {DataResult} data\n     * @param {DataOptions} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param {Fetch} request?\n     * @param {CrudOptions} changes?\n     * @param ds\n     * @param query\n     * @param xhr\n     * @param request\n     * @param changes\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaCheck = 'odata.metadata';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\n            var dataUrls = data[metaCheck].split('/$metadata#');\n            this.rootUrl = dataUrls[0];\n            this.resourceTableName = dataUrls[1];\n        }\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.fetchRequest.headers.get('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     *\n     * @param {Object} req\n     * @param request\n     * @param {Query} query\n     * @param {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     *\n     * @param {DataManager} dm\n     * @param {Object} data\n     * @param {string} tableName?\n     * @param tableName\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {number} value\n     * @param {string} tableName?\n     * @param tableName\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {Object} value\n     * @param {string} tableName?\n     * @param tableName\n     * @param query\n     * @param original\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     *\n     * @param {DataManager} dm\n     * @param {CrudOptions} changes\n     * @param {RemoteArgs} e\n     * @param query\n     * @param original\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = (dm.dataSource.batchUrl || this.rootUrl) ?\n            (dm.dataSource.batchUrl || this.rootUrl) + '/' + this.options.batch :\n            (dm.dataSource.batchUrl || dm.dataSource.url).replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     *\n     * @param {Object[]} arr\n     * @param {RemoteArgs} e\n     * @param dm\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) {\n                var url = DataUtil.getObject(key, data[i]);\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                    return '(' + url + ')';\n                }\n                else if (url instanceof Date) {\n                    var dateTime = data[i][key];\n                    return '(' + dateTime.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + url + \"')\";\n                }\n            },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     *\n     * @param {Object[]} arr\n     * @param {RemoteArgs} e\n     * @param dm\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     *\n     * @param {Object[]} arr\n     * @param {RemoteArgs} e\n     * @param dm\n     * @param org\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) {\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n                    return '(' + data[i][key] + ')';\n                }\n                else if (data[i][key] instanceof Date) {\n                    var date = data[i][key];\n                    return '(' + date.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + data[i][key] + \"')\";\n                }\n            },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.headers.get('Content-Type') && xhr.headers.get('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.headers.get('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n *\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModuleName = function () {\n        return 'ODataV4Adaptor';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     *\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     *\n     * @param {Predicate} pred\n     * @param {boolean} requiresCast?\n     * @param predicate\n     * @param query\n     * @param requiresCast\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        if (query instanceof Query) {\n            var queries = this.getQueryRequest(query);\n            for (var i = 0; i < queries.filters.length; i++) {\n                if (queries.filters[i].e.key === predicate.value) {\n                    requiresCast = true;\n                }\n            }\n        }\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        if (DataUtil.parse.isGuid(val)) {\n            returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n        }\n        return returnValue;\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     *\n     * @param e\n     * @param {string} operator\n     * @param {string} key\n     * @param {boolean} } ignoreCase\n     * @param e.fields\n     * @param e.operator\n     * @param e.key\n     * @param e.ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     *\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     *\n     * @param {string} e\n     * @param e.selects\n     * @param e.expands\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            if (splits.length === 2) {\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\n                    if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\n                    }\n                    else {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\n                    }\n                }\n                else {\n                    selected[splits[0]].push('$select=' + splits[1]);\n                }\n            }\n            else {\n                var sel = '$select=' + splits[splits.length - 1];\n                var exp = '';\n                var close_1 = '';\n                for (var i = 1; i < splits.length - 1; i++) {\n                    exp = exp + '$expand=' + splits[i] + '(';\n                    close_1 = close_1 + ')';\n                }\n                var combineVal = exp + sel + close_1;\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 &&\n                    _this.expandQueryIndex(selected[splits[0]], true)) {\n                    var idx = _this.expandQueryIndex(selected[splits[0]]);\n                    selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\n                }\n                else {\n                    selected[splits[0]].push(combineVal);\n                }\n            }\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\n        for (var i = 0; i < query.length; i++) {\n            if (query[i].indexOf('$expand') !== -1) {\n                return isExpand ? true : i;\n            }\n        }\n        return isExpand ? false : 0;\n    };\n    /**\n     * Returns the groupby query string.\n     *\n     * @param {string} e\n     * @param distinctFields\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     *\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     *\n     * @param  {DataManager} dm\n     * @param  {Request} request\n     * @param  {Fetch} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.headers.set('Prefer', 'return=representation');\n        }\n        request.headers.set('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     *\n     * @param {DataResult} data\n     * @param {DataOptions} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param {Fetch} request?\n     * @param {CrudOptions} changes?\n     * @param ds\n     * @param query\n     * @param xhr\n     * @param request\n     * @param changes\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaName = '@odata.context';\n        var metaV4Name = '@context';\n        if ((request && request.type === 'GET') && !this.rootUrl && (data[metaName] || data[metaV4Name])) {\n            var dataUrl = data[metaName] ? data[metaName].split('/$metadata#') : data[metaV4Name].split('/$metadata#');\n            this.rootUrl = dataUrl[0];\n            this.resourceTableName = dataUrl[1];\n        }\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        var dataV4Count = '@count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n            else if (dataV4Count in data) {\n                count = data[dataV4Count];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n *\n * @hidden\n */\nvar WebApiAdaptor = /** @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebApiAdaptor.prototype.getModuleName = function () {\n        return 'WebApiAdaptor';\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     *\n     * @param {DataManager} dm\n     * @param {Object} data\n     * @param {string} tableName?\n     * @param tableName\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {number} value\n     * @param {string} tableName?\n     * @param tableName\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {Object} value\n     * @param {string} tableName?\n     * @param tableName\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var _this = this;\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var req = [];\n        var _loop_1 = function (i, x) {\n            changes.addedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': 'POST ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //insertion\n        for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n            _loop_1(i, x);\n        }\n        var _loop_2 = function (i, x) {\n            changes.changedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': _this.options.updateType + ' ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //updation\n        for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n            _loop_2(i, x);\n        }\n        var _loop_3 = function (i, x) {\n            changes.deletedRecords.forEach(function (j, d) {\n                var state = {\n                    'mtd': 'DELETE ',\n                    'url': function (data, i, key) {\n                        var url = DataUtil.getObject(key, data[i]);\n                        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                            return '/' + url;\n                        }\n                        else if (url instanceof Date) {\n                            var datTime = data[i][key];\n                            return '/' + datTime.toJSON();\n                        }\n                        else {\n                            return \"/'\" + url + \"'\";\n                        }\n                    },\n                    'data': function (data, i) { return ''; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url)\n                    + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //deletion\n        for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n            _loop_3(i, x);\n        }\n        req.push('--' + initialGuid + '--', '');\n        return {\n            type: 'POST',\n            url: url,\n            contentType: 'multipart/mixed; boundary=' + initialGuid,\n            data: req.join('\\r\\n')\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     *\n     * @param  {DataManager} dm\n     * @param  {Request} request\n     * @param  {Fetch} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.headers.set('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     *\n     * @param {DataResult} data\n     * @param {DataOptions} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param {Fetch} request?\n     * @param {CrudOptions} changes?\n     * @param ds\n     * @param query\n     * @param xhr\n     * @param request\n     * @param changes\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.fetchRequest.headers.get('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n *\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     *\n     * @param {DataManager} dm\n     * @param {Query} query\n     * @param {Object[]} hierarchyFilters?\n     * @param hierarchyFilters\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n *\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        this.pvt.position = position;\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        var newData = request ? JSON.parse(request.data) : data;\n        data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     *\n     * @param {DataManager} dm\n     * @param {CrudOptions} changes\n     * @param {RemoteArgs} e\n     * @param query\n     * @param original\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\nexport { RemoteSaveAdaptor };\n/**\n * Fetch Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\n *\n * @hidden\n */\nvar CustomDataAdaptor = /** @class */ (function (_super) {\n    __extends(CustomDataAdaptor, _super);\n    function CustomDataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            getData: new Function(),\n            addRecord: new Function(),\n            updateRecord: new Function(),\n            deleteRecord: new Function(),\n            batchUpdate: new Function()\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    CustomDataAdaptor.prototype.getModuleName = function () {\n        return 'CustomDataAdaptor';\n    };\n    return CustomDataAdaptor;\n}(UrlAdaptor));\nexport { CustomDataAdaptor };\n/**\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\n *\n * @hidden\n */\nvar GraphQLAdaptor = /** @class */ (function (_super) {\n    __extends(GraphQLAdaptor, _super);\n    function GraphQLAdaptor(options) {\n        var _this = _super.call(this) || this;\n        _this.opt = options;\n        _this.schema = _this.opt.response;\n        _this.query = _this.opt.query;\n        /* eslint-disable @typescript-eslint/no-empty-function */\n        // tslint:disable-next-line:no-empty\n        _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () { };\n        /* eslint-enable @typescript-eslint/no-empty-function */\n        _this.getQuery = function () { return _this.query; };\n        return _this;\n    }\n    GraphQLAdaptor.prototype.getModuleName = function () {\n        return 'GraphQLAdaptor';\n    };\n    /**\n     * Process the JSON data based on the provided queries.\n     *\n     * @param {DataManager} dm\n     * @param {Query} query?\n     * @param datamanager\n     * @param query\n     */\n    GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\n        var urlQuery = _super.prototype.processQuery.apply(this, arguments);\n        var dm = JSON.parse(urlQuery.data);\n        // constructing GraphQL parameters\n        var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where',\n            'search', 'requiresCounts', 'aggregates', 'params'];\n        var temp = {};\n        var str = 'searchwhereparams';\n        keys.filter(function (e) {\n            temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\n        });\n        var vars = this.getVariables() || {};\n        // tslint:disable-next-line:no-string-literal\n        vars['datamanager'] = temp;\n        var data = JSON.stringify({\n            query: this.getQuery(),\n            variables: vars\n        });\n        urlQuery.data = data;\n        return urlQuery;\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     *\n     * @param {DataResult} data\n     * @param {DataManager} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param {Object} request?\n     * @param resData\n     * @param ds\n     * @param query\n     * @param xhr\n     * @param request\n     * @returns DataResult\n     */\n    GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\n        var res = resData;\n        var count;\n        var aggregates;\n        var result = getValue(this.schema.result, res.data);\n        if (this.schema.count) {\n            count = getValue(this.schema.count, res.data);\n        }\n        if (this.schema.aggregates) {\n            aggregates = getValue(this.schema.aggregates, res.data);\n            aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\n        }\n        var pvt = request.pvtData || {};\n        var args = { result: result, aggregates: aggregates };\n        var data = args;\n        if (pvt && pvt.groups && pvt.groups.length) {\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        return !isNullOrUndefined(count) ? { result: args.result, count: count, aggregates: aggregates } : args.result;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     */\n    GraphQLAdaptor.prototype.insert = function () {\n        var inserted = _super.prototype.insert.apply(this, arguments);\n        return this.generateCrudData(inserted, 'insert');\n    };\n    /**\n     * Prepare and returns request body which is used to update a new record in the table.\n     */\n    GraphQLAdaptor.prototype.update = function () {\n        var inserted = _super.prototype.update.apply(this, arguments);\n        return this.generateCrudData(inserted, 'update');\n    };\n    /**\n     * Prepare and returns request body which is used to remove a new record in the table.\n     */\n    GraphQLAdaptor.prototype.remove = function () {\n        var inserted = _super.prototype.remove.apply(this, arguments);\n        return this.generateCrudData(inserted, 'remove');\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     *\n     * @param {DataManager} dm\n     * @param {CrudOptions} changes\n     * @param {Object} e\n     * @param e.key\n     * @param {Query} query\n     * @param {Object} original\n     */\n    GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var batch = _super.prototype.batchRequest.apply(this, arguments);\n        // tslint:disable-next-line:typedef\n        var bData = JSON.parse(batch.data);\n        bData.key = e.key;\n        batch.data = JSON.stringify(bData);\n        return this.generateCrudData(batch, 'batch');\n    };\n    GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\n        var parsed = JSON.parse(crudData.data);\n        crudData.data = JSON.stringify({\n            query: this.opt.getMutation(action),\n            variables: parsed\n        });\n        return crudData;\n    };\n    return GraphQLAdaptor;\n}(UrlAdaptor));\nexport { GraphQLAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n *\n * @hidden\n */\nvar CacheAdaptor = /** @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     *\n     * @param {CacheAdaptor} adaptor?\n     * @param {number} timeStamp?\n     * @param {number} pageSize?\n     * @param adaptor\n     * @param timeStamp\n     * @param pageSize\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     *\n     * @param {string} url\n     * @param {Query} query?\n     * @param query\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     *\n     * @param {DataManager} dm\n     * @param {Query} query?\n     * @param {Object[]} hierarchyFilters?\n     * @param query\n     * @param hierarchyFilters\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        /* eslint-disable prefer-spread */\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        /* eslint-enable prefer-spread */\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     *\n     * @param {DataResult} data\n     * @param {DataManager} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param {Fetch} request?\n     * @param {CrudOptions} changes?\n     * @param ds\n     * @param query\n     * @param xhr\n     * @param request\n     * @param changes\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        /* eslint-disable prefer-spread */\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        /* eslint-enable prefer-spread */\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     *\n     * @param {DataManager} dm\n     * @param {Request} request\n     * @param {Fetch} settings?\n     * @param settings\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch)\n            && settings.type.toLowerCase() === 'post') {\n            request.headers.set('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.headers.set('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     *\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     *\n     * @param {DataManager} dm\n     * @param {Object} data\n     * @param {string} tableName?\n     * @param tableName\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {Object} value\n     * @param {string} tableName?\n     * @param tableName\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     *\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\nexport { CacheAdaptor };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}