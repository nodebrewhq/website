{"ast":null,"code":"import { L10n, getValue, getDefaultDateObject, cldrData } from '@syncfusion/ej2-base';\nvar ARROWLEFT = 'ArrowLeft';\nvar ARROWRIGHT = 'ArrowRight';\nvar ARROWUP = 'ArrowUp';\nvar ARROWDOWN = 'ArrowDown';\nvar TAB = 'Tab';\nvar SHIFTTAB = 'shiftTab';\nvar END = 'End';\nvar HOME = 'Home';\nvar MaskedDateTime = /** @class */function () {\n  function MaskedDateTime(parent) {\n    this.mask = '';\n    this.defaultConstant = {\n      day: 'day',\n      month: 'month',\n      year: 'year',\n      hour: 'hour',\n      minute: 'minute',\n      second: 'second',\n      dayOfTheWeek: 'day of the week'\n    };\n    this.hiddenMask = '';\n    this.validCharacters = 'dMyhmHfasz';\n    this.isDayPart = false;\n    this.isMonthPart = false;\n    this.isYearPart = false;\n    this.isHourPart = false;\n    this.isMinutePart = false;\n    this.isSecondsPart = false;\n    this.isMilliSecondsPart = false;\n    this.monthCharacter = '';\n    this.periodCharacter = '';\n    this.isHiddenMask = false;\n    this.isComplete = false;\n    this.isNavigate = false;\n    this.navigated = false;\n    this.isBlur = false;\n    this.formatRegex = /EEEEE|EEEE|EEE|EE|E|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yyy|yy|y|HH|H|hh|h|mm|m|fff|ff|f|aa|a|ss|s|zzzz|zzz|zz|z|'[^']*'|'[^']*'/g;\n    this.isDeletion = false;\n    this.isShortYear = false;\n    this.isDeleteKey = false;\n    this.isDateZero = false;\n    this.isMonthZero = false;\n    this.isYearZero = false;\n    this.isLeadingZero = false;\n    this.dayTypeCount = 0;\n    this.monthTypeCount = 0;\n    this.hourTypeCount = 0;\n    this.minuteTypeCount = 0;\n    this.secondTypeCount = 0;\n    this.parent = parent;\n    this.dateformat = this.getCulturedFormat();\n    this.maskDateValue = this.parent.value != null ? new Date(+this.parent.value) : new Date();\n    this.maskDateValue.setMonth(0);\n    this.maskDateValue.setHours(0);\n    this.maskDateValue.setMinutes(0);\n    this.maskDateValue.setSeconds(0);\n    this.previousDate = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n    this.removeEventListener();\n    this.addEventListener();\n  }\n  MaskedDateTime.prototype.getModuleName = function () {\n    return 'MaskedDateTime';\n  };\n  MaskedDateTime.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.on('createMask', this.createMask, this);\n    this.parent.on('setMaskSelection', this.validCharacterCheck, this);\n    this.parent.on('inputHandler', this.maskInputHandler, this);\n    this.parent.on('keyDownHandler', this.maskKeydownHandler, this);\n    this.parent.on('clearHandler', this.clearHandler, this);\n  };\n  MaskedDateTime.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.off('createMask', this.createMask);\n    this.parent.off('setMaskSelection', this.validCharacterCheck);\n    this.parent.off('inputHandler', this.maskInputHandler);\n    this.parent.off('keyDownHandler', this.maskKeydownHandler);\n    this.parent.off('clearHandler', this.clearHandler);\n  };\n  MaskedDateTime.prototype.createMask = function (mask) {\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n    this.dateformat = this.getCulturedFormat();\n    if (this.parent.maskPlaceholder.day) {\n      this.defaultConstant['day'] = this.parent.maskPlaceholder.day;\n    }\n    if (this.parent.maskPlaceholder.month) {\n      this.defaultConstant['month'] = this.parent.maskPlaceholder.month;\n    }\n    if (this.parent.maskPlaceholder.year) {\n      this.defaultConstant['year'] = this.parent.maskPlaceholder.year;\n    }\n    if (this.parent.maskPlaceholder.hour) {\n      this.defaultConstant['hour'] = this.parent.maskPlaceholder.hour;\n    }\n    if (this.parent.maskPlaceholder.minute) {\n      this.defaultConstant['minute'] = this.parent.maskPlaceholder.minute;\n    }\n    if (this.parent.maskPlaceholder.second) {\n      this.defaultConstant['second'] = this.parent.maskPlaceholder.second;\n    }\n    if (this.parent.maskPlaceholder.dayOfTheWeek) {\n      this.defaultConstant['dayOfTheWeek'] = this.parent.maskPlaceholder.dayOfTheWeek.toString();\n    }\n    this.getCUltureMaskFormat();\n    var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.mask = this.previousValue = inputValue;\n    this.parent.maskedDateValue = this.mask;\n    if (this.parent.value) {\n      this.navigated = true;\n      this.isBlur = mask.isBlur;\n      this.setDynamicValue();\n    }\n  };\n  MaskedDateTime.prototype.getCUltureMaskFormat = function () {\n    this.l10n = new L10n(this.parent.moduleName, this.defaultConstant, this.parent.locale);\n    this.objectString = Object.keys(this.defaultConstant);\n    for (var i = 0; i < this.objectString.length; i++) {\n      this.defaultConstant[this.objectString[i].toString()] = this.l10n.getConstant(this.objectString[i].toString());\n    }\n  };\n  MaskedDateTime.prototype.validCharacterCheck = function () {\n    var start = this.parent.inputElement.selectionStart;\n    if (this.parent.moduleName !== 'timepicker') {\n      if (start === this.hiddenMask.length && this.mask === this.parent.inputElement.value) {\n        start = 0;\n      }\n    }\n    for (var i = start, j = start - 1; i < this.hiddenMask.length || j >= 0; i++, j--) {\n      if (i < this.hiddenMask.length && this.validCharacters.indexOf(this.hiddenMask[i]) !== -1) {\n        this.setSelection(this.hiddenMask[i]);\n        return;\n      }\n      if (j >= 0 && this.validCharacters.indexOf(this.hiddenMask[j]) !== -1) {\n        this.setSelection(this.hiddenMask[j]);\n        return;\n      }\n    }\n  };\n  MaskedDateTime.prototype.setDynamicValue = function () {\n    this.maskDateValue = new Date(+this.parent.value);\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = true;\n    this.updateValue();\n    if (!this.isBlur) {\n      this.validCharacterCheck();\n    }\n  };\n  MaskedDateTime.prototype.setSelection = function (validChar) {\n    var start = -1;\n    var end = 0;\n    for (var i = 0; i < this.hiddenMask.length; i++) {\n      if (this.hiddenMask[i] === validChar) {\n        end = i + 1;\n        if (start === -1) {\n          start = i;\n        }\n      }\n    }\n    if (start < 0) {\n      start = 0;\n    }\n    this.parent.inputElement.setSelectionRange(start, end);\n  };\n  MaskedDateTime.prototype.maskKeydownHandler = function (args) {\n    this.dayTypeCount = this.monthTypeCount = this.hourTypeCount = this.minuteTypeCount = this.secondTypeCount = 0;\n    if (args.e.key === 'Delete') {\n      this.isDeleteKey = true;\n      return;\n    }\n    if (!args.e.altKey && !args.e.ctrlKey && (args.e.key === ARROWLEFT || args.e.key === ARROWRIGHT || args.e.key === SHIFTTAB || args.e.key === TAB || args.e.action === SHIFTTAB || args.e.key === END || args.e.key === HOME)) {\n      var start = this.parent.inputElement.selectionStart;\n      var end = this.parent.inputElement.selectionEnd;\n      var length_1 = this.parent.inputElement.value.length;\n      if (start === 0 && end === length_1 && (args.e.key === TAB || args.e.action === SHIFTTAB)) {\n        var index = args.e.action === SHIFTTAB ? end : 0;\n        this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = index;\n      }\n      if (args.e.key === END || args.e.key === HOME) {\n        var range = args.e.key === END ? length_1 : 0;\n        this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = range;\n      }\n      this.navigateSelection(args.e.key === ARROWLEFT || args.e.action === SHIFTTAB || args.e.key === END ? true : false);\n    }\n    if (!args.e.altKey && !args.e.ctrlKey && (args.e.key === ARROWUP || args.e.key === ARROWDOWN)) {\n      var start = this.parent.inputElement.selectionStart;\n      var formatText = '';\n      if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n        formatText = this.hiddenMask[start];\n      }\n      this.dateAlteration(args.e.key === ARROWDOWN ? true : false);\n      var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n      this.isHiddenMask = true;\n      this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n      this.isHiddenMask = false;\n      this.previousHiddenMask = this.hiddenMask;\n      this.previousValue = inputValue;\n      this.parent.inputElement.value = inputValue;\n      for (var i = 0; i < this.hiddenMask.length; i++) {\n        if (formatText === this.hiddenMask[i]) {\n          start = i;\n          break;\n        }\n      }\n      this.parent.inputElement.selectionStart = start;\n      this.validCharacterCheck();\n    }\n  };\n  MaskedDateTime.prototype.isPersist = function () {\n    var isPersist = this.parent.isFocused || this.navigated;\n    return isPersist;\n  };\n  MaskedDateTime.prototype.differenceCheck = function () {\n    var start = this.parent.inputElement.selectionStart;\n    var inputValue = this.parent.inputElement.value;\n    var previousVal = this.previousValue.substring(0, start + this.previousValue.length - inputValue.length);\n    var newVal = inputValue.substring(0, start);\n    var newDateValue = new Date(+this.maskDateValue);\n    var maxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n    if (previousVal.indexOf(newVal) === 0 && (newVal.length === 0 || this.previousHiddenMask[newVal.length - 1] !== this.previousHiddenMask[newVal.length])) {\n      for (var i = newVal.length; i < previousVal.length; i++) {\n        if (this.previousHiddenMask[i] !== '' && this.validCharacters.indexOf(this.previousHiddenMask[i]) >= 0) {\n          this.isDeletion = this.handleDeletion(this.previousHiddenMask[i], false);\n        }\n      }\n      if (this.isDeletion) {\n        return;\n      }\n    }\n    switch (this.previousHiddenMask[start - 1]) {\n      case 'd':\n        {\n          var date = (this.isDayPart && newDateValue.getDate().toString().length < 2 && !this.isPersist() ? newDateValue.getDate() * 10 : 0) + parseInt(newVal[start - 1], 10);\n          this.isDateZero = newVal[start - 1] === '0';\n          this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n          this.navigated = this.navigated ? false : this.navigated;\n          if (isNaN(date)) {\n            return;\n          }\n          for (var i = 0; date > maxDate; i++) {\n            date = parseInt(date.toString().slice(1), 10);\n          }\n          if (date >= 1) {\n            newDateValue.setDate(date);\n            this.isNavigate = date.toString().length === 2;\n            this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n            if (newDateValue.getMonth() !== this.maskDateValue.getMonth()) {\n              return;\n            }\n            this.isDayPart = true;\n            this.dayTypeCount = this.dayTypeCount + 1;\n          } else {\n            this.isDayPart = false;\n            this.dayTypeCount = this.isDateZero ? this.dayTypeCount + 1 : this.dayTypeCount;\n          }\n          break;\n        }\n      case 'M':\n        {\n          var month = void 0;\n          if (newDateValue.getMonth().toString().length < 2 && !this.isPersist()) {\n            month = (this.isMonthPart ? (newDateValue.getMonth() + 1) * 10 : 0) + parseInt(newVal[start - 1], 10);\n          } else {\n            month = parseInt(newVal[start - 1], 10);\n          }\n          this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n          this.navigated = this.navigated ? false : this.navigated;\n          this.isMonthZero = newVal[start - 1] === '0';\n          if (!isNaN(month)) {\n            while (month > 12) {\n              month = parseInt(month.toString().slice(1), 10);\n            }\n            if (month >= 1) {\n              newDateValue.setMonth(month - 1);\n              if (month >= 10 || month === 1) {\n                if (this.isLeadingZero && month === 1) {\n                  this.isNavigate = month.toString().length === 1;\n                  this.isLeadingZero = false;\n                } else {\n                  this.isNavigate = month.toString().length === 2;\n                }\n              } else {\n                this.isNavigate = month.toString().length === 1;\n              }\n              if (newDateValue.getMonth() !== month - 1) {\n                newDateValue.setDate(1);\n                newDateValue.setMonth(month - 1);\n              }\n              if (this.isDayPart) {\n                var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n                var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n                if (this.previousDate.getDate() === previousMaxDate && currentMaxDate <= previousMaxDate) {\n                  newDateValue.setDate(currentMaxDate);\n                }\n              }\n              this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n              this.isMonthPart = true;\n              this.monthTypeCount = this.monthTypeCount + 1;\n              this.isLeadingZero = false;\n            } else {\n              newDateValue.setMonth(0);\n              this.isLeadingZero = true;\n              this.isMonthPart = false;\n              this.monthTypeCount = this.isMonthZero ? this.monthTypeCount + 1 : this.monthTypeCount;\n            }\n          } else {\n            var monthString = this.getCulturedValue('months[stand-alone].wide');\n            var monthValue = Object.keys(monthString);\n            this.monthCharacter += newVal[start - 1].toLowerCase();\n            while (this.monthCharacter.length > 0) {\n              var i = 1;\n              for (var _i = 0, monthValue_1 = monthValue; _i < monthValue_1.length; _i++) {\n                var months = monthValue_1[_i];\n                if (monthString[i].toLowerCase().indexOf(this.monthCharacter) === 0) {\n                  newDateValue.setMonth(i - 1);\n                  this.isMonthPart = true;\n                  this.maskDateValue = newDateValue;\n                  return;\n                }\n                i++;\n              }\n              this.monthCharacter = this.monthCharacter.substring(1, this.monthCharacter.length);\n            }\n          }\n          break;\n        }\n      case 'y':\n        {\n          var year = (this.isYearPart && newDateValue.getFullYear().toString().length < 4 && !this.isShortYear ? newDateValue.getFullYear() * 10 : 0) + parseInt(newVal[start - 1], 10);\n          var yearValue = (this.dateformat.match(/y/g) || []).length;\n          yearValue = yearValue !== 2 ? 4 : yearValue;\n          this.isShortYear = false;\n          this.isYearZero = newVal[start - 1] === '0';\n          if (isNaN(year)) {\n            return;\n          }\n          while (year > 9999) {\n            year = parseInt(year.toString().slice(1), 10);\n          }\n          if (year < 1) {\n            this.isYearPart = false;\n          } else {\n            newDateValue.setFullYear(year);\n            if (year.toString().length === yearValue) {\n              this.isNavigate = true;\n            }\n            this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n            this.isYearPart = true;\n          }\n          break;\n        }\n      case 'h':\n        this.hour = (this.isHourPart && (newDateValue.getHours() % 12 || 12).toString().length < 2 && !this.isPersist() ? (newDateValue.getHours() % 12 || 12) * 10 : 0) + parseInt(newVal[start - 1], 10);\n        this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n        this.navigated = this.navigated ? false : this.navigated;\n        if (isNaN(this.hour)) {\n          return;\n        }\n        while (this.hour > 12) {\n          this.hour = parseInt(this.hour.toString().slice(1), 10);\n        }\n        newDateValue.setHours(Math.floor(newDateValue.getHours() / 12) * 12 + this.hour % 12);\n        this.isNavigate = this.hour.toString().length === 2;\n        this.isHourPart = true;\n        this.hourTypeCount = this.hourTypeCount + 1;\n        break;\n      case 'H':\n        this.hour = (this.isHourPart && newDateValue.getHours().toString().length < 2 && !this.isPersist() ? newDateValue.getHours() * 10 : 0) + parseInt(newVal[start - 1], 10);\n        this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n        this.navigated = this.navigated ? false : this.navigated;\n        if (isNaN(this.hour)) {\n          return;\n        }\n        for (var i = 0; this.hour > 23; i++) {\n          this.hour = parseInt(this.hour.toString().slice(1), 10);\n        }\n        newDateValue.setHours(this.hour);\n        this.isNavigate = this.hour.toString().length === 2;\n        this.isHourPart = true;\n        this.hourTypeCount = this.hourTypeCount + 1;\n        break;\n      case 'm':\n        {\n          var minutes = (this.isMinutePart && newDateValue.getMinutes().toString().length < 2 && !this.isPersist() ? newDateValue.getMinutes() * 10 : 0) + parseInt(newVal[start - 1], 10);\n          this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n          this.navigated = this.navigated ? false : this.navigated;\n          if (isNaN(minutes)) {\n            return;\n          }\n          for (var i = 0; minutes > 59; i++) {\n            minutes = parseInt(minutes.toString().slice(1), 10);\n          }\n          newDateValue.setMinutes(minutes);\n          this.isNavigate = minutes.toString().length === 2;\n          this.isMinutePart = true;\n          this.minuteTypeCount = this.minuteTypeCount + 1;\n          break;\n        }\n      case 's':\n        {\n          var seconds = (this.isSecondsPart && newDateValue.getSeconds().toString().length < 2 && !this.isPersist() ? newDateValue.getSeconds() * 10 : 0) + parseInt(newVal[start - 1], 10);\n          this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n          this.navigated = this.navigated ? false : this.navigated;\n          if (isNaN(seconds)) {\n            return;\n          }\n          for (var i = 0; seconds > 59; i++) {\n            seconds = parseInt(seconds.toString().slice(1), 10);\n          }\n          newDateValue.setSeconds(seconds);\n          this.isNavigate = seconds.toString().length === 2;\n          this.isSecondsPart = true;\n          this.secondTypeCount = this.secondTypeCount + 1;\n          break;\n        }\n      case 'a':\n        {\n          this.periodCharacter += newVal[start - 1].toLowerCase();\n          var periodString = this.getCulturedValue('dayPeriods.format.wide');\n          var periodkeys = Object.keys(periodString);\n          for (var i = 0; this.periodCharacter.length > 0; i++) {\n            if (periodString[periodkeys[0]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() >= 12 || periodString[periodkeys[1]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() < 12) {\n              newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n              this.maskDateValue = newDateValue;\n            }\n            this.periodCharacter = this.periodCharacter.substring(1, this.periodCharacter.length);\n          }\n          break;\n        }\n      default:\n        break;\n    }\n    this.maskDateValue = newDateValue;\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  MaskedDateTime.prototype.formatCheck = function () {\n    var proxy = null || this;\n    function formatValueSpecifier(formattext) {\n      var result;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var daysAbbreviated = proxy.getCulturedValue('days[stand-alone].abbreviated');\n      var dayKeyAbbreviated = Object.keys(daysAbbreviated);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var daysWide = proxy.getCulturedValue('days[stand-alone].wide');\n      var dayKeyWide = Object.keys(daysWide);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var daysNarrow = proxy.getCulturedValue('days[stand-alone].narrow');\n      var dayKeyNarrow = Object.keys(daysNarrow);\n      var monthAbbreviated = proxy.getCulturedValue('months[stand-alone].abbreviated');\n      var monthWide = proxy.getCulturedValue('months[stand-alone].wide');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var periodString = proxy.getCulturedValue('dayPeriods.format.wide');\n      var periodkeys = Object.keys(periodString);\n      var milliseconds;\n      var dateOptions;\n      switch (formattext) {\n        case 'ddd':\n        case 'dddd':\n        case 'd':\n          result = proxy.isDayPart ? proxy.maskDateValue.getDate().toString() : proxy.defaultConstant['day'].toString();\n          result = proxy.zeroCheck(proxy.isDateZero, proxy.isDayPart, result);\n          if (proxy.dayTypeCount === 2) {\n            proxy.isNavigate = true;\n            proxy.dayTypeCount = 0;\n          }\n          break;\n        case 'dd':\n          result = proxy.isDayPart ? proxy.roundOff(proxy.maskDateValue.getDate(), 2) : proxy.defaultConstant['day'].toString();\n          result = proxy.zeroCheck(proxy.isDateZero, proxy.isDayPart, result);\n          if (proxy.dayTypeCount === 2) {\n            proxy.isNavigate = true;\n            proxy.dayTypeCount = 0;\n          }\n          break;\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysAbbreviated[dayKeyAbbreviated[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n        case 'EEEE':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysWide[dayKeyWide[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n        case 'EEEEE':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysNarrow[dayKeyNarrow[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n        case 'M':\n          result = proxy.isMonthPart ? (proxy.maskDateValue.getMonth() + 1).toString() : proxy.defaultConstant['month'].toString();\n          result = proxy.zeroCheck(proxy.isMonthZero, proxy.isMonthPart, result);\n          if (proxy.monthTypeCount === 2) {\n            proxy.isNavigate = true;\n            proxy.monthTypeCount = 0;\n          }\n          break;\n        case 'MM':\n          result = proxy.isMonthPart ? proxy.roundOff(proxy.maskDateValue.getMonth() + 1, 2) : proxy.defaultConstant['month'].toString();\n          result = proxy.zeroCheck(proxy.isMonthZero, proxy.isMonthPart, result);\n          if (proxy.monthTypeCount === 2) {\n            proxy.isNavigate = true;\n            proxy.monthTypeCount = 0;\n          }\n          break;\n        case 'MMM':\n          result = proxy.isMonthPart ? monthAbbreviated[proxy.maskDateValue.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n          break;\n        case 'MMMM':\n          result = proxy.isMonthPart ? monthWide[proxy.maskDateValue.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n          break;\n        case 'yy':\n          result = proxy.isYearPart ? proxy.roundOff(proxy.maskDateValue.getFullYear() % 100, 2) : proxy.defaultConstant['year'].toString();\n          result = proxy.zeroCheck(proxy.isYearZero, proxy.isYearPart, result);\n          break;\n        case 'y':\n        case 'yyy':\n        case 'yyyy':\n          result = proxy.isYearPart ? proxy.roundOff(proxy.maskDateValue.getFullYear(), 4) : proxy.defaultConstant['year'].toString();\n          result = proxy.zeroCheck(proxy.isYearZero, proxy.isYearPart, result);\n          break;\n        case 'h':\n          result = proxy.isHourPart ? (proxy.maskDateValue.getHours() % 12 || 12).toString() : proxy.defaultConstant['hour'].toString();\n          if (proxy.hourTypeCount === 2) {\n            proxy.isNavigate = true;\n            proxy.hourTypeCount = 0;\n          }\n          break;\n        case 'hh':\n          result = proxy.isHourPart ? proxy.roundOff(proxy.maskDateValue.getHours() % 12 || 12, 2) : proxy.defaultConstant['hour'].toString();\n          if (proxy.hourTypeCount === 2) {\n            proxy.isNavigate = true;\n            proxy.hourTypeCount = 0;\n          }\n          break;\n        case 'H':\n          result = proxy.isHourPart ? proxy.maskDateValue.getHours().toString() : proxy.defaultConstant['hour'].toString();\n          if (proxy.hourTypeCount === 2) {\n            proxy.isNavigate = true;\n            proxy.hourTypeCount = 0;\n          }\n          break;\n        case 'HH':\n          result = proxy.isHourPart ? proxy.roundOff(proxy.maskDateValue.getHours(), 2) : proxy.defaultConstant['hour'].toString();\n          if (proxy.hourTypeCount === 2) {\n            proxy.isNavigate = true;\n            proxy.hourTypeCount = 0;\n          }\n          break;\n        case 'm':\n          result = proxy.isMinutePart ? proxy.maskDateValue.getMinutes().toString() : proxy.defaultConstant['minute'].toString();\n          if (proxy.minuteTypeCount === 2) {\n            proxy.isNavigate = true;\n            proxy.minuteTypeCount = 0;\n          }\n          break;\n        case 'mm':\n          result = proxy.isMinutePart ? proxy.roundOff(proxy.maskDateValue.getMinutes(), 2) : proxy.defaultConstant['minute'].toString();\n          if (proxy.minuteTypeCount === 2) {\n            proxy.isNavigate = true;\n            proxy.minuteTypeCount = 0;\n          }\n          break;\n        case 's':\n          result = proxy.isSecondsPart ? proxy.maskDateValue.getSeconds().toString() : proxy.defaultConstant['second'].toString();\n          if (proxy.secondTypeCount === 2) {\n            proxy.isNavigate = true;\n            proxy.secondTypeCount = 0;\n          }\n          break;\n        case 'ss':\n          result = proxy.isSecondsPart ? proxy.roundOff(proxy.maskDateValue.getSeconds(), 2) : proxy.defaultConstant['second'].toString();\n          if (proxy.secondTypeCount === 2) {\n            proxy.isNavigate = true;\n            proxy.secondTypeCount = 0;\n          }\n          break;\n        case 'f':\n          result = Math.floor(proxy.maskDateValue.getMilliseconds() / 100).toString();\n          break;\n        case 'ff':\n          milliseconds = proxy.maskDateValue.getMilliseconds();\n          if (proxy.maskDateValue.getMilliseconds() > 99) {\n            milliseconds = Math.floor(proxy.maskDateValue.getMilliseconds() / 10);\n          }\n          result = proxy.roundOff(milliseconds, 2);\n          break;\n        case 'fff':\n          result = proxy.roundOff(proxy.maskDateValue.getMilliseconds(), 3);\n          break;\n        case 'a':\n        case 'aa':\n          result = proxy.maskDateValue.getHours() < 12 ? periodString['am'] : periodString['pm'];\n          break;\n        case 'z':\n        case 'zz':\n        case 'zzz':\n        case 'zzzz':\n          dateOptions = {\n            format: formattext,\n            type: 'dateTime',\n            skeleton: 'yMd',\n            calendar: proxy.parent.calendarMode\n          };\n          result = proxy.parent.globalize.formatDate(proxy.maskDateValue, dateOptions);\n          break;\n      }\n      result = result !== undefined ? result : formattext.slice(1, formattext.length - 1);\n      if (proxy.isHiddenMask) {\n        var hiddenChar = '';\n        for (var i = 0; i < result.length; i++) {\n          hiddenChar += formattext[0];\n        }\n        return hiddenChar;\n      } else {\n        return result;\n      }\n    }\n    return formatValueSpecifier;\n  };\n  MaskedDateTime.prototype.maskInputHandler = function () {\n    var start = this.parent.inputElement.selectionStart;\n    var formatText = '';\n    if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n      formatText = this.hiddenMask[start];\n    }\n    this.differenceCheck();\n    var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isDateZero = this.isMonthZero = this.isYearZero = false;\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.previousValue = inputValue;\n    this.parent.inputElement.value = inputValue;\n    this.parent.inputElement.value = inputValue;\n    for (var i = 0; i < this.hiddenMask.length; i++) {\n      if (formatText === this.hiddenMask[i]) {\n        start = i;\n        break;\n      }\n    }\n    this.parent.inputElement.selectionStart = start;\n    this.validCharacterCheck();\n    if ((this.isNavigate || this.isDeletion) && !this.isDeleteKey) {\n      var isbackward = this.isNavigate ? false : true;\n      this.isNavigate = this.isDeletion = false;\n      this.navigateSelection(isbackward);\n    }\n    if (this.isDeleteKey) {\n      this.isDeletion = false;\n    }\n    this.isDeleteKey = false;\n  };\n  MaskedDateTime.prototype.navigateSelection = function (isbackward) {\n    var start = this.parent.inputElement.selectionStart;\n    var end = this.parent.inputElement.selectionEnd;\n    var formatIndex = isbackward ? start - 1 : end;\n    this.navigated = true;\n    while (formatIndex < this.hiddenMask.length && formatIndex >= 0) {\n      if (this.validCharacters.indexOf(this.hiddenMask[formatIndex]) >= 0) {\n        this.setSelection(this.hiddenMask[formatIndex]);\n        break;\n      }\n      formatIndex = formatIndex + (isbackward ? -1 : 1);\n    }\n  };\n  MaskedDateTime.prototype.roundOff = function (val, count) {\n    var valueText = val.toString();\n    var length = count - valueText.length;\n    var result = '';\n    for (var i = 0; i < length; i++) {\n      result += '0';\n    }\n    return result + valueText;\n  };\n  MaskedDateTime.prototype.zeroCheck = function (isZero, isDayPart, resultValue) {\n    var result = resultValue;\n    if (isZero && !isDayPart) {\n      result = '0';\n    }\n    return result;\n  };\n  MaskedDateTime.prototype.handleDeletion = function (format, isSegment) {\n    switch (format) {\n      case 'd':\n        this.isDayPart = isSegment;\n        break;\n      case 'M':\n        this.isMonthPart = isSegment;\n        if (!isSegment) {\n          this.maskDateValue.setMonth(0);\n          this.monthCharacter = '';\n        }\n        break;\n      case 'y':\n        this.isYearPart = isSegment;\n        break;\n      case 'H':\n      case 'h':\n        this.isHourPart = isSegment;\n        if (!isSegment) {\n          this.periodCharacter = '';\n        }\n        break;\n      case 'm':\n        this.isMinutePart = isSegment;\n        break;\n      case 's':\n        this.isSecondsPart = isSegment;\n        break;\n      default:\n        return false;\n    }\n    return true;\n  };\n  MaskedDateTime.prototype.dateAlteration = function (isDecrement) {\n    var start = this.parent.inputElement.selectionStart;\n    var formatText = '';\n    if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n      formatText = this.hiddenMask[start];\n    } else {\n      return;\n    }\n    var newDateValue = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n    this.previousDate = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n    var incrementValue = isDecrement ? -1 : 1;\n    switch (formatText) {\n      case 'd':\n        newDateValue.setDate(newDateValue.getDate() + incrementValue);\n        break;\n      case 'M':\n        {\n          var newMonth = newDateValue.getMonth() + incrementValue;\n          newDateValue.setDate(1);\n          newDateValue.setMonth(newMonth);\n          if (this.isDayPart) {\n            var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n            var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n            if (this.previousDate.getDate() === previousMaxDate && currentMaxDate <= previousMaxDate) {\n              newDateValue.setDate(currentMaxDate);\n            } else {\n              newDateValue.setDate(this.previousDate.getDate());\n            }\n          } else {\n            newDateValue.setDate(this.previousDate.getDate());\n          }\n          this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n          break;\n        }\n      case 'y':\n        newDateValue.setFullYear(newDateValue.getFullYear() + incrementValue);\n        break;\n      case 'H':\n      case 'h':\n        newDateValue.setHours(newDateValue.getHours() + incrementValue);\n        break;\n      case 'm':\n        newDateValue.setMinutes(newDateValue.getMinutes() + incrementValue);\n        break;\n      case 's':\n        newDateValue.setSeconds(newDateValue.getSeconds() + incrementValue);\n        break;\n      case 'a':\n        newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n        break;\n      default:\n        break;\n    }\n    this.maskDateValue = newDateValue.getFullYear() > 0 ? newDateValue : this.maskDateValue;\n    if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n      this.handleDeletion(this.hiddenMask[start], true);\n    }\n  };\n  MaskedDateTime.prototype.getCulturedValue = function (format) {\n    var locale = this.parent.locale;\n    var result;\n    if (locale === 'en' || locale === 'en-US') {\n      result = getValue(format, getDefaultDateObject());\n    } else {\n      result = getValue('main.' + '' + locale + ('.dates.calendars.gregorian.' + format), cldrData);\n    }\n    return result;\n  };\n  MaskedDateTime.prototype.getCulturedFormat = function () {\n    var formatString = this.getCulturedValue('dateTimeFormats[availableFormats].yMd').toString();\n    if (this.parent.moduleName === 'datepicker') {\n      formatString = this.getCulturedValue('dateTimeFormats[availableFormats].yMd').toString();\n      if (this.parent.format && this.parent.formatString) {\n        formatString = this.parent.formatString;\n      }\n    }\n    if (this.parent.moduleName === 'datetimepicker') {\n      formatString = this.getCulturedValue('dateTimeFormats[availableFormats].yMd').toString();\n      if (this.parent.dateTimeFormat) {\n        formatString = this.parent.dateTimeFormat;\n      }\n    }\n    if (this.parent.moduleName === 'timepicker') {\n      formatString = this.parent.cldrTimeFormat();\n    }\n    return formatString;\n  };\n  MaskedDateTime.prototype.clearHandler = function () {\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n    this.updateValue();\n  };\n  MaskedDateTime.prototype.updateValue = function () {\n    this.monthCharacter = this.periodCharacter = '';\n    var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.previousValue = inputValue;\n    this.parent.updateInputValue(inputValue);\n  };\n  MaskedDateTime.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  return MaskedDateTime;\n}();\nexport { MaskedDateTime };","map":{"version":3,"names":["L10n","getValue","getDefaultDateObject","cldrData","ARROWLEFT","ARROWRIGHT","ARROWUP","ARROWDOWN","TAB","SHIFTTAB","END","HOME","MaskedDateTime","parent","mask","defaultConstant","day","month","year","hour","minute","second","dayOfTheWeek","hiddenMask","validCharacters","isDayPart","isMonthPart","isYearPart","isHourPart","isMinutePart","isSecondsPart","isMilliSecondsPart","monthCharacter","periodCharacter","isHiddenMask","isComplete","isNavigate","navigated","isBlur","formatRegex","isDeletion","isShortYear","isDeleteKey","isDateZero","isMonthZero","isYearZero","isLeadingZero","dayTypeCount","monthTypeCount","hourTypeCount","minuteTypeCount","secondTypeCount","dateformat","getCulturedFormat","maskDateValue","value","Date","setMonth","setHours","setMinutes","setSeconds","previousDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","removeEventListener","addEventListener","prototype","getModuleName","isDestroyed","on","createMask","validCharacterCheck","maskInputHandler","maskKeydownHandler","clearHandler","off","maskPlaceholder","toString","getCUltureMaskFormat","inputValue","replace","formatCheck","previousHiddenMask","previousValue","maskedDateValue","setDynamicValue","l10n","moduleName","locale","objectString","Object","keys","i","length","getConstant","start","inputElement","selectionStart","j","indexOf","setSelection","updateValue","validChar","end","setSelectionRange","args","e","key","altKey","ctrlKey","action","selectionEnd","length_1","index","range","navigateSelection","formatText","dateAlteration","isPersist","isFocused","differenceCheck","previousVal","substring","newVal","newDateValue","maxDate","handleDeletion","date","parseInt","isNaN","slice","setDate","previousMaxDate","currentMaxDate","monthString","getCulturedValue","monthValue","toLowerCase","_i","monthValue_1","months","yearValue","match","setFullYear","Math","floor","minutes","seconds","periodString","periodkeys","proxy","formatValueSpecifier","formattext","result","daysAbbreviated","dayKeyAbbreviated","daysWide","dayKeyWide","daysNarrow","dayKeyNarrow","monthAbbreviated","monthWide","milliseconds","dateOptions","zeroCheck","roundOff","getDay","getMilliseconds","format","type","skeleton","calendar","calendarMode","globalize","formatDate","undefined","hiddenChar","isbackward","formatIndex","val","count","valueText","isZero","resultValue","isSegment","isDecrement","incrementValue","newMonth","formatString","dateTimeFormat","cldrTimeFormat","updateInputValue","destroy"],"sources":["/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/node_modules/@syncfusion/ej2-calendars/src/maskbase/masked-date-time.js"],"sourcesContent":["import { L10n, getValue, getDefaultDateObject, cldrData } from '@syncfusion/ej2-base';\nvar ARROWLEFT = 'ArrowLeft';\nvar ARROWRIGHT = 'ArrowRight';\nvar ARROWUP = 'ArrowUp';\nvar ARROWDOWN = 'ArrowDown';\nvar TAB = 'Tab';\nvar SHIFTTAB = 'shiftTab';\nvar END = 'End';\nvar HOME = 'Home';\nvar MaskedDateTime = /** @class */ (function () {\n    function MaskedDateTime(parent) {\n        this.mask = '';\n        this.defaultConstant = {\n            day: 'day',\n            month: 'month',\n            year: 'year',\n            hour: 'hour',\n            minute: 'minute',\n            second: 'second',\n            dayOfTheWeek: 'day of the week'\n        };\n        this.hiddenMask = '';\n        this.validCharacters = 'dMyhmHfasz';\n        this.isDayPart = false;\n        this.isMonthPart = false;\n        this.isYearPart = false;\n        this.isHourPart = false;\n        this.isMinutePart = false;\n        this.isSecondsPart = false;\n        this.isMilliSecondsPart = false;\n        this.monthCharacter = '';\n        this.periodCharacter = '';\n        this.isHiddenMask = false;\n        this.isComplete = false;\n        this.isNavigate = false;\n        this.navigated = false;\n        this.isBlur = false;\n        this.formatRegex = /EEEEE|EEEE|EEE|EE|E|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yyy|yy|y|HH|H|hh|h|mm|m|fff|ff|f|aa|a|ss|s|zzzz|zzz|zz|z|'[^']*'|'[^']*'/g;\n        this.isDeletion = false;\n        this.isShortYear = false;\n        this.isDeleteKey = false;\n        this.isDateZero = false;\n        this.isMonthZero = false;\n        this.isYearZero = false;\n        this.isLeadingZero = false;\n        this.dayTypeCount = 0;\n        this.monthTypeCount = 0;\n        this.hourTypeCount = 0;\n        this.minuteTypeCount = 0;\n        this.secondTypeCount = 0;\n        this.parent = parent;\n        this.dateformat = this.getCulturedFormat();\n        this.maskDateValue = this.parent.value != null ? new Date(+this.parent.value) : new Date();\n        this.maskDateValue.setMonth(0);\n        this.maskDateValue.setHours(0);\n        this.maskDateValue.setMinutes(0);\n        this.maskDateValue.setSeconds(0);\n        this.previousDate = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n        this.removeEventListener();\n        this.addEventListener();\n    }\n    MaskedDateTime.prototype.getModuleName = function () {\n        return 'MaskedDateTime';\n    };\n    MaskedDateTime.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('createMask', this.createMask, this);\n        this.parent.on('setMaskSelection', this.validCharacterCheck, this);\n        this.parent.on('inputHandler', this.maskInputHandler, this);\n        this.parent.on('keyDownHandler', this.maskKeydownHandler, this);\n        this.parent.on('clearHandler', this.clearHandler, this);\n    };\n    MaskedDateTime.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('createMask', this.createMask);\n        this.parent.off('setMaskSelection', this.validCharacterCheck);\n        this.parent.off('inputHandler', this.maskInputHandler);\n        this.parent.off('keyDownHandler', this.maskKeydownHandler);\n        this.parent.off('clearHandler', this.clearHandler);\n    };\n    MaskedDateTime.prototype.createMask = function (mask) {\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n        this.dateformat = this.getCulturedFormat();\n        if (this.parent.maskPlaceholder.day) {\n            this.defaultConstant['day'] = this.parent.maskPlaceholder.day;\n        }\n        if (this.parent.maskPlaceholder.month) {\n            this.defaultConstant['month'] = this.parent.maskPlaceholder.month;\n        }\n        if (this.parent.maskPlaceholder.year) {\n            this.defaultConstant['year'] = this.parent.maskPlaceholder.year;\n        }\n        if (this.parent.maskPlaceholder.hour) {\n            this.defaultConstant['hour'] = this.parent.maskPlaceholder.hour;\n        }\n        if (this.parent.maskPlaceholder.minute) {\n            this.defaultConstant['minute'] = this.parent.maskPlaceholder.minute;\n        }\n        if (this.parent.maskPlaceholder.second) {\n            this.defaultConstant['second'] = this.parent.maskPlaceholder.second;\n        }\n        if (this.parent.maskPlaceholder.dayOfTheWeek) {\n            this.defaultConstant['dayOfTheWeek'] = this.parent.maskPlaceholder.dayOfTheWeek.toString();\n        }\n        this.getCUltureMaskFormat();\n        var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.mask = this.previousValue = inputValue;\n        this.parent.maskedDateValue = this.mask;\n        if (this.parent.value) {\n            this.navigated = true;\n            this.isBlur = mask.isBlur;\n            this.setDynamicValue();\n        }\n    };\n    MaskedDateTime.prototype.getCUltureMaskFormat = function () {\n        this.l10n = new L10n(this.parent.moduleName, this.defaultConstant, this.parent.locale);\n        this.objectString = Object.keys(this.defaultConstant);\n        for (var i = 0; i < this.objectString.length; i++) {\n            this.defaultConstant[this.objectString[i].toString()] =\n                this.l10n.getConstant(this.objectString[i].toString());\n        }\n    };\n    MaskedDateTime.prototype.validCharacterCheck = function () {\n        var start = this.parent.inputElement.selectionStart;\n        if (this.parent.moduleName !== 'timepicker') {\n            if (start === this.hiddenMask.length && this.mask === this.parent.inputElement.value) {\n                start = 0;\n            }\n        }\n        for (var i = start, j = start - 1; i < this.hiddenMask.length || j >= 0; i++, j--) {\n            if (i < this.hiddenMask.length && this.validCharacters.indexOf(this.hiddenMask[i]) !== -1) {\n                this.setSelection(this.hiddenMask[i]);\n                return;\n            }\n            if (j >= 0 && this.validCharacters.indexOf(this.hiddenMask[j]) !== -1) {\n                this.setSelection(this.hiddenMask[j]);\n                return;\n            }\n        }\n    };\n    MaskedDateTime.prototype.setDynamicValue = function () {\n        this.maskDateValue = new Date(+this.parent.value);\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = true;\n        this.updateValue();\n        if (!this.isBlur) {\n            this.validCharacterCheck();\n        }\n    };\n    MaskedDateTime.prototype.setSelection = function (validChar) {\n        var start = -1;\n        var end = 0;\n        for (var i = 0; i < this.hiddenMask.length; i++) {\n            if (this.hiddenMask[i] === validChar) {\n                end = i + 1;\n                if (start === -1) {\n                    start = i;\n                }\n            }\n        }\n        if (start < 0) {\n            start = 0;\n        }\n        this.parent.inputElement.setSelectionRange(start, end);\n    };\n    MaskedDateTime.prototype.maskKeydownHandler = function (args) {\n        this.dayTypeCount = this.monthTypeCount = this.hourTypeCount = this.minuteTypeCount = this.secondTypeCount = 0;\n        if (args.e.key === 'Delete') {\n            this.isDeleteKey = true;\n            return;\n        }\n        if ((!args.e.altKey && !args.e.ctrlKey) && (args.e.key === ARROWLEFT || args.e.key === ARROWRIGHT\n            || args.e.key === SHIFTTAB || args.e.key === TAB || args.e.action === SHIFTTAB ||\n            args.e.key === END || args.e.key === HOME)) {\n            var start = this.parent.inputElement.selectionStart;\n            var end = this.parent.inputElement.selectionEnd;\n            var length_1 = this.parent.inputElement.value.length;\n            if ((start === 0 && end === length_1) && (args.e.key === TAB || args.e.action === SHIFTTAB)) {\n                var index = args.e.action === SHIFTTAB ? end : 0;\n                this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = index;\n            }\n            if (args.e.key === END || args.e.key === HOME) {\n                var range = args.e.key === END ? length_1 : 0;\n                this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = range;\n            }\n            this.navigateSelection(args.e.key === ARROWLEFT || args.e.action === SHIFTTAB || args.e.key === END ? true : false);\n        }\n        if ((!args.e.altKey && !args.e.ctrlKey) && (args.e.key === ARROWUP || args.e.key === ARROWDOWN)) {\n            var start = this.parent.inputElement.selectionStart;\n            var formatText = '';\n            if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n                formatText = this.hiddenMask[start];\n            }\n            this.dateAlteration(args.e.key === ARROWDOWN ? true : false);\n            var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n            this.isHiddenMask = true;\n            this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n            this.isHiddenMask = false;\n            this.previousHiddenMask = this.hiddenMask;\n            this.previousValue = inputValue;\n            this.parent.inputElement.value = inputValue;\n            for (var i = 0; i < this.hiddenMask.length; i++) {\n                if (formatText === this.hiddenMask[i]) {\n                    start = i;\n                    break;\n                }\n            }\n            this.parent.inputElement.selectionStart = start;\n            this.validCharacterCheck();\n        }\n    };\n    MaskedDateTime.prototype.isPersist = function () {\n        var isPersist = this.parent.isFocused || this.navigated;\n        return isPersist;\n    };\n    MaskedDateTime.prototype.differenceCheck = function () {\n        var start = this.parent.inputElement.selectionStart;\n        var inputValue = this.parent.inputElement.value;\n        var previousVal = this.previousValue.substring(0, start + this.previousValue.length - inputValue.length);\n        var newVal = inputValue.substring(0, start);\n        var newDateValue = new Date(+this.maskDateValue);\n        var maxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n        if (previousVal.indexOf(newVal) === 0 && (newVal.length === 0 ||\n            this.previousHiddenMask[newVal.length - 1] !== this.previousHiddenMask[newVal.length])) {\n            for (var i = newVal.length; i < previousVal.length; i++) {\n                if (this.previousHiddenMask[i] !== '' && this.validCharacters.indexOf(this.previousHiddenMask[i]) >= 0) {\n                    this.isDeletion = this.handleDeletion(this.previousHiddenMask[i], false);\n                }\n            }\n            if (this.isDeletion) {\n                return;\n            }\n        }\n        switch (this.previousHiddenMask[start - 1]) {\n            case 'd':\n                {\n                    var date = (this.isDayPart && newDateValue.getDate().toString().length < 2 &&\n                        !this.isPersist() ? newDateValue.getDate() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                    this.isDateZero = (newVal[start - 1] === '0');\n                    this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n                    this.navigated = this.navigated ? false : this.navigated;\n                    if (isNaN(date)) {\n                        return;\n                    }\n                    for (var i = 0; date > maxDate; i++) {\n                        date = parseInt(date.toString().slice(1), 10);\n                    }\n                    if (date >= 1) {\n                        newDateValue.setDate(date);\n                        this.isNavigate = date.toString().length === 2;\n                        this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                        if (newDateValue.getMonth() !== this.maskDateValue.getMonth()) {\n                            return;\n                        }\n                        this.isDayPart = true;\n                        this.dayTypeCount = this.dayTypeCount + 1;\n                    }\n                    else {\n                        this.isDayPart = false;\n                        this.dayTypeCount = this.isDateZero ? this.dayTypeCount + 1 : this.dayTypeCount;\n                    }\n                    break;\n                }\n            case 'M':\n                {\n                    var month = void 0;\n                    if (newDateValue.getMonth().toString().length < 2 && !this.isPersist()) {\n                        month = (this.isMonthPart ? (newDateValue.getMonth() + 1) * 10 : 0) + parseInt(newVal[start - 1], 10);\n                    }\n                    else {\n                        month = parseInt(newVal[start - 1], 10);\n                    }\n                    this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n                    this.navigated = this.navigated ? false : this.navigated;\n                    this.isMonthZero = (newVal[start - 1] === '0');\n                    if (!isNaN(month)) {\n                        while (month > 12) {\n                            month = parseInt(month.toString().slice(1), 10);\n                        }\n                        if (month >= 1) {\n                            newDateValue.setMonth(month - 1);\n                            if (month >= 10 || month === 1) {\n                                if (this.isLeadingZero && month === 1) {\n                                    this.isNavigate = month.toString().length === 1;\n                                    this.isLeadingZero = false;\n                                }\n                                else {\n                                    this.isNavigate = month.toString().length === 2;\n                                }\n                            }\n                            else {\n                                this.isNavigate = month.toString().length === 1;\n                            }\n                            if (newDateValue.getMonth() !== month - 1) {\n                                newDateValue.setDate(1);\n                                newDateValue.setMonth(month - 1);\n                            }\n                            if (this.isDayPart) {\n                                var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n                                var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n                                if (this.previousDate.getDate() === previousMaxDate && currentMaxDate <= previousMaxDate) {\n                                    newDateValue.setDate(currentMaxDate);\n                                }\n                            }\n                            this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                            this.isMonthPart = true;\n                            this.monthTypeCount = this.monthTypeCount + 1;\n                            this.isLeadingZero = false;\n                        }\n                        else {\n                            newDateValue.setMonth(0);\n                            this.isLeadingZero = true;\n                            this.isMonthPart = false;\n                            this.monthTypeCount = this.isMonthZero ? this.monthTypeCount + 1 : this.monthTypeCount;\n                        }\n                    }\n                    else {\n                        var monthString = (this.getCulturedValue('months[stand-alone].wide'));\n                        var monthValue = Object.keys(monthString);\n                        this.monthCharacter += newVal[start - 1].toLowerCase();\n                        while (this.monthCharacter.length > 0) {\n                            var i = 1;\n                            for (var _i = 0, monthValue_1 = monthValue; _i < monthValue_1.length; _i++) {\n                                var months = monthValue_1[_i];\n                                if (monthString[i].toLowerCase().indexOf(this.monthCharacter) === 0) {\n                                    newDateValue.setMonth(i - 1);\n                                    this.isMonthPart = true;\n                                    this.maskDateValue = newDateValue;\n                                    return;\n                                }\n                                i++;\n                            }\n                            this.monthCharacter = this.monthCharacter.substring(1, this.monthCharacter.length);\n                        }\n                    }\n                    break;\n                }\n            case 'y':\n                {\n                    var year = (this.isYearPart && (newDateValue.getFullYear().toString().length < 4\n                        && !this.isShortYear) ? newDateValue.getFullYear() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                    var yearValue = (this.dateformat.match(/y/g) || []).length;\n                    yearValue = yearValue !== 2 ? 4 : yearValue;\n                    this.isShortYear = false;\n                    this.isYearZero = (newVal[start - 1] === '0');\n                    if (isNaN(year)) {\n                        return;\n                    }\n                    while (year > 9999) {\n                        year = parseInt(year.toString().slice(1), 10);\n                    }\n                    if (year < 1) {\n                        this.isYearPart = false;\n                    }\n                    else {\n                        newDateValue.setFullYear(year);\n                        if (year.toString().length === yearValue) {\n                            this.isNavigate = true;\n                        }\n                        this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                        this.isYearPart = true;\n                    }\n                    break;\n                }\n            case 'h':\n                this.hour = (this.isHourPart && (newDateValue.getHours() % 12 || 12).toString().length < 2\n                    && !this.isPersist() ? (newDateValue.getHours() % 12 || 12) * 10 : 0) + parseInt(newVal[start - 1], 10);\n                this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n                this.navigated = this.navigated ? false : this.navigated;\n                if (isNaN(this.hour)) {\n                    return;\n                }\n                while (this.hour > 12) {\n                    this.hour = parseInt(this.hour.toString().slice(1), 10);\n                }\n                newDateValue.setHours(Math.floor(newDateValue.getHours() / 12) * 12 + (this.hour % 12));\n                this.isNavigate = this.hour.toString().length === 2;\n                this.isHourPart = true;\n                this.hourTypeCount = this.hourTypeCount + 1;\n                break;\n            case 'H':\n                this.hour = (this.isHourPart && newDateValue.getHours().toString().length < 2 &&\n                    !this.isPersist() ? newDateValue.getHours() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n                this.navigated = this.navigated ? false : this.navigated;\n                if (isNaN(this.hour)) {\n                    return;\n                }\n                for (var i = 0; this.hour > 23; i++) {\n                    this.hour = parseInt(this.hour.toString().slice(1), 10);\n                }\n                newDateValue.setHours(this.hour);\n                this.isNavigate = this.hour.toString().length === 2;\n                this.isHourPart = true;\n                this.hourTypeCount = this.hourTypeCount + 1;\n                break;\n            case 'm':\n                {\n                    var minutes = (this.isMinutePart && newDateValue.getMinutes().toString().length < 2\n                        && !this.isPersist() ? newDateValue.getMinutes() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                    this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n                    this.navigated = this.navigated ? false : this.navigated;\n                    if (isNaN(minutes)) {\n                        return;\n                    }\n                    for (var i = 0; minutes > 59; i++) {\n                        minutes = parseInt(minutes.toString().slice(1), 10);\n                    }\n                    newDateValue.setMinutes(minutes);\n                    this.isNavigate = minutes.toString().length === 2;\n                    this.isMinutePart = true;\n                    this.minuteTypeCount = this.minuteTypeCount + 1;\n                    break;\n                }\n            case 's':\n                {\n                    var seconds = (this.isSecondsPart && newDateValue.getSeconds().toString().length < 2 &&\n                        !this.isPersist() ? newDateValue.getSeconds() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                    this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n                    this.navigated = this.navigated ? false : this.navigated;\n                    if (isNaN(seconds)) {\n                        return;\n                    }\n                    for (var i = 0; seconds > 59; i++) {\n                        seconds = parseInt(seconds.toString().slice(1), 10);\n                    }\n                    newDateValue.setSeconds(seconds);\n                    this.isNavigate = seconds.toString().length === 2;\n                    this.isSecondsPart = true;\n                    this.secondTypeCount = this.secondTypeCount + 1;\n                    break;\n                }\n            case 'a':\n                {\n                    this.periodCharacter += newVal[start - 1].toLowerCase();\n                    var periodString = (this.getCulturedValue('dayPeriods.format.wide'));\n                    var periodkeys = Object.keys(periodString);\n                    for (var i = 0; this.periodCharacter.length > 0; i++) {\n                        if ((periodString[periodkeys[0]].toLowerCase().indexOf(this.periodCharacter) === 0\n                            && newDateValue.getHours() >= 12) || (periodString[periodkeys[1]].toLowerCase().\n                            indexOf(this.periodCharacter) === 0 && newDateValue.getHours() < 12)) {\n                            newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n                            this.maskDateValue = newDateValue;\n                        }\n                        this.periodCharacter = this.periodCharacter.substring(1, this.periodCharacter.length);\n                    }\n                    break;\n                }\n            default:\n                break;\n        }\n        this.maskDateValue = newDateValue;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    MaskedDateTime.prototype.formatCheck = function () {\n        var proxy = null || this;\n        function formatValueSpecifier(formattext) {\n            var result;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var daysAbbreviated = proxy.getCulturedValue('days[stand-alone].abbreviated');\n            var dayKeyAbbreviated = Object.keys(daysAbbreviated);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var daysWide = (proxy.getCulturedValue('days[stand-alone].wide'));\n            var dayKeyWide = Object.keys(daysWide);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var daysNarrow = (proxy.getCulturedValue('days[stand-alone].narrow'));\n            var dayKeyNarrow = Object.keys(daysNarrow);\n            var monthAbbreviated = (proxy.getCulturedValue('months[stand-alone].abbreviated'));\n            var monthWide = (proxy.getCulturedValue('months[stand-alone].wide'));\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var periodString = (proxy.getCulturedValue('dayPeriods.format.wide'));\n            var periodkeys = Object.keys(periodString);\n            var milliseconds;\n            var dateOptions;\n            switch (formattext) {\n                case 'ddd':\n                case 'dddd':\n                case 'd':\n                    result = proxy.isDayPart ? proxy.maskDateValue.getDate().toString() : proxy.defaultConstant['day'].toString();\n                    result = proxy.zeroCheck(proxy.isDateZero, proxy.isDayPart, result);\n                    if (proxy.dayTypeCount === 2) {\n                        proxy.isNavigate = true;\n                        proxy.dayTypeCount = 0;\n                    }\n                    break;\n                case 'dd':\n                    result = proxy.isDayPart ? proxy.roundOff(proxy.maskDateValue.getDate(), 2) : proxy.defaultConstant['day'].toString();\n                    result = proxy.zeroCheck(proxy.isDateZero, proxy.isDayPart, result);\n                    if (proxy.dayTypeCount === 2) {\n                        proxy.isNavigate = true;\n                        proxy.dayTypeCount = 0;\n                    }\n                    break;\n                case 'E':\n                case 'EE':\n                case 'EEE':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysAbbreviated[dayKeyAbbreviated[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'EEEE':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysWide[dayKeyWide[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'EEEEE':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysNarrow[dayKeyNarrow[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'M':\n                    result = proxy.isMonthPart ? (proxy.maskDateValue.getMonth() + 1).toString() : proxy.defaultConstant['month'].toString();\n                    result = proxy.zeroCheck(proxy.isMonthZero, proxy.isMonthPart, result);\n                    if (proxy.monthTypeCount === 2) {\n                        proxy.isNavigate = true;\n                        proxy.monthTypeCount = 0;\n                    }\n                    break;\n                case 'MM':\n                    result = proxy.isMonthPart ? proxy.roundOff(proxy.maskDateValue.getMonth() + 1, 2) : proxy.defaultConstant['month'].toString();\n                    result = proxy.zeroCheck(proxy.isMonthZero, proxy.isMonthPart, result);\n                    if (proxy.monthTypeCount === 2) {\n                        proxy.isNavigate = true;\n                        proxy.monthTypeCount = 0;\n                    }\n                    break;\n                case 'MMM':\n                    result = proxy.isMonthPart ? monthAbbreviated[proxy.maskDateValue.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'MMMM':\n                    result = proxy.isMonthPart ? monthWide[proxy.maskDateValue.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'yy':\n                    result = proxy.isYearPart ? proxy.roundOff(proxy.maskDateValue.getFullYear() % 100, 2) : proxy.defaultConstant['year'].toString();\n                    result = proxy.zeroCheck(proxy.isYearZero, proxy.isYearPart, result);\n                    break;\n                case 'y':\n                case 'yyy':\n                case 'yyyy':\n                    result = proxy.isYearPart ? proxy.roundOff(proxy.maskDateValue.getFullYear(), 4) : proxy.defaultConstant['year'].toString();\n                    result = proxy.zeroCheck(proxy.isYearZero, proxy.isYearPart, result);\n                    break;\n                case 'h':\n                    result = proxy.isHourPart ? (proxy.maskDateValue.getHours() % 12 || 12).toString() : proxy.defaultConstant['hour'].toString();\n                    if (proxy.hourTypeCount === 2) {\n                        proxy.isNavigate = true;\n                        proxy.hourTypeCount = 0;\n                    }\n                    break;\n                case 'hh':\n                    result = proxy.isHourPart ? proxy.roundOff(proxy.maskDateValue.getHours() % 12 || 12, 2) : proxy.defaultConstant['hour'].toString();\n                    if (proxy.hourTypeCount === 2) {\n                        proxy.isNavigate = true;\n                        proxy.hourTypeCount = 0;\n                    }\n                    break;\n                case 'H':\n                    result = proxy.isHourPart ? proxy.maskDateValue.getHours().toString() : proxy.defaultConstant['hour'].toString();\n                    if (proxy.hourTypeCount === 2) {\n                        proxy.isNavigate = true;\n                        proxy.hourTypeCount = 0;\n                    }\n                    break;\n                case 'HH':\n                    result = proxy.isHourPart ? proxy.roundOff(proxy.maskDateValue.getHours(), 2) : proxy.defaultConstant['hour'].toString();\n                    if (proxy.hourTypeCount === 2) {\n                        proxy.isNavigate = true;\n                        proxy.hourTypeCount = 0;\n                    }\n                    break;\n                case 'm':\n                    result = proxy.isMinutePart ? proxy.maskDateValue.getMinutes().toString() : proxy.defaultConstant['minute'].toString();\n                    if (proxy.minuteTypeCount === 2) {\n                        proxy.isNavigate = true;\n                        proxy.minuteTypeCount = 0;\n                    }\n                    break;\n                case 'mm':\n                    result = proxy.isMinutePart ? proxy.roundOff(proxy.maskDateValue.getMinutes(), 2) : proxy.defaultConstant['minute'].toString();\n                    if (proxy.minuteTypeCount === 2) {\n                        proxy.isNavigate = true;\n                        proxy.minuteTypeCount = 0;\n                    }\n                    break;\n                case 's':\n                    result = proxy.isSecondsPart ? proxy.maskDateValue.getSeconds().toString() : proxy.defaultConstant['second'].toString();\n                    if (proxy.secondTypeCount === 2) {\n                        proxy.isNavigate = true;\n                        proxy.secondTypeCount = 0;\n                    }\n                    break;\n                case 'ss':\n                    result = proxy.isSecondsPart ? proxy.roundOff(proxy.maskDateValue.getSeconds(), 2) : proxy.defaultConstant['second'].toString();\n                    if (proxy.secondTypeCount === 2) {\n                        proxy.isNavigate = true;\n                        proxy.secondTypeCount = 0;\n                    }\n                    break;\n                case 'f':\n                    result = Math.floor(proxy.maskDateValue.getMilliseconds() / 100).toString();\n                    break;\n                case 'ff':\n                    milliseconds = proxy.maskDateValue.getMilliseconds();\n                    if (proxy.maskDateValue.getMilliseconds() > 99) {\n                        milliseconds = Math.floor(proxy.maskDateValue.getMilliseconds() / 10);\n                    }\n                    result = proxy.roundOff(milliseconds, 2);\n                    break;\n                case 'fff':\n                    result = proxy.roundOff(proxy.maskDateValue.getMilliseconds(), 3);\n                    break;\n                case 'a':\n                case 'aa':\n                    result = proxy.maskDateValue.getHours() < 12 ? periodString['am'] : periodString['pm'];\n                    break;\n                case 'z':\n                case 'zz':\n                case 'zzz':\n                case 'zzzz':\n                    dateOptions = {\n                        format: formattext,\n                        type: 'dateTime', skeleton: 'yMd', calendar: proxy.parent.calendarMode\n                    };\n                    result = proxy.parent.globalize.formatDate(proxy.maskDateValue, dateOptions);\n                    break;\n            }\n            result = result !== undefined ? result : formattext.slice(1, formattext.length - 1);\n            if (proxy.isHiddenMask) {\n                var hiddenChar = '';\n                for (var i = 0; i < result.length; i++) {\n                    hiddenChar += formattext[0];\n                }\n                return hiddenChar;\n            }\n            else {\n                return result;\n            }\n        }\n        return formatValueSpecifier;\n    };\n    MaskedDateTime.prototype.maskInputHandler = function () {\n        var start = this.parent.inputElement.selectionStart;\n        var formatText = '';\n        if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n            formatText = this.hiddenMask[start];\n        }\n        this.differenceCheck();\n        var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isDateZero = this.isMonthZero = this.isYearZero = false;\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.previousValue = inputValue;\n        this.parent.inputElement.value = inputValue;\n        this.parent.inputElement.value = inputValue;\n        for (var i = 0; i < this.hiddenMask.length; i++) {\n            if (formatText === this.hiddenMask[i]) {\n                start = i;\n                break;\n            }\n        }\n        this.parent.inputElement.selectionStart = start;\n        this.validCharacterCheck();\n        if ((this.isNavigate || this.isDeletion) && !this.isDeleteKey) {\n            var isbackward = this.isNavigate ? false : true;\n            this.isNavigate = this.isDeletion = false;\n            this.navigateSelection(isbackward);\n        }\n        if (this.isDeleteKey) {\n            this.isDeletion = false;\n        }\n        this.isDeleteKey = false;\n    };\n    MaskedDateTime.prototype.navigateSelection = function (isbackward) {\n        var start = this.parent.inputElement.selectionStart;\n        var end = this.parent.inputElement.selectionEnd;\n        var formatIndex = isbackward ? start - 1 : end;\n        this.navigated = true;\n        while (formatIndex < this.hiddenMask.length && formatIndex >= 0) {\n            if (this.validCharacters.indexOf(this.hiddenMask[formatIndex]) >= 0) {\n                this.setSelection(this.hiddenMask[formatIndex]);\n                break;\n            }\n            formatIndex = formatIndex + (isbackward ? -1 : 1);\n        }\n    };\n    MaskedDateTime.prototype.roundOff = function (val, count) {\n        var valueText = val.toString();\n        var length = count - valueText.length;\n        var result = '';\n        for (var i = 0; i < length; i++) {\n            result += '0';\n        }\n        return result + valueText;\n    };\n    MaskedDateTime.prototype.zeroCheck = function (isZero, isDayPart, resultValue) {\n        var result = resultValue;\n        if (isZero && !isDayPart) {\n            result = '0';\n        }\n        return result;\n    };\n    MaskedDateTime.prototype.handleDeletion = function (format, isSegment) {\n        switch (format) {\n            case 'd':\n                this.isDayPart = isSegment;\n                break;\n            case 'M':\n                this.isMonthPart = isSegment;\n                if (!isSegment) {\n                    this.maskDateValue.setMonth(0);\n                    this.monthCharacter = '';\n                }\n                break;\n            case 'y':\n                this.isYearPart = isSegment;\n                break;\n            case 'H':\n            case 'h':\n                this.isHourPart = isSegment;\n                if (!isSegment) {\n                    this.periodCharacter = '';\n                }\n                break;\n            case 'm':\n                this.isMinutePart = isSegment;\n                break;\n            case 's':\n                this.isSecondsPart = isSegment;\n                break;\n            default:\n                return false;\n        }\n        return true;\n    };\n    MaskedDateTime.prototype.dateAlteration = function (isDecrement) {\n        var start = this.parent.inputElement.selectionStart;\n        var formatText = '';\n        if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n            formatText = this.hiddenMask[start];\n        }\n        else {\n            return;\n        }\n        var newDateValue = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n        this.previousDate = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n        var incrementValue = isDecrement ? -1 : 1;\n        switch (formatText) {\n            case 'd':\n                newDateValue.setDate(newDateValue.getDate() + incrementValue);\n                break;\n            case 'M':\n                {\n                    var newMonth = newDateValue.getMonth() + incrementValue;\n                    newDateValue.setDate(1);\n                    newDateValue.setMonth(newMonth);\n                    if (this.isDayPart) {\n                        var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n                        var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n                        if (this.previousDate.getDate() === previousMaxDate && currentMaxDate <= previousMaxDate) {\n                            newDateValue.setDate(currentMaxDate);\n                        }\n                        else {\n                            newDateValue.setDate(this.previousDate.getDate());\n                        }\n                    }\n                    else {\n                        newDateValue.setDate(this.previousDate.getDate());\n                    }\n                    this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                    break;\n                }\n            case 'y':\n                newDateValue.setFullYear(newDateValue.getFullYear() + incrementValue);\n                break;\n            case 'H':\n            case 'h':\n                newDateValue.setHours(newDateValue.getHours() + incrementValue);\n                break;\n            case 'm':\n                newDateValue.setMinutes(newDateValue.getMinutes() + incrementValue);\n                break;\n            case 's':\n                newDateValue.setSeconds(newDateValue.getSeconds() + incrementValue);\n                break;\n            case 'a':\n                newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n                break;\n            default:\n                break;\n        }\n        this.maskDateValue = newDateValue.getFullYear() > 0 ? newDateValue : this.maskDateValue;\n        if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n            this.handleDeletion(this.hiddenMask[start], true);\n        }\n    };\n    MaskedDateTime.prototype.getCulturedValue = function (format) {\n        var locale = this.parent.locale;\n        var result;\n        if (locale === 'en' || locale === 'en-US') {\n            result = getValue(format, getDefaultDateObject());\n        }\n        else {\n            result = getValue('main.' + '' + locale + ('.dates.calendars.gregorian.' + format), cldrData);\n        }\n        return result;\n    };\n    MaskedDateTime.prototype.getCulturedFormat = function () {\n        var formatString = (this.getCulturedValue('dateTimeFormats[availableFormats].yMd')).toString();\n        if (this.parent.moduleName === 'datepicker') {\n            formatString = (this.getCulturedValue('dateTimeFormats[availableFormats].yMd')).toString();\n            if (this.parent.format && this.parent.formatString) {\n                formatString = this.parent.formatString;\n            }\n        }\n        if (this.parent.moduleName === 'datetimepicker') {\n            formatString = (this.getCulturedValue('dateTimeFormats[availableFormats].yMd')).toString();\n            if (this.parent.dateTimeFormat) {\n                formatString = this.parent.dateTimeFormat;\n            }\n        }\n        if (this.parent.moduleName === 'timepicker') {\n            formatString = this.parent.cldrTimeFormat();\n        }\n        return formatString;\n    };\n    MaskedDateTime.prototype.clearHandler = function () {\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n        this.updateValue();\n    };\n    MaskedDateTime.prototype.updateValue = function () {\n        this.monthCharacter = this.periodCharacter = '';\n        var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.previousValue = inputValue;\n        this.parent.updateInputValue(inputValue);\n    };\n    MaskedDateTime.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return MaskedDateTime;\n}());\nexport { MaskedDateTime };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}