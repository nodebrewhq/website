{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NotifyPropertyChanges, Component, Property, getUniqueID, isNullOrUndefined, addClass, attributes, removeClass, remove, Event } from '@syncfusion/ej2-base';\nvar INPUTFIELD = 'e-otp-input-field';\nvar RTL = 'e-rtl';\n/**\n * Specifies the type of input for the Otp (One-Time Password) input component.\n */\nexport var OtpInputType;\n(function (OtpInputType) {\n  /**\n   * Specifies the type of input to be number for the Otp input.\n   */\n  OtpInputType[\"Number\"] = \"number\";\n  /**\n   * Specifies the type of input to be text for the Otp input.\n   */\n  OtpInputType[\"Text\"] = \"text\";\n  /**\n   * Specifies the type of input to be password for the Otp input.\n   */\n  OtpInputType[\"Password\"] = \"password\";\n})(OtpInputType || (OtpInputType = {}));\n/**\n * Specifies the style variant for the Otp (One-Time Password) input component.\n */\nexport var OtpInputStyle;\n(function (OtpInputStyle) {\n  /**\n   * Specifies the style of the Otp input to be outlined.\n   */\n  OtpInputStyle[\"Outlined\"] = \"outlined\";\n  /**\n   * Specifies the style of the Otp input to be underlined.\n   */\n  OtpInputStyle[\"Underlined\"] = \"underlined\";\n  /**\n   * Specifies the style of the Otp input to be filled.\n   */\n  OtpInputStyle[\"Filled\"] = \"filled\";\n})(OtpInputStyle || (OtpInputStyle = {}));\n/**\n * Represents the Otp component that allows the user to enter the otp values.\n * ```html\n * <div id='OTPInput'></div>\n * ```\n * ```typescript\n * <script>\n *   var OtpinputObj = new OtpInput();\n *   OtpinputObj.appendTo('#OTPInput');\n * </script>\n * ```\n */\nvar OtpInput = /** @class */function (_super) {\n  __extends(OtpInput, _super);\n  function OtpInput(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    /* Private variables */\n    _this.inputs = [];\n    _this.previousValue = '';\n    _this.separatorElements = [];\n    _this.shouldFireFocus = true;\n    _this.shouldFireBlur = true;\n    _this.isFocusInCalled = false;\n    _this.isFocusOutCalled = false;\n    return _this;\n  }\n  OtpInput.prototype.preRender = function () {\n    if (!this.element.id) {\n      this.element.id = getUniqueID('e-' + this.getModuleName());\n    }\n  };\n  OtpInput.prototype.render = function () {\n    this.initialize();\n  };\n  OtpInput.prototype.initialize = function () {\n    attributes(this.element, {\n      'role': 'group'\n    });\n    this.renderInputs();\n    this.renderSeparator(1, this.inputs.length);\n    this.addPlaceHolder();\n    this.updateCssClass(this.cssClass);\n    this.updateVariantClass();\n    this.updateAriaLabel(this.ariaLabels);\n    this.setElementAttributes(this.htmlAttributes, this.element);\n    if (this.enableRtl) {\n      this.element.classList.add(RTL);\n    }\n    this.previousValue = this.value.toString();\n  };\n  OtpInput.prototype.renderInputs = function () {\n    this.hiddenInputEle = this.createElement('input', {\n      id: 'otpInput_hidden',\n      attrs: {\n        name: this.element.id,\n        type: 'hidden',\n        value: this.type === 'number' ? this.value.toString().replace(/\\D/g, '') : this.value.toString(),\n        autoComplete: 'off'\n      }\n    });\n    this.element.appendChild(this.hiddenInputEle);\n    for (var i = 0; i < this.length; i++) {\n      this.createOtpInput(i);\n    }\n  };\n  OtpInput.prototype.createOtpInput = function (index) {\n    var valueContainer = this.getDefaultValue();\n    var inputValue = '';\n    if (valueContainer) {\n      if (this.type === 'number') {\n        var valueAtIndex = valueContainer[parseInt(index.toString(), 10)];\n        if (!isNaN(Number(valueAtIndex))) {\n          inputValue = valueAtIndex;\n        }\n      } else {\n        inputValue = valueContainer[parseInt(index.toString(), 10)] || '';\n      }\n    }\n    var inputEle = this.createElement('input', {\n      id: this.element.id + \"-\" + (index + 1),\n      className: INPUTFIELD + ' ' + 'e-input',\n      attrs: {\n        maxlength: '1',\n        type: this.type,\n        inputmode: this.type === 'number' ? 'numeric' : 'text'\n      }\n    });\n    if (this.disabled) {\n      inputEle.setAttribute('disabled', 'disabled');\n    }\n    this.element.appendChild(inputEle);\n    this.inputs.push(inputEle);\n    if (inputValue) {\n      inputEle.value = inputValue;\n    }\n    this.wireEvents(inputEle, index);\n  };\n  OtpInput.prototype.renderSeparator = function (index, length) {\n    if (this.separator.length > 0) {\n      for (var i = index; i < length; i++) {\n        var separatorElement = this.createElement('span', {\n          className: 'e-otp-separator'\n        });\n        separatorElement.textContent = this.separator;\n        this.separatorElements.push(separatorElement);\n        this.element.insertBefore(separatorElement, this.inputs[parseInt(i.toString(), 10)]);\n      }\n    }\n  };\n  OtpInput.prototype.updateSeparatorValue = function () {\n    if (this.separator === '') {\n      for (var i = 0; i < this.separatorElements.length; i++) {\n        remove(this.separatorElements[parseInt(i.toString(), 10)]);\n      }\n      this.separatorElements = [];\n      return;\n    }\n    for (var i = 0; i < this.separatorElements.length; i++) {\n      this.separatorElements[parseInt(i.toString(), 10)].textContent = this.separator;\n    }\n  };\n  OtpInput.prototype.addPlaceHolder = function () {\n    for (var i = 0; i < this.inputs.length; i++) {\n      this.setElementAttributes({\n        'placeholder': this.placeholder.length === 1 || this.placeholder.length === 0 ? this.placeholder : this.placeholder.charAt(i)\n      }, this.inputs[parseInt(i.toString(), 10)]);\n    }\n  };\n  OtpInput.prototype.updateInputType = function (inputType) {\n    this.inputs.forEach(function (input) {\n      input.type = inputType;\n      input.setAttribute('inputmode', inputType === 'number' ? 'numeric' : 'text');\n    });\n  };\n  OtpInput.prototype.getDefaultValue = function () {\n    var extractedValue = typeof this.value === 'number' ? this.value.toString() : this.value;\n    // To remove the white space if present.\n    var value = extractedValue.replace(/\\s/g, '');\n    if (value.length > 0) {\n      return value.split('');\n    }\n    return undefined;\n  };\n  OtpInput.prototype.handleInputChange = function (index, event) {\n    var currentInputElement = this.inputs[parseInt(index.toString(), 10)];\n    if (currentInputElement && index < this.length - 1 && currentInputElement.value.length > 0) {\n      var nextInputElement = this.inputs[parseInt(index.toString(), 10) + 1];\n      this.shouldFireFocus = this.shouldFireBlur = false;\n      nextInputElement.focus();\n      if (nextInputElement && nextInputElement.value.length > 0) {\n        nextInputElement.select();\n      }\n    }\n    var target = event.target;\n    if (target.value.length > 1) {\n      target.value = target.value.slice(0, 1);\n    }\n    this.triggerInputEvent(event);\n    this.triggerValuechanged(event, true);\n  };\n  OtpInput.prototype.handleKeyAction = function (index, event) {\n    if (event.key.length > 1 && !(index === 0 && event.key === 'Backspace' || index === this.length - 1 && event.key === 'Delete')) {\n      this.shouldFireFocus = this.shouldFireBlur = false;\n    }\n    var currentInputElement = this.inputs[parseInt(index.toString(), 10)];\n    var previousInputElement = this.inputs[parseInt(index.toString(), 10) - 1];\n    var nextInputElement = this.inputs[parseInt(index.toString(), 10) + 1];\n    if (event.key === 'Delete') {\n      var value = '';\n      if (currentInputElement.value.length > 0) {\n        value = currentInputElement.value;\n        currentInputElement.value = '';\n      } else {\n        if (index !== this.inputs.length - 1) {\n          value = nextInputElement.value;\n          nextInputElement.value = '';\n          nextInputElement.focus();\n        }\n      }\n      if (value.length > 0) {\n        this.triggerInputEvent(event);\n      }\n    } else if (event.key === 'Backspace') {\n      if (index !== 0 && currentInputElement.value.length === 0) {\n        var previousValue = previousInputElement.value;\n        previousInputElement.value = '';\n        previousInputElement.focus();\n        if (previousValue.length > 0) {\n          this.triggerInputEvent(event);\n        }\n      }\n    } else if (event.key === 'ArrowLeft' || event.key === 'ArrowRight') {\n      if (event.key === 'ArrowLeft') {\n        if (index > 0) {\n          previousInputElement.focus();\n          previousInputElement.select();\n        }\n      } else {\n        if (index < this.inputs.length - 1) {\n          nextInputElement.focus();\n          nextInputElement.select();\n        }\n      }\n      event.preventDefault();\n    } else if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      event.preventDefault();\n    } else {\n      if (event.key !== 'Tab' && !event.shiftKey && !event.ctrlKey) {\n        if (this.type === 'number' && /\\D/.test(event.key.toLocaleLowerCase())) {\n          event.preventDefault();\n        }\n      }\n    }\n  };\n  OtpInput.prototype.handleSelection = function (index) {\n    var currentInputElement = this.inputs[parseInt(index.toString(), 10)];\n    if (currentInputElement.value) {\n      currentInputElement.select();\n    }\n  };\n  OtpInput.prototype.handleFocus = function (index, event) {\n    addClass([this.inputs[parseInt(index.toString(), 10)]], 'e-otp-input-focus');\n    if (this.shouldFireFocus) {\n      var eventArgs = {\n        element: this.element,\n        event: event,\n        isInteracted: this.isFocusInCalled ? false : true,\n        value: this.value\n      };\n      this.trigger('focus', eventArgs);\n    }\n    this.shouldFireFocus = true;\n  };\n  OtpInput.prototype.handleBlur = function (index, event) {\n    removeClass([this.inputs[parseInt(index.toString(), 10)]], 'e-otp-input-focus');\n    if (this.shouldFireBlur) {\n      var eventArgs = {\n        element: this.element,\n        event: event,\n        isInteracted: this.isFocusOutCalled ? false : true,\n        value: this.value\n      };\n      this.trigger('blur', eventArgs);\n    }\n    this.shouldFireBlur = true;\n  };\n  OtpInput.prototype.handlePaste = function (index, event) {\n    var clipboardData = event.clipboardData;\n    if (clipboardData) {\n      var pastedText = clipboardData.getData('text');\n      var pastedValues = pastedText.split('');\n      var pastedValueIndex = 0;\n      for (var i = index; i < this.inputs.length; i++) {\n        if (pastedValues.length > 0 && pastedValues[parseInt(pastedValueIndex.toString(), 10)]) {\n          this.inputs[parseInt(i.toString(), 10)].value = pastedValues[parseInt(pastedValueIndex.toString(), 10)];\n          pastedValueIndex++;\n          this.updateValueProperty();\n        }\n      }\n      this.focusIn();\n      this.triggerValuechanged(event, true);\n    }\n  };\n  OtpInput.prototype.triggerInputEvent = function (event) {\n    var previousValue = this.value.toString();\n    this.updateValueProperty();\n    var inputEventArgs = {\n      element: this.element,\n      event: event,\n      previousValue: previousValue,\n      value: this.value.toString()\n    };\n    this.trigger('input', inputEventArgs);\n  };\n  OtpInput.prototype.triggerValuechanged = function (event, isInteracted) {\n    if (this.length === this.value.toString().length) {\n      if (this.previousValue !== this.value) {\n        var eventArgs = {\n          element: this.element,\n          event: event,\n          isInteracted: isInteracted ? isInteracted : false,\n          previousValue: this.previousValue,\n          value: this.value\n        };\n        this.trigger('valueChanged', eventArgs);\n        this.previousValue = this.value.toString();\n      }\n    }\n  };\n  OtpInput.prototype.wireEvents = function (inputEle, index) {\n    inputEle.addEventListener('focus', this.handleFocus.bind(this, index));\n    inputEle.addEventListener('blur', this.handleBlur.bind(this, index));\n    inputEle.addEventListener('input', this.handleInputChange.bind(this, index));\n    inputEle.addEventListener('keydown', this.handleKeyAction.bind(this, index));\n    inputEle.addEventListener('click', this.handleSelection.bind(this, index));\n    inputEle.addEventListener('paste', this.handlePaste.bind(this, index));\n  };\n  OtpInput.prototype.unWireEvents = function () {\n    for (var i = 0; i < this.inputs.length; i++) {\n      var currentInputElement = this.inputs[parseInt(i.toString(), 10)];\n      currentInputElement.removeEventListener('focus', this.handleFocus.bind(this, i));\n      currentInputElement.removeEventListener('blur', this.handleBlur.bind(this, i));\n      currentInputElement.removeEventListener('input', this.handleInputChange.bind(this, i));\n      currentInputElement.removeEventListener('keydown', this.handleKeyAction.bind(this, i));\n      currentInputElement.removeEventListener('click', this.handleSelection.bind(this, i));\n      currentInputElement.removeEventListener('paste', this.handlePaste.bind(this, i));\n    }\n  };\n  OtpInput.prototype.updateValueProperty = function () {\n    var value = '';\n    this.inputs.forEach(function (input) {\n      value += input.value;\n    });\n    var prevOnChange = this.isProtectedOnChange;\n    this.isProtectedOnChange = true;\n    this.value = typeof this.value === 'number' ? parseInt(value, 10) : value;\n    this.isProtectedOnChange = prevOnChange;\n    this.hiddenInputEle.value = this.value.toString();\n  };\n  OtpInput.prototype.updateInputValue = function (previousValue) {\n    var stringifiedValue = this.value.toString();\n    for (var i = 0; i < this.inputs.length; i++) {\n      var isValueChanged = previousValue.toString().charAt(i) !== stringifiedValue.charAt(i);\n      if (isValueChanged) {\n        this.inputs[parseInt(i.toString(), 10)].value = stringifiedValue.charAt(i);\n        this.hiddenInputEle.value = stringifiedValue;\n      }\n    }\n    this.focusIn();\n  };\n  OtpInput.prototype.updateCssClass = function (addCss, removeCss) {\n    if (removeCss === void 0) {\n      removeCss = '';\n    }\n    var _a, _b;\n    var cssClasses;\n    if (removeCss) {\n      cssClasses = removeCss.trim().split(' ');\n      (_a = this.element.classList).remove.apply(_a, cssClasses);\n    }\n    if (addCss) {\n      cssClasses = addCss.trim().split(' ');\n      (_b = this.element.classList).add.apply(_b, cssClasses);\n    }\n  };\n  OtpInput.prototype.updateVariantClass = function () {\n    var variantClass = this.stylingMode.toLocaleLowerCase();\n    variantClass = variantClass === 'outlined' ? 'outline' : variantClass;\n    if (variantClass === 'underlined' || variantClass === 'filled' || variantClass === 'outline') {\n      removeClass([this.element], ['e-underlined', 'e-filled', 'e-outline']);\n      addClass([this.element], \"e-\" + variantClass);\n    }\n  };\n  OtpInput.prototype.updateAriaLabel = function (customAriaLabel) {\n    this.inputs.forEach(function (input, index) {\n      var defaultLabel = \"Enter Otp Character \" + (index + 1);\n      var ariaLabel = customAriaLabel && customAriaLabel.length > 0 ? customAriaLabel[parseInt(index.toString(), 10)] || defaultLabel : defaultLabel;\n      input.setAttribute('aria-label', ariaLabel);\n    });\n  };\n  OtpInput.prototype.updateDisabledState = function () {\n    var _this = this;\n    this.inputs.forEach(function (input) {\n      if (_this.disabled) {\n        input.setAttribute('disabled', 'disabled');\n      } else {\n        input.removeAttribute('disabled');\n      }\n    });\n  };\n  OtpInput.prototype.setElementAttributes = function (htmlAttributes, element) {\n    if (!isNullOrUndefined(htmlAttributes)) {\n      for (var key in htmlAttributes) {\n        if (key === 'class') {\n          var elementClass = htmlAttributes['class'].replace(/\\s+/g, ' ').trim();\n          if (elementClass) {\n            addClass([element], elementClass.split(' '));\n          }\n        } else if (key === 'name' && this.element.id === element.id) {\n          this.hiddenInputEle.setAttribute(key, htmlAttributes[\"\" + key]);\n        } else {\n          element.setAttribute(key, htmlAttributes[\"\" + key]);\n        }\n      }\n    }\n  };\n  OtpInput.prototype.handleLengthChange = function (currentValue, previousValue) {\n    var isLengthAdded = currentValue - previousValue > 0;\n    if (isLengthAdded) {\n      for (var i = previousValue; i < currentValue; i++) {\n        this.createOtpInput(i);\n      }\n      this.renderSeparator(previousValue, currentValue);\n      this.addPlaceHolder();\n      this.updateAriaLabel(this.ariaLabels);\n    } else {\n      if (currentValue >= 0 && this.inputs.length > 0) {\n        for (var i = currentValue; i < this.inputs.length; i++) {\n          remove(this.inputs[parseInt(i.toString(), 10)]);\n        }\n        this.inputs.splice(currentValue);\n        if (this.separatorElements.length > 0) {\n          // separator should be completely removed when length is 0 or 1;\n          var index = currentValue === 0 ? 0 : currentValue - 1;\n          for (var i = index; i < this.separatorElements.length; i++) {\n            remove(this.separatorElements[parseInt(i.toString(), 10)]);\n          }\n          this.separatorElements.splice(index);\n        }\n      }\n    }\n  };\n  /**\n   * To get component name.\n   *\n   * @returns {string} - Module Name\n   * @private\n   */\n  OtpInput.prototype.getModuleName = function () {\n    return 'otpinput';\n  };\n  /**\n   * To get the properties to be maintained in the persisted state.\n   *\n   * @returns {string} - Persist data\n   */\n  OtpInput.prototype.getPersistData = function () {\n    return this.addOnPersist([]);\n  };\n  /**\n   * Destroy the Otp input.\n   *\n   * @returns {void}\n   */\n  OtpInput.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.unWireEvents();\n    for (var i = 0; i < this.inputs.length; i++) {\n      remove(this.inputs[parseInt(i.toString(), 10)]);\n    }\n    for (var i = 0; i < this.separatorElements.length; i++) {\n      remove(this.separatorElements[parseInt(i.toString(), 10)]);\n    }\n    remove(this.hiddenInputEle);\n    removeClass([this.element], ['e-underlined', 'e-filled', 'e-outline', 'e-rtl']);\n    if (this.cssClass) {\n      removeClass([this.element], this.cssClass.trim().split(' '));\n    }\n    this.element.removeAttribute('role');\n    this.inputs = [];\n    this.separatorElements = [];\n    this.hiddenInputEle = null;\n  };\n  /**\n   * Sets the focus to the Otp input for interaction.\n   *\n   * @returns {void}\n   */\n  OtpInput.prototype.focusIn = function () {\n    this.isFocusInCalled = true;\n    var focusIndex = 0;\n    this.inputs.forEach(function (input, index) {\n      if (input.value.length > 0) {\n        focusIndex = index;\n      }\n    });\n    this.inputs[parseInt(focusIndex.toString(), 10)].focus();\n    this.isFocusInCalled = false;\n  };\n  /**\n   * Remove the focus from Otp input, if it is in focus state.\n   *\n   * @returns {void}\n   */\n  OtpInput.prototype.focusOut = function () {\n    this.isFocusOutCalled = true;\n    this.inputs.forEach(function (input) {\n      input.blur();\n    });\n    this.isFocusOutCalled = false;\n  };\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * @param  {OtpInputModel} newProp - Specifies new properties\n   * @param  {OtpInputModel} oldProp - Specifies old properties\n   * @returns {void}\n   * @private\n   */\n  OtpInput.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'value':\n          {\n            this.updateInputValue(oldProp.value);\n            this.triggerValuechanged();\n          }\n          break;\n        case 'placeholder':\n          this.addPlaceHolder();\n          break;\n        case 'disabled':\n          this.updateDisabledState();\n          break;\n        case 'cssClass':\n          this.updateCssClass(newProp.cssClass, oldProp.cssClass);\n          break;\n        case 'separator':\n          if (oldProp.separator === '') {\n            this.renderSeparator(1, this.inputs.length);\n          } else {\n            this.updateSeparatorValue();\n          }\n          break;\n        case 'type':\n          this.updateInputType(newProp.type);\n          break;\n        case 'stylingMode':\n          this.updateVariantClass();\n          break;\n        case 'ariaLabels':\n          this.updateAriaLabel(newProp.ariaLabels);\n          break;\n        case 'length':\n          this.handleLengthChange(newProp.length, oldProp.length);\n          break;\n        case 'enableRtl':\n          this.element.classList[this.enableRtl ? 'add' : 'remove'](RTL);\n          break;\n      }\n    }\n  };\n  __decorate([Property(4)], OtpInput.prototype, \"length\", void 0);\n  __decorate([Property('')], OtpInput.prototype, \"value\", void 0);\n  __decorate([Property(OtpInputType.Number)], OtpInput.prototype, \"type\", void 0);\n  __decorate([Property('')], OtpInput.prototype, \"separator\", void 0);\n  __decorate([Property('')], OtpInput.prototype, \"placeholder\", void 0);\n  __decorate([Property(OtpInputStyle.Outlined)], OtpInput.prototype, \"stylingMode\", void 0);\n  __decorate([Property(false)], OtpInput.prototype, \"disabled\", void 0);\n  __decorate([Property('')], OtpInput.prototype, \"cssClass\", void 0);\n  __decorate([Property({})], OtpInput.prototype, \"htmlAttributes\", void 0);\n  __decorate([Property([])], OtpInput.prototype, \"ariaLabels\", void 0);\n  __decorate([Event()], OtpInput.prototype, \"created\", void 0);\n  __decorate([Event()], OtpInput.prototype, \"valueChanged\", void 0);\n  __decorate([Event()], OtpInput.prototype, \"focus\", void 0);\n  __decorate([Event()], OtpInput.prototype, \"blur\", void 0);\n  __decorate([Event()], OtpInput.prototype, \"input\", void 0);\n  OtpInput = __decorate([NotifyPropertyChanges], OtpInput);\n  return OtpInput;\n}(Component);\nexport { OtpInput };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","NotifyPropertyChanges","Component","Property","getUniqueID","isNullOrUndefined","addClass","attributes","removeClass","remove","Event","INPUTFIELD","RTL","OtpInputType","OtpInputStyle","OtpInput","_super","options","element","_this","call","inputs","previousValue","separatorElements","shouldFireFocus","shouldFireBlur","isFocusInCalled","isFocusOutCalled","preRender","id","getModuleName","render","initialize","renderInputs","renderSeparator","addPlaceHolder","updateCssClass","cssClass","updateVariantClass","updateAriaLabel","ariaLabels","setElementAttributes","htmlAttributes","enableRtl","classList","add","value","toString","hiddenInputEle","createElement","attrs","name","type","replace","autoComplete","appendChild","createOtpInput","index","valueContainer","getDefaultValue","inputValue","valueAtIndex","parseInt","isNaN","Number","inputEle","className","maxlength","inputmode","disabled","setAttribute","push","wireEvents","separator","separatorElement","textContent","insertBefore","updateSeparatorValue","placeholder","charAt","updateInputType","inputType","forEach","input","extractedValue","split","undefined","handleInputChange","event","currentInputElement","nextInputElement","focus","select","slice","triggerInputEvent","triggerValuechanged","handleKeyAction","previousInputElement","preventDefault","shiftKey","ctrlKey","test","toLocaleLowerCase","handleSelection","handleFocus","eventArgs","isInteracted","trigger","handleBlur","handlePaste","clipboardData","pastedText","getData","pastedValues","pastedValueIndex","updateValueProperty","focusIn","inputEventArgs","addEventListener","bind","unWireEvents","removeEventListener","prevOnChange","isProtectedOnChange","updateInputValue","stringifiedValue","isValueChanged","addCss","removeCss","_a","_b","cssClasses","trim","apply","variantClass","stylingMode","customAriaLabel","defaultLabel","ariaLabel","updateDisabledState","removeAttribute","elementClass","handleLengthChange","currentValue","isLengthAdded","splice","getPersistData","addOnPersist","destroy","focusIndex","focusOut","blur","onPropertyChanged","newProp","oldProp","_i","keys","prop","Outlined"],"sources":["/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/node_modules/@syncfusion/ej2-inputs/src/otp-input/otp-input.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NotifyPropertyChanges, Component, Property, getUniqueID, isNullOrUndefined, addClass, attributes, removeClass, remove, Event } from '@syncfusion/ej2-base';\nvar INPUTFIELD = 'e-otp-input-field';\nvar RTL = 'e-rtl';\n/**\n * Specifies the type of input for the Otp (One-Time Password) input component.\n */\nexport var OtpInputType;\n(function (OtpInputType) {\n    /**\n     * Specifies the type of input to be number for the Otp input.\n     */\n    OtpInputType[\"Number\"] = \"number\";\n    /**\n     * Specifies the type of input to be text for the Otp input.\n     */\n    OtpInputType[\"Text\"] = \"text\";\n    /**\n     * Specifies the type of input to be password for the Otp input.\n     */\n    OtpInputType[\"Password\"] = \"password\";\n})(OtpInputType || (OtpInputType = {}));\n/**\n * Specifies the style variant for the Otp (One-Time Password) input component.\n */\nexport var OtpInputStyle;\n(function (OtpInputStyle) {\n    /**\n     * Specifies the style of the Otp input to be outlined.\n     */\n    OtpInputStyle[\"Outlined\"] = \"outlined\";\n    /**\n     * Specifies the style of the Otp input to be underlined.\n     */\n    OtpInputStyle[\"Underlined\"] = \"underlined\";\n    /**\n     * Specifies the style of the Otp input to be filled.\n     */\n    OtpInputStyle[\"Filled\"] = \"filled\";\n})(OtpInputStyle || (OtpInputStyle = {}));\n/**\n * Represents the Otp component that allows the user to enter the otp values.\n * ```html\n * <div id='OTPInput'></div>\n * ```\n * ```typescript\n * <script>\n *   var OtpinputObj = new OtpInput();\n *   OtpinputObj.appendTo('#OTPInput');\n * </script>\n * ```\n */\nvar OtpInput = /** @class */ (function (_super) {\n    __extends(OtpInput, _super);\n    function OtpInput(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /* Private variables */\n        _this.inputs = [];\n        _this.previousValue = '';\n        _this.separatorElements = [];\n        _this.shouldFireFocus = true;\n        _this.shouldFireBlur = true;\n        _this.isFocusInCalled = false;\n        _this.isFocusOutCalled = false;\n        return _this;\n    }\n    OtpInput.prototype.preRender = function () {\n        if (!this.element.id) {\n            this.element.id = getUniqueID('e-' + this.getModuleName());\n        }\n    };\n    OtpInput.prototype.render = function () {\n        this.initialize();\n    };\n    OtpInput.prototype.initialize = function () {\n        attributes(this.element, { 'role': 'group' });\n        this.renderInputs();\n        this.renderSeparator(1, this.inputs.length);\n        this.addPlaceHolder();\n        this.updateCssClass(this.cssClass);\n        this.updateVariantClass();\n        this.updateAriaLabel(this.ariaLabels);\n        this.setElementAttributes(this.htmlAttributes, this.element);\n        if (this.enableRtl) {\n            this.element.classList.add(RTL);\n        }\n        this.previousValue = this.value.toString();\n    };\n    OtpInput.prototype.renderInputs = function () {\n        this.hiddenInputEle = this.createElement('input', {\n            id: 'otpInput_hidden',\n            attrs: {\n                name: this.element.id,\n                type: 'hidden',\n                value: this.type === 'number' ? this.value.toString().replace(/\\D/g, '') : this.value.toString(),\n                autoComplete: 'off'\n            }\n        });\n        this.element.appendChild(this.hiddenInputEle);\n        for (var i = 0; i < this.length; i++) {\n            this.createOtpInput(i);\n        }\n    };\n    OtpInput.prototype.createOtpInput = function (index) {\n        var valueContainer = this.getDefaultValue();\n        var inputValue = '';\n        if (valueContainer) {\n            if (this.type === 'number') {\n                var valueAtIndex = valueContainer[parseInt(index.toString(), 10)];\n                if (!isNaN(Number(valueAtIndex))) {\n                    inputValue = valueAtIndex;\n                }\n            }\n            else {\n                inputValue = valueContainer[parseInt(index.toString(), 10)] || '';\n            }\n        }\n        var inputEle = this.createElement('input', {\n            id: this.element.id + \"-\" + (index + 1),\n            className: INPUTFIELD + ' ' + 'e-input',\n            attrs: {\n                maxlength: '1',\n                type: this.type,\n                inputmode: (this.type === 'number' ? 'numeric' : 'text')\n            }\n        });\n        if (this.disabled) {\n            inputEle.setAttribute('disabled', 'disabled');\n        }\n        this.element.appendChild(inputEle);\n        this.inputs.push(inputEle);\n        if (inputValue) {\n            inputEle.value = inputValue;\n        }\n        this.wireEvents(inputEle, index);\n    };\n    OtpInput.prototype.renderSeparator = function (index, length) {\n        if (this.separator.length > 0) {\n            for (var i = index; i < length; i++) {\n                var separatorElement = this.createElement('span', {\n                    className: 'e-otp-separator'\n                });\n                separatorElement.textContent = this.separator;\n                this.separatorElements.push(separatorElement);\n                this.element.insertBefore(separatorElement, this.inputs[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    OtpInput.prototype.updateSeparatorValue = function () {\n        if (this.separator === '') {\n            for (var i = 0; i < this.separatorElements.length; i++) {\n                remove(this.separatorElements[parseInt(i.toString(), 10)]);\n            }\n            this.separatorElements = [];\n            return;\n        }\n        for (var i = 0; i < this.separatorElements.length; i++) {\n            this.separatorElements[parseInt(i.toString(), 10)].textContent = this.separator;\n        }\n    };\n    OtpInput.prototype.addPlaceHolder = function () {\n        for (var i = 0; i < this.inputs.length; i++) {\n            this.setElementAttributes({ 'placeholder': this.placeholder.length === 1 || this.placeholder.length === 0 ? this.placeholder : this.placeholder.charAt(i) }, this.inputs[parseInt(i.toString(), 10)]);\n        }\n    };\n    OtpInput.prototype.updateInputType = function (inputType) {\n        this.inputs.forEach(function (input) {\n            input.type = inputType;\n            input.setAttribute('inputmode', (inputType === 'number' ? 'numeric' : 'text'));\n        });\n    };\n    OtpInput.prototype.getDefaultValue = function () {\n        var extractedValue = typeof this.value === 'number' ? this.value.toString() : this.value;\n        // To remove the white space if present.\n        var value = extractedValue.replace(/\\s/g, '');\n        if (value.length > 0) {\n            return value.split('');\n        }\n        return undefined;\n    };\n    OtpInput.prototype.handleInputChange = function (index, event) {\n        var currentInputElement = this.inputs[parseInt(index.toString(), 10)];\n        if (currentInputElement && index < this.length - 1 && currentInputElement.value.length > 0) {\n            var nextInputElement = this.inputs[parseInt(index.toString(), 10) + 1];\n            this.shouldFireFocus = this.shouldFireBlur = false;\n            nextInputElement.focus();\n            if (nextInputElement && nextInputElement.value.length > 0) {\n                nextInputElement.select();\n            }\n        }\n        var target = event.target;\n        if (target.value.length > 1) {\n            target.value = target.value.slice(0, 1);\n        }\n        this.triggerInputEvent(event);\n        this.triggerValuechanged(event, true);\n    };\n    OtpInput.prototype.handleKeyAction = function (index, event) {\n        if (event.key.length > 1 && !((index === 0 && event.key === 'Backspace') ||\n            (index === this.length - 1 && event.key === 'Delete'))) {\n            this.shouldFireFocus = this.shouldFireBlur = false;\n        }\n        var currentInputElement = this.inputs[parseInt(index.toString(), 10)];\n        var previousInputElement = this.inputs[parseInt(index.toString(), 10) - 1];\n        var nextInputElement = this.inputs[parseInt(index.toString(), 10) + 1];\n        if (event.key === 'Delete') {\n            var value = '';\n            if (currentInputElement.value.length > 0) {\n                value = currentInputElement.value;\n                currentInputElement.value = '';\n            }\n            else {\n                if (index !== this.inputs.length - 1) {\n                    value = nextInputElement.value;\n                    nextInputElement.value = '';\n                    nextInputElement.focus();\n                }\n            }\n            if (value.length > 0) {\n                this.triggerInputEvent(event);\n            }\n        }\n        else if (event.key === 'Backspace') {\n            if (index !== 0 && currentInputElement.value.length === 0) {\n                var previousValue = previousInputElement.value;\n                previousInputElement.value = '';\n                previousInputElement.focus();\n                if (previousValue.length > 0) {\n                    this.triggerInputEvent(event);\n                }\n            }\n        }\n        else if (event.key === 'ArrowLeft' || event.key === 'ArrowRight') {\n            if (event.key === 'ArrowLeft') {\n                if (index > 0) {\n                    previousInputElement.focus();\n                    previousInputElement.select();\n                }\n            }\n            else {\n                if (index < this.inputs.length - 1) {\n                    nextInputElement.focus();\n                    nextInputElement.select();\n                }\n            }\n            event.preventDefault();\n        }\n        else if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n            event.preventDefault();\n        }\n        else {\n            if (event.key !== 'Tab' && !event.shiftKey && !event.ctrlKey) {\n                if (this.type === 'number' && (/\\D/.test(event.key.toLocaleLowerCase()))) {\n                    event.preventDefault();\n                }\n            }\n        }\n    };\n    OtpInput.prototype.handleSelection = function (index) {\n        var currentInputElement = this.inputs[parseInt(index.toString(), 10)];\n        if (currentInputElement.value) {\n            currentInputElement.select();\n        }\n    };\n    OtpInput.prototype.handleFocus = function (index, event) {\n        addClass([this.inputs[parseInt(index.toString(), 10)]], 'e-otp-input-focus');\n        if (this.shouldFireFocus) {\n            var eventArgs = {\n                element: this.element,\n                event: event,\n                isInteracted: this.isFocusInCalled ? false : true,\n                value: this.value\n            };\n            this.trigger('focus', eventArgs);\n        }\n        this.shouldFireFocus = true;\n    };\n    OtpInput.prototype.handleBlur = function (index, event) {\n        removeClass([this.inputs[parseInt(index.toString(), 10)]], 'e-otp-input-focus');\n        if (this.shouldFireBlur) {\n            var eventArgs = {\n                element: this.element,\n                event: event,\n                isInteracted: this.isFocusOutCalled ? false : true,\n                value: this.value\n            };\n            this.trigger('blur', eventArgs);\n        }\n        this.shouldFireBlur = true;\n    };\n    OtpInput.prototype.handlePaste = function (index, event) {\n        var clipboardData = event.clipboardData;\n        if (clipboardData) {\n            var pastedText = clipboardData.getData('text');\n            var pastedValues = pastedText.split('');\n            var pastedValueIndex = 0;\n            for (var i = index; i < this.inputs.length; i++) {\n                if (pastedValues.length > 0 && pastedValues[parseInt(pastedValueIndex.toString(), 10)]) {\n                    this.inputs[parseInt(i.toString(), 10)].value = pastedValues[parseInt(pastedValueIndex.toString(), 10)];\n                    pastedValueIndex++;\n                    this.updateValueProperty();\n                }\n            }\n            this.focusIn();\n            this.triggerValuechanged(event, true);\n        }\n    };\n    OtpInput.prototype.triggerInputEvent = function (event) {\n        var previousValue = this.value.toString();\n        this.updateValueProperty();\n        var inputEventArgs = {\n            element: this.element,\n            event: event,\n            previousValue: previousValue,\n            value: this.value.toString()\n        };\n        this.trigger('input', inputEventArgs);\n    };\n    OtpInput.prototype.triggerValuechanged = function (event, isInteracted) {\n        if (this.length === this.value.toString().length) {\n            if (this.previousValue !== this.value) {\n                var eventArgs = {\n                    element: this.element,\n                    event: event,\n                    isInteracted: isInteracted ? isInteracted : false,\n                    previousValue: this.previousValue,\n                    value: this.value\n                };\n                this.trigger('valueChanged', eventArgs);\n                this.previousValue = this.value.toString();\n            }\n        }\n    };\n    OtpInput.prototype.wireEvents = function (inputEle, index) {\n        inputEle.addEventListener('focus', this.handleFocus.bind(this, index));\n        inputEle.addEventListener('blur', this.handleBlur.bind(this, index));\n        inputEle.addEventListener('input', this.handleInputChange.bind(this, index));\n        inputEle.addEventListener('keydown', this.handleKeyAction.bind(this, index));\n        inputEle.addEventListener('click', this.handleSelection.bind(this, index));\n        inputEle.addEventListener('paste', this.handlePaste.bind(this, index));\n    };\n    OtpInput.prototype.unWireEvents = function () {\n        for (var i = 0; i < this.inputs.length; i++) {\n            var currentInputElement = this.inputs[parseInt(i.toString(), 10)];\n            currentInputElement.removeEventListener('focus', this.handleFocus.bind(this, i));\n            currentInputElement.removeEventListener('blur', this.handleBlur.bind(this, i));\n            currentInputElement.removeEventListener('input', this.handleInputChange.bind(this, i));\n            currentInputElement.removeEventListener('keydown', this.handleKeyAction.bind(this, i));\n            currentInputElement.removeEventListener('click', this.handleSelection.bind(this, i));\n            currentInputElement.removeEventListener('paste', this.handlePaste.bind(this, i));\n        }\n    };\n    OtpInput.prototype.updateValueProperty = function () {\n        var value = '';\n        this.inputs.forEach(function (input) {\n            value += input.value;\n        });\n        var prevOnChange = this.isProtectedOnChange;\n        this.isProtectedOnChange = true;\n        this.value = typeof this.value === 'number' ? parseInt(value, 10) : value;\n        this.isProtectedOnChange = prevOnChange;\n        this.hiddenInputEle.value = this.value.toString();\n    };\n    OtpInput.prototype.updateInputValue = function (previousValue) {\n        var stringifiedValue = this.value.toString();\n        for (var i = 0; i < this.inputs.length; i++) {\n            var isValueChanged = previousValue.toString().charAt(i) !== stringifiedValue.charAt(i);\n            if (isValueChanged) {\n                this.inputs[parseInt(i.toString(), 10)].value = stringifiedValue.charAt(i);\n                this.hiddenInputEle.value = stringifiedValue;\n            }\n        }\n        this.focusIn();\n    };\n    OtpInput.prototype.updateCssClass = function (addCss, removeCss) {\n        if (removeCss === void 0) { removeCss = ''; }\n        var _a, _b;\n        var cssClasses;\n        if (removeCss) {\n            cssClasses = removeCss.trim().split(' ');\n            (_a = this.element.classList).remove.apply(_a, cssClasses);\n        }\n        if (addCss) {\n            cssClasses = addCss.trim().split(' ');\n            (_b = this.element.classList).add.apply(_b, cssClasses);\n        }\n    };\n    OtpInput.prototype.updateVariantClass = function () {\n        var variantClass = this.stylingMode.toLocaleLowerCase();\n        variantClass = variantClass === 'outlined' ? 'outline' : variantClass;\n        if (variantClass === 'underlined' || variantClass === 'filled' || variantClass === 'outline') {\n            removeClass([this.element], ['e-underlined', 'e-filled', 'e-outline']);\n            addClass([this.element], \"e-\" + variantClass);\n        }\n    };\n    OtpInput.prototype.updateAriaLabel = function (customAriaLabel) {\n        this.inputs.forEach(function (input, index) {\n            var defaultLabel = \"Enter Otp Character \" + (index + 1);\n            var ariaLabel = customAriaLabel && customAriaLabel.length > 0\n                ? customAriaLabel[parseInt(index.toString(), 10)] || defaultLabel\n                : defaultLabel;\n            input.setAttribute('aria-label', ariaLabel);\n        });\n    };\n    OtpInput.prototype.updateDisabledState = function () {\n        var _this = this;\n        this.inputs.forEach(function (input) {\n            if (_this.disabled) {\n                input.setAttribute('disabled', 'disabled');\n            }\n            else {\n                input.removeAttribute('disabled');\n            }\n        });\n    };\n    OtpInput.prototype.setElementAttributes = function (htmlAttributes, element) {\n        if (!isNullOrUndefined(htmlAttributes)) {\n            for (var key in htmlAttributes) {\n                if (key === 'class') {\n                    var elementClass = htmlAttributes['class'].replace(/\\s+/g, ' ').trim();\n                    if (elementClass) {\n                        addClass([element], elementClass.split(' '));\n                    }\n                }\n                else if (key === 'name' && this.element.id === element.id) {\n                    this.hiddenInputEle.setAttribute(key, htmlAttributes[\"\" + key]);\n                }\n                else {\n                    element.setAttribute(key, htmlAttributes[\"\" + key]);\n                }\n            }\n        }\n    };\n    OtpInput.prototype.handleLengthChange = function (currentValue, previousValue) {\n        var isLengthAdded = (currentValue - previousValue) > 0;\n        if (isLengthAdded) {\n            for (var i = previousValue; i < currentValue; i++) {\n                this.createOtpInput(i);\n            }\n            this.renderSeparator(previousValue, currentValue);\n            this.addPlaceHolder();\n            this.updateAriaLabel(this.ariaLabels);\n        }\n        else {\n            if (currentValue >= 0 && this.inputs.length > 0) {\n                for (var i = currentValue; i < this.inputs.length; i++) {\n                    remove(this.inputs[parseInt(i.toString(), 10)]);\n                }\n                this.inputs.splice(currentValue);\n                if (this.separatorElements.length > 0) {\n                    // separator should be completely removed when length is 0 or 1;\n                    var index = currentValue === 0 ? 0 : currentValue - 1;\n                    for (var i = index; i < this.separatorElements.length; i++) {\n                        remove(this.separatorElements[parseInt(i.toString(), 10)]);\n                    }\n                    this.separatorElements.splice(index);\n                }\n            }\n        }\n    };\n    /**\n     * To get component name.\n     *\n     * @returns {string} - Module Name\n     * @private\n     */\n    OtpInput.prototype.getModuleName = function () {\n        return 'otpinput';\n    };\n    /**\n     * To get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Persist data\n     */\n    OtpInput.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Destroy the Otp input.\n     *\n     * @returns {void}\n     */\n    OtpInput.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.unWireEvents();\n        for (var i = 0; i < this.inputs.length; i++) {\n            remove(this.inputs[parseInt(i.toString(), 10)]);\n        }\n        for (var i = 0; i < this.separatorElements.length; i++) {\n            remove(this.separatorElements[parseInt(i.toString(), 10)]);\n        }\n        remove(this.hiddenInputEle);\n        removeClass([this.element], ['e-underlined', 'e-filled', 'e-outline', 'e-rtl']);\n        if (this.cssClass) {\n            removeClass([this.element], this.cssClass.trim().split(' '));\n        }\n        this.element.removeAttribute('role');\n        this.inputs = [];\n        this.separatorElements = [];\n        this.hiddenInputEle = null;\n    };\n    /**\n     * Sets the focus to the Otp input for interaction.\n     *\n     * @returns {void}\n     */\n    OtpInput.prototype.focusIn = function () {\n        this.isFocusInCalled = true;\n        var focusIndex = 0;\n        this.inputs.forEach(function (input, index) {\n            if (input.value.length > 0) {\n                focusIndex = index;\n            }\n        });\n        this.inputs[parseInt(focusIndex.toString(), 10)].focus();\n        this.isFocusInCalled = false;\n    };\n    /**\n     * Remove the focus from Otp input, if it is in focus state.\n     *\n     * @returns {void}\n     */\n    OtpInput.prototype.focusOut = function () {\n        this.isFocusOutCalled = true;\n        this.inputs.forEach(function (input) {\n            input.blur();\n        });\n        this.isFocusOutCalled = false;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param  {OtpInputModel} newProp - Specifies new properties\n     * @param  {OtpInputModel} oldProp - Specifies old properties\n     * @returns {void}\n     * @private\n     */\n    OtpInput.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'value':\n                    {\n                        this.updateInputValue(oldProp.value);\n                        this.triggerValuechanged();\n                    }\n                    break;\n                case 'placeholder':\n                    this.addPlaceHolder();\n                    break;\n                case 'disabled':\n                    this.updateDisabledState();\n                    break;\n                case 'cssClass':\n                    this.updateCssClass(newProp.cssClass, oldProp.cssClass);\n                    break;\n                case 'separator':\n                    if (oldProp.separator === '') {\n                        this.renderSeparator(1, this.inputs.length);\n                    }\n                    else {\n                        this.updateSeparatorValue();\n                    }\n                    break;\n                case 'type':\n                    this.updateInputType(newProp.type);\n                    break;\n                case 'stylingMode':\n                    this.updateVariantClass();\n                    break;\n                case 'ariaLabels':\n                    this.updateAriaLabel(newProp.ariaLabels);\n                    break;\n                case 'length':\n                    this.handleLengthChange(newProp.length, oldProp.length);\n                    break;\n                case 'enableRtl':\n                    this.element.classList[this.enableRtl ? 'add' : 'remove'](RTL);\n                    break;\n            }\n        }\n    };\n    __decorate([\n        Property(4)\n    ], OtpInput.prototype, \"length\", void 0);\n    __decorate([\n        Property('')\n    ], OtpInput.prototype, \"value\", void 0);\n    __decorate([\n        Property(OtpInputType.Number)\n    ], OtpInput.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], OtpInput.prototype, \"separator\", void 0);\n    __decorate([\n        Property('')\n    ], OtpInput.prototype, \"placeholder\", void 0);\n    __decorate([\n        Property(OtpInputStyle.Outlined)\n    ], OtpInput.prototype, \"stylingMode\", void 0);\n    __decorate([\n        Property(false)\n    ], OtpInput.prototype, \"disabled\", void 0);\n    __decorate([\n        Property('')\n    ], OtpInput.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property({})\n    ], OtpInput.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property([])\n    ], OtpInput.prototype, \"ariaLabels\", void 0);\n    __decorate([\n        Event()\n    ], OtpInput.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], OtpInput.prototype, \"valueChanged\", void 0);\n    __decorate([\n        Event()\n    ], OtpInput.prototype, \"focus\", void 0);\n    __decorate([\n        Event()\n    ], OtpInput.prototype, \"blur\", void 0);\n    __decorate([\n        Event()\n    ], OtpInput.prototype, \"input\", void 0);\n    OtpInput = __decorate([\n        NotifyPropertyChanges\n    ], OtpInput);\n    return OtpInput;\n}(Component));\nexport { OtpInput };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}