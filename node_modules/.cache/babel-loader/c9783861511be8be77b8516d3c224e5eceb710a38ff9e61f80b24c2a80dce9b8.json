{"ast":null,"code":"import _pick from \"lodash/pick\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\nimport React from \"react\";\nimport isEqual from \"react-fast-compare\";\nimport { VictoryTransition } from \"../victory-transition/victory-transition\";\nimport { difference } from \"./collection\";\nimport * as Events from \"./events\";\nimport { isFunction, isNil } from \"./helpers\";\n\n// DISCLAIMER:\n// This file is not currently tested, and it is first on the list of files\n// to refactor in our current refactoring effort. Please do not make changes\n// to this file without manual testing and/or refactoring and adding tests.\n\nconst datumHasXandY = datum => {\n  return !isNil(datum._x) && !isNil(datum._y);\n};\n\n//  used for checking state changes. Expected components can be passed in via options\nconst defaultComponents = [{\n  name: \"parent\",\n  index: \"parent\"\n}, {\n  name: \"data\"\n}, {\n  name: \"labels\"\n}];\n\n/**\n * These methods will be implemented by the Mixin,\n * and are accessible to the Wrapped Component.\n *\n * To make your Wrapped Component type-safe, use \"interface merging\" like so:\n * @example\n *    interface MyComponent extends EventsMixinClass<MyProps> {}\n *    class MyComponent extends React.Component<MyProps> { ... }\n */\n\n/**\n * These fields are calculated by the Mixin\n */\n\n/**\n * These are the common roles that we care about internally.\n */\n\n/**\n * A component can have any \"role\",\n * but there are certain ones that we actually care about internally\n */\n\n/**\n * Static component fields used by Victory for common behavior\n */\n\n/**\n * This represents the class itself, including static fields\n */\n\nexport function addEvents(WrappedComponent, options) {\n  if (options === void 0) {\n    options = {};\n  } // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  // @ts-expect-error \"TS2545: A mixin class must have a constructor with a single rest parameter of type 'any[]'.\"\n  class AddEventsMixin extends WrappedComponent {\n    constructor(props) {\n      super(props);\n      this.cacheValues(this.getCalculatedValues(props));\n    }\n    state = {};\n    getEventState = Events.getEventState.bind(this);\n    getScopedEvents = Events.getScopedEvents.bind(this);\n    getEvents = (p, target, eventKey) => {\n      return Events.getEvents.call(this, p, target, eventKey, this.getScopedEvents);\n    };\n    externalMutations = this.getExternalMutations(this.props);\n    calculatedState = this.getStateChanges(this.props);\n    globalEvents = {};\n    prevGlobalEventKeys = [];\n    boundGlobalEvents = {};\n    shouldComponentUpdate(nextProps) {\n      const externalMutations = this.getExternalMutations(nextProps);\n      // @ts-expect-error \"Property 'animating' does not exist on type EventMixinCommonProps\"\n      const animating = this.props.animating || this.props.animate;\n      const newMutation = !isEqual(externalMutations, this.externalMutations);\n      if (animating || newMutation) {\n        this.cacheValues(this.getCalculatedValues(nextProps));\n        this.externalMutations = externalMutations;\n        this.applyExternalMutations(nextProps, externalMutations);\n        return true;\n      }\n      const calculatedState = this.getStateChanges(nextProps);\n      if (!isEqual(this.calculatedState, calculatedState)) {\n        this.cacheValues(this.getCalculatedValues(nextProps));\n        return true;\n      }\n      if (!isEqual(this.props, nextProps)) {\n        this.cacheValues(this.getCalculatedValues(nextProps));\n        return true;\n      }\n      return false;\n    }\n    componentDidMount() {\n      const globalEventKeys = Object.keys(this.globalEvents);\n      globalEventKeys.forEach(key => this.addGlobalListener(key));\n      this.prevGlobalEventKeys = globalEventKeys;\n    }\n    componentDidUpdate(prevProps) {\n      const calculatedState = this.getStateChanges(prevProps);\n      this.calculatedState = calculatedState;\n      const globalEventKeys = Object.keys(this.globalEvents);\n      const removedGlobalEventKeys = difference(this.prevGlobalEventKeys, globalEventKeys);\n      removedGlobalEventKeys.forEach(key => this.removeGlobalListener(key));\n      const addedGlobalEventKeys = difference(globalEventKeys, this.prevGlobalEventKeys);\n      addedGlobalEventKeys.forEach(key => this.addGlobalListener(key));\n      this.prevGlobalEventKeys = globalEventKeys;\n    }\n    componentWillUnmount() {\n      this.prevGlobalEventKeys.forEach(key => this.removeGlobalListener(key));\n    }\n    addGlobalListener(key) {\n      const boundListener = event => {\n        const listener = this.globalEvents[key];\n        return listener && listener(Events.emulateReactEvent(event));\n      };\n      this.boundGlobalEvents[key] = boundListener;\n      window.addEventListener(Events.getGlobalEventNameFromKey(key), boundListener);\n    }\n    removeGlobalListener(key) {\n      window.removeEventListener(Events.getGlobalEventNameFromKey(key), this.boundGlobalEvents[key]);\n    }\n\n    // compile all state changes from own and parent state. Order doesn't matter, as any state\n    // state change should trigger a re-render\n    getStateChanges(props) {\n      if (!this.hasEvents) {\n        return {};\n      }\n      const getState = (key, type) => {\n        const result = _defaults({}, this.getEventState(key, type), this.getSharedEventState(key, type));\n        return _isEmpty(result) ? undefined : result;\n      };\n      const components = options.components || defaultComponents;\n      const stateChanges = components.map(component => {\n        if (!props.standalone && component.name === \"parent\") {\n          // don't check for changes on parent props for non-standalone components\n          return undefined;\n        }\n        return component.index !== undefined ? getState(component.index, component.name) : this.dataKeys.map(key => getState(key, component.name)).filter(Boolean);\n      }).filter(Boolean);\n      return stateChanges;\n    }\n    applyExternalMutations(props, externalMutations) {\n      if (!_isEmpty(externalMutations)) {\n        const callbacks = props.externalEventMutations.reduce((memo, mutation) => isFunction(mutation.callback) ? memo.concat(mutation.callback) : memo, []);\n        const compiledCallbacks = callbacks.length ? () => {\n          callbacks.forEach(c => c());\n        } : undefined;\n        this.setState(externalMutations, compiledCallbacks);\n      }\n    }\n    getCalculatedValues(props) {\n      const {\n        sharedEvents\n      } = props;\n      const components = WrappedComponent.expectedComponents;\n      const componentEvents = Events.getComponentEvents(props, components);\n      const getSharedEventState = sharedEvents && isFunction(sharedEvents.getEventState) ? sharedEvents.getEventState : () => undefined;\n      const baseProps = this.getBaseProps(props, getSharedEventState);\n      const dataKeys = Object.keys(baseProps).filter(key => key !== \"parent\");\n      const hasEvents = props.events || props.sharedEvents || componentEvents;\n      const events = this.getAllEvents(props);\n      return {\n        componentEvents,\n        getSharedEventState,\n        baseProps,\n        dataKeys,\n        hasEvents,\n        events\n      };\n    }\n    getExternalMutations(props) {\n      const {\n        sharedEvents,\n        externalEventMutations\n      } = props;\n      return _isEmpty(externalEventMutations) || sharedEvents ? undefined : Events.getExternalMutations(externalEventMutations, this.baseProps, this.state);\n    }\n    cacheValues(obj) {\n      Object.keys(obj).forEach(key => {\n        this[key] = obj[key];\n      });\n    }\n    getBaseProps(props, getSharedEventState) {\n      const getSharedEventStateFunction = getSharedEventState || this.getSharedEventState.bind(this);\n      const sharedParentState = getSharedEventStateFunction(\"parent\", \"parent\");\n      const parentState = this.getEventState(\"parent\", \"parent\");\n      const baseParentProps = _defaults({}, parentState, sharedParentState);\n      const parentPropsList = baseParentProps.parentControlledProps;\n      const parentProps = parentPropsList ? _pick(baseParentProps, parentPropsList) : {};\n      const modifiedProps = _defaults({}, parentProps, props);\n      return typeof WrappedComponent.getBaseProps === \"function\" ? WrappedComponent.getBaseProps(modifiedProps) : {};\n    }\n    getAllEvents(props) {\n      if (Array.isArray(this.componentEvents)) {\n        return Array.isArray(props.events) ? this.componentEvents.concat(...props.events) : this.componentEvents;\n      }\n      return props.events;\n    }\n    getComponentProps(component, type, index) {\n      const name = this.props.name || WrappedComponent.role;\n      const key = this.dataKeys && this.dataKeys[index] || index;\n      const id = `${name}-${type}-${key}`;\n      const baseProps = this.baseProps[key] && this.baseProps[key][type] || this.baseProps[key];\n      if (!baseProps && !this.hasEvents) {\n        return undefined;\n      }\n      const currentProps = component && typeof component === \"object\" && \"props\" in component ? component.props : undefined;\n      if (this.hasEvents) {\n        const baseEvents = this.getEvents(this.props, type, key);\n        const componentProps = _defaults({\n          index,\n          key: id\n        }, this.getEventState(key, type), this.getSharedEventState(key, type), currentProps, baseProps, {\n          id\n        });\n        const events = _defaults({}, Events.getPartialEvents(baseEvents, key, componentProps), componentProps.events);\n        return Object.assign({}, componentProps, {\n          events\n        });\n      }\n      return _defaults({\n        index,\n        key: id\n      }, currentProps, baseProps, {\n        id\n      });\n    }\n    renderContainer(component, children) {\n      const isContainer = component.type && component.type.role === \"container\";\n      const parentProps = isContainer ? this.getComponentProps(component, \"parent\", \"parent\") : {};\n      if (parentProps.events) {\n        this.globalEvents = Events.getGlobalEvents(parentProps.events);\n        parentProps.events = Events.omitGlobalEvents(parentProps.events);\n      }\n      return /*#__PURE__*/React.cloneElement(component, parentProps, children);\n    }\n    animateComponent(props, defaultAnimationWhitelist) {\n      const animationWhitelist = typeof props.animate === \"object\" && props.animate?.animationWhitelist || defaultAnimationWhitelist;\n      const Comp = this.constructor;\n      return /*#__PURE__*/React.createElement(VictoryTransition, {\n        animate: props.animate,\n        animationWhitelist: animationWhitelist\n      }, /*#__PURE__*/React.createElement(Comp, props));\n    }\n\n    // Used by `VictoryLine` and `VictoryArea`\n    renderContinuousData(props) {\n      const {\n        dataComponent,\n        labelComponent,\n        groupComponent\n      } = props;\n      const dataKeys = this.dataKeys.filter(value => value !== \"all\");\n      const labelComponents = dataKeys.reduce((memo, key) => {\n        let newMemo = memo;\n        const labelProps = this.getComponentProps(labelComponent, \"labels\", key);\n        if (labelProps && labelProps.text !== undefined && labelProps.text !== null) {\n          newMemo = newMemo.concat( /*#__PURE__*/React.cloneElement(labelComponent, labelProps));\n        }\n        return newMemo;\n      }, []);\n      const dataProps = this.getComponentProps(dataComponent, \"data\", \"all\");\n      const children = [/*#__PURE__*/React.cloneElement(dataComponent, dataProps), ...labelComponents];\n      return this.renderContainer(groupComponent, children);\n    }\n    renderData(props, shouldRenderDatum) {\n      if (shouldRenderDatum === void 0) {\n        shouldRenderDatum = datumHasXandY;\n      }\n      const {\n        dataComponent,\n        labelComponent,\n        groupComponent\n      } = props;\n      const dataComponents = this.dataKeys.reduce((validDataComponents, _dataKey, index) => {\n        const dataProps = this.getComponentProps(dataComponent, \"data\", index);\n        if (shouldRenderDatum(dataProps.datum)) {\n          validDataComponents.push( /*#__PURE__*/React.cloneElement(dataComponent, dataProps));\n        }\n        return validDataComponents;\n      }, []);\n      const labelComponents = this.dataKeys.map((_dataKey, index) => {\n        const labelProps = this.getComponentProps(labelComponent, \"labels\", index);\n        if (labelProps.text !== undefined && labelProps.text !== null) {\n          return /*#__PURE__*/React.cloneElement(labelComponent, labelProps);\n        }\n        return undefined;\n      }).filter(Boolean);\n      const children = [...dataComponents, ...labelComponents];\n      return this.renderContainer(groupComponent, children);\n    }\n  }\n  return AddEventsMixin;\n}","map":{"version":3,"names":["_pick","_isEmpty","_defaults","React","isEqual","VictoryTransition","difference","Events","isFunction","isNil","datumHasXandY","datum","_x","_y","defaultComponents","name","index","addEvents","WrappedComponent","options","AddEventsMixin","constructor","props","cacheValues","getCalculatedValues","state","getEventState","bind","getScopedEvents","getEvents","p","target","eventKey","call","externalMutations","getExternalMutations","calculatedState","getStateChanges","globalEvents","prevGlobalEventKeys","boundGlobalEvents","shouldComponentUpdate","nextProps","animating","animate","newMutation","applyExternalMutations","componentDidMount","globalEventKeys","Object","keys","forEach","key","addGlobalListener","componentDidUpdate","prevProps","removedGlobalEventKeys","removeGlobalListener","addedGlobalEventKeys","componentWillUnmount","boundListener","event","listener","emulateReactEvent","window","addEventListener","getGlobalEventNameFromKey","removeEventListener","hasEvents","getState","type","result","getSharedEventState","undefined","components","stateChanges","map","component","standalone","dataKeys","filter","Boolean","callbacks","externalEventMutations","reduce","memo","mutation","callback","concat","compiledCallbacks","length","c","setState","sharedEvents","expectedComponents","componentEvents","getComponentEvents","baseProps","getBaseProps","events","getAllEvents","obj","getSharedEventStateFunction","sharedParentState","parentState","baseParentProps","parentPropsList","parentControlledProps","parentProps","modifiedProps","Array","isArray","getComponentProps","role","id","currentProps","baseEvents","componentProps","getPartialEvents","assign","renderContainer","children","isContainer","getGlobalEvents","omitGlobalEvents","cloneElement","animateComponent","defaultAnimationWhitelist","animationWhitelist","Comp","createElement","renderContinuousData","dataComponent","labelComponent","groupComponent","value","labelComponents","newMemo","labelProps","text","dataProps","renderData","shouldRenderDatum","dataComponents","validDataComponents","_dataKey","push"],"sources":["/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/node_modules/victory-core/es/victory-util/add-events.js"],"sourcesContent":["import _pick from \"lodash/pick\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\nimport React from \"react\";\nimport isEqual from \"react-fast-compare\";\nimport { VictoryTransition } from \"../victory-transition/victory-transition\";\nimport { difference } from \"./collection\";\nimport * as Events from \"./events\";\nimport { isFunction, isNil } from \"./helpers\";\n\n// DISCLAIMER:\n// This file is not currently tested, and it is first on the list of files\n// to refactor in our current refactoring effort. Please do not make changes\n// to this file without manual testing and/or refactoring and adding tests.\n\nconst datumHasXandY = datum => {\n  return !isNil(datum._x) && !isNil(datum._y);\n};\n\n//  used for checking state changes. Expected components can be passed in via options\nconst defaultComponents = [{\n  name: \"parent\",\n  index: \"parent\"\n}, {\n  name: \"data\"\n}, {\n  name: \"labels\"\n}];\n\n/**\n * These methods will be implemented by the Mixin,\n * and are accessible to the Wrapped Component.\n *\n * To make your Wrapped Component type-safe, use \"interface merging\" like so:\n * @example\n *    interface MyComponent extends EventsMixinClass<MyProps> {}\n *    class MyComponent extends React.Component<MyProps> { ... }\n */\n\n/**\n * These fields are calculated by the Mixin\n */\n\n/**\n * These are the common roles that we care about internally.\n */\n\n/**\n * A component can have any \"role\",\n * but there are certain ones that we actually care about internally\n */\n\n/**\n * Static component fields used by Victory for common behavior\n */\n\n/**\n * This represents the class itself, including static fields\n */\n\nexport function addEvents(WrappedComponent, options) {\n  if (options === void 0) {\n    options = {};\n  } // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  // @ts-expect-error \"TS2545: A mixin class must have a constructor with a single rest parameter of type 'any[]'.\"\n  class AddEventsMixin extends WrappedComponent {\n    constructor(props) {\n      super(props);\n      this.cacheValues(this.getCalculatedValues(props));\n    }\n    state = {};\n    getEventState = Events.getEventState.bind(this);\n    getScopedEvents = Events.getScopedEvents.bind(this);\n    getEvents = (p, target, eventKey) => {\n      return Events.getEvents.call(this, p, target, eventKey, this.getScopedEvents);\n    };\n    externalMutations = this.getExternalMutations(this.props);\n    calculatedState = this.getStateChanges(this.props);\n    globalEvents = {};\n    prevGlobalEventKeys = [];\n    boundGlobalEvents = {};\n    shouldComponentUpdate(nextProps) {\n      const externalMutations = this.getExternalMutations(nextProps);\n      // @ts-expect-error \"Property 'animating' does not exist on type EventMixinCommonProps\"\n      const animating = this.props.animating || this.props.animate;\n      const newMutation = !isEqual(externalMutations, this.externalMutations);\n      if (animating || newMutation) {\n        this.cacheValues(this.getCalculatedValues(nextProps));\n        this.externalMutations = externalMutations;\n        this.applyExternalMutations(nextProps, externalMutations);\n        return true;\n      }\n      const calculatedState = this.getStateChanges(nextProps);\n      if (!isEqual(this.calculatedState, calculatedState)) {\n        this.cacheValues(this.getCalculatedValues(nextProps));\n        return true;\n      }\n      if (!isEqual(this.props, nextProps)) {\n        this.cacheValues(this.getCalculatedValues(nextProps));\n        return true;\n      }\n      return false;\n    }\n    componentDidMount() {\n      const globalEventKeys = Object.keys(this.globalEvents);\n      globalEventKeys.forEach(key => this.addGlobalListener(key));\n      this.prevGlobalEventKeys = globalEventKeys;\n    }\n    componentDidUpdate(prevProps) {\n      const calculatedState = this.getStateChanges(prevProps);\n      this.calculatedState = calculatedState;\n      const globalEventKeys = Object.keys(this.globalEvents);\n      const removedGlobalEventKeys = difference(this.prevGlobalEventKeys, globalEventKeys);\n      removedGlobalEventKeys.forEach(key => this.removeGlobalListener(key));\n      const addedGlobalEventKeys = difference(globalEventKeys, this.prevGlobalEventKeys);\n      addedGlobalEventKeys.forEach(key => this.addGlobalListener(key));\n      this.prevGlobalEventKeys = globalEventKeys;\n    }\n    componentWillUnmount() {\n      this.prevGlobalEventKeys.forEach(key => this.removeGlobalListener(key));\n    }\n    addGlobalListener(key) {\n      const boundListener = event => {\n        const listener = this.globalEvents[key];\n        return listener && listener(Events.emulateReactEvent(event));\n      };\n      this.boundGlobalEvents[key] = boundListener;\n      window.addEventListener(Events.getGlobalEventNameFromKey(key), boundListener);\n    }\n    removeGlobalListener(key) {\n      window.removeEventListener(Events.getGlobalEventNameFromKey(key), this.boundGlobalEvents[key]);\n    }\n\n    // compile all state changes from own and parent state. Order doesn't matter, as any state\n    // state change should trigger a re-render\n    getStateChanges(props) {\n      if (!this.hasEvents) {\n        return {};\n      }\n      const getState = (key, type) => {\n        const result = _defaults({}, this.getEventState(key, type), this.getSharedEventState(key, type));\n        return _isEmpty(result) ? undefined : result;\n      };\n      const components = options.components || defaultComponents;\n      const stateChanges = components.map(component => {\n        if (!props.standalone && component.name === \"parent\") {\n          // don't check for changes on parent props for non-standalone components\n          return undefined;\n        }\n        return component.index !== undefined ? getState(component.index, component.name) : this.dataKeys.map(key => getState(key, component.name)).filter(Boolean);\n      }).filter(Boolean);\n      return stateChanges;\n    }\n    applyExternalMutations(props, externalMutations) {\n      if (!_isEmpty(externalMutations)) {\n        const callbacks = props.externalEventMutations.reduce((memo, mutation) => isFunction(mutation.callback) ? memo.concat(mutation.callback) : memo, []);\n        const compiledCallbacks = callbacks.length ? () => {\n          callbacks.forEach(c => c());\n        } : undefined;\n        this.setState(externalMutations, compiledCallbacks);\n      }\n    }\n    getCalculatedValues(props) {\n      const {\n        sharedEvents\n      } = props;\n      const components = WrappedComponent.expectedComponents;\n      const componentEvents = Events.getComponentEvents(props, components);\n      const getSharedEventState = sharedEvents && isFunction(sharedEvents.getEventState) ? sharedEvents.getEventState : () => undefined;\n      const baseProps = this.getBaseProps(props, getSharedEventState);\n      const dataKeys = Object.keys(baseProps).filter(key => key !== \"parent\");\n      const hasEvents = props.events || props.sharedEvents || componentEvents;\n      const events = this.getAllEvents(props);\n      return {\n        componentEvents,\n        getSharedEventState,\n        baseProps,\n        dataKeys,\n        hasEvents,\n        events\n      };\n    }\n    getExternalMutations(props) {\n      const {\n        sharedEvents,\n        externalEventMutations\n      } = props;\n      return _isEmpty(externalEventMutations) || sharedEvents ? undefined : Events.getExternalMutations(externalEventMutations, this.baseProps, this.state);\n    }\n    cacheValues(obj) {\n      Object.keys(obj).forEach(key => {\n        this[key] = obj[key];\n      });\n    }\n    getBaseProps(props, getSharedEventState) {\n      const getSharedEventStateFunction = getSharedEventState || this.getSharedEventState.bind(this);\n      const sharedParentState = getSharedEventStateFunction(\"parent\", \"parent\");\n      const parentState = this.getEventState(\"parent\", \"parent\");\n      const baseParentProps = _defaults({}, parentState, sharedParentState);\n      const parentPropsList = baseParentProps.parentControlledProps;\n      const parentProps = parentPropsList ? _pick(baseParentProps, parentPropsList) : {};\n      const modifiedProps = _defaults({}, parentProps, props);\n      return typeof WrappedComponent.getBaseProps === \"function\" ? WrappedComponent.getBaseProps(modifiedProps) : {};\n    }\n    getAllEvents(props) {\n      if (Array.isArray(this.componentEvents)) {\n        return Array.isArray(props.events) ? this.componentEvents.concat(...props.events) : this.componentEvents;\n      }\n      return props.events;\n    }\n    getComponentProps(component, type, index) {\n      const name = this.props.name || WrappedComponent.role;\n      const key = this.dataKeys && this.dataKeys[index] || index;\n      const id = `${name}-${type}-${key}`;\n      const baseProps = this.baseProps[key] && this.baseProps[key][type] || this.baseProps[key];\n      if (!baseProps && !this.hasEvents) {\n        return undefined;\n      }\n      const currentProps = component && typeof component === \"object\" && \"props\" in component ? component.props : undefined;\n      if (this.hasEvents) {\n        const baseEvents = this.getEvents(this.props, type, key);\n        const componentProps = _defaults({\n          index,\n          key: id\n        }, this.getEventState(key, type), this.getSharedEventState(key, type), currentProps, baseProps, {\n          id\n        });\n        const events = _defaults({}, Events.getPartialEvents(baseEvents, key, componentProps), componentProps.events);\n        return Object.assign({}, componentProps, {\n          events\n        });\n      }\n      return _defaults({\n        index,\n        key: id\n      }, currentProps, baseProps, {\n        id\n      });\n    }\n    renderContainer(component, children) {\n      const isContainer = component.type && component.type.role === \"container\";\n      const parentProps = isContainer ? this.getComponentProps(component, \"parent\", \"parent\") : {};\n      if (parentProps.events) {\n        this.globalEvents = Events.getGlobalEvents(parentProps.events);\n        parentProps.events = Events.omitGlobalEvents(parentProps.events);\n      }\n      return /*#__PURE__*/React.cloneElement(component, parentProps, children);\n    }\n    animateComponent(props, defaultAnimationWhitelist) {\n      const animationWhitelist = typeof props.animate === \"object\" && props.animate?.animationWhitelist || defaultAnimationWhitelist;\n      const Comp = this.constructor;\n      return /*#__PURE__*/React.createElement(VictoryTransition, {\n        animate: props.animate,\n        animationWhitelist: animationWhitelist\n      }, /*#__PURE__*/React.createElement(Comp, props));\n    }\n\n    // Used by `VictoryLine` and `VictoryArea`\n    renderContinuousData(props) {\n      const {\n        dataComponent,\n        labelComponent,\n        groupComponent\n      } = props;\n      const dataKeys = this.dataKeys.filter(value => value !== \"all\");\n      const labelComponents = dataKeys.reduce((memo, key) => {\n        let newMemo = memo;\n        const labelProps = this.getComponentProps(labelComponent, \"labels\", key);\n        if (labelProps && labelProps.text !== undefined && labelProps.text !== null) {\n          newMemo = newMemo.concat( /*#__PURE__*/React.cloneElement(labelComponent, labelProps));\n        }\n        return newMemo;\n      }, []);\n      const dataProps = this.getComponentProps(dataComponent, \"data\", \"all\");\n      const children = [/*#__PURE__*/React.cloneElement(dataComponent, dataProps), ...labelComponents];\n      return this.renderContainer(groupComponent, children);\n    }\n    renderData(props, shouldRenderDatum) {\n      if (shouldRenderDatum === void 0) {\n        shouldRenderDatum = datumHasXandY;\n      }\n      const {\n        dataComponent,\n        labelComponent,\n        groupComponent\n      } = props;\n      const dataComponents = this.dataKeys.reduce((validDataComponents, _dataKey, index) => {\n        const dataProps = this.getComponentProps(dataComponent, \"data\", index);\n        if (shouldRenderDatum(dataProps.datum)) {\n          validDataComponents.push( /*#__PURE__*/React.cloneElement(dataComponent, dataProps));\n        }\n        return validDataComponents;\n      }, []);\n      const labelComponents = this.dataKeys.map((_dataKey, index) => {\n        const labelProps = this.getComponentProps(labelComponent, \"labels\", index);\n        if (labelProps.text !== undefined && labelProps.text !== null) {\n          return /*#__PURE__*/React.cloneElement(labelComponent, labelProps);\n        }\n        return undefined;\n      }).filter(Boolean);\n      const children = [...dataComponents, ...labelComponents];\n      return this.renderContainer(groupComponent, children);\n    }\n  }\n  return AddEventsMixin;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}