{"ast":null,"code":"export const IMMUTABLE_ITERABLE = \"@@__IMMUTABLE_ITERABLE__@@\";\nexport const IMMUTABLE_RECORD = \"@@__IMMUTABLE_RECORD__@@\";\nexport const IMMUTABLE_LIST = \"@@__IMMUTABLE_LIST__@@\";\nexport const IMMUTABLE_MAP = \"@@__IMMUTABLE_MAP__@@\";\nexport function isIterable(x) {\n  return !!(x && x[IMMUTABLE_ITERABLE]);\n}\nexport function isRecord(x) {\n  return !!(x && x[IMMUTABLE_RECORD]);\n}\nexport function isImmutable(x) {\n  return isIterable(x) || isRecord(x);\n}\nexport function isList(x) {\n  return !!(x && x[IMMUTABLE_LIST]);\n}\nexport function isMap(x) {\n  return !!(x && x[IMMUTABLE_MAP]);\n}\nexport function shallowToJS(x, whitelist) {\n  return isIterable(x) ? x.reduce((result, curr, key) => {\n    let newCurr = curr;\n    if (whitelist && whitelist[key]) {\n      newCurr = shallowToJS(curr);\n    }\n    result[key] = newCurr;\n    return result;\n  }, isList(x) ? [] : {}) : x;\n}","map":{"version":3,"names":["IMMUTABLE_ITERABLE","IMMUTABLE_RECORD","IMMUTABLE_LIST","IMMUTABLE_MAP","isIterable","x","isRecord","isImmutable","isList","isMap","shallowToJS","whitelist","reduce","result","curr","key","newCurr"],"sources":["/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/node_modules/victory-core/es/victory-util/immutable.js"],"sourcesContent":["export const IMMUTABLE_ITERABLE = \"@@__IMMUTABLE_ITERABLE__@@\";\nexport const IMMUTABLE_RECORD = \"@@__IMMUTABLE_RECORD__@@\";\nexport const IMMUTABLE_LIST = \"@@__IMMUTABLE_LIST__@@\";\nexport const IMMUTABLE_MAP = \"@@__IMMUTABLE_MAP__@@\";\nexport function isIterable(x) {\n  return !!(x && x[IMMUTABLE_ITERABLE]);\n}\nexport function isRecord(x) {\n  return !!(x && x[IMMUTABLE_RECORD]);\n}\nexport function isImmutable(x) {\n  return isIterable(x) || isRecord(x);\n}\nexport function isList(x) {\n  return !!(x && x[IMMUTABLE_LIST]);\n}\nexport function isMap(x) {\n  return !!(x && x[IMMUTABLE_MAP]);\n}\nexport function shallowToJS(x, whitelist) {\n  return isIterable(x) ? x.reduce((result, curr, key) => {\n    let newCurr = curr;\n    if (whitelist && whitelist[key]) {\n      newCurr = shallowToJS(curr);\n    }\n    result[key] = newCurr;\n    return result;\n  }, isList(x) ? [] : {}) : x;\n}"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,4BAA4B;AAC9D,OAAO,MAAMC,gBAAgB,GAAG,0BAA0B;AAC1D,OAAO,MAAMC,cAAc,GAAG,wBAAwB;AACtD,OAAO,MAAMC,aAAa,GAAG,uBAAuB;AACpD,OAAO,SAASC,UAAUA,CAACC,CAAC,EAAE;EAC5B,OAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACL,kBAAkB,CAAC,CAAC;AACvC;AACA,OAAO,SAASM,QAAQA,CAACD,CAAC,EAAE;EAC1B,OAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACJ,gBAAgB,CAAC,CAAC;AACrC;AACA,OAAO,SAASM,WAAWA,CAACF,CAAC,EAAE;EAC7B,OAAOD,UAAU,CAACC,CAAC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAAC;AACrC;AACA,OAAO,SAASG,MAAMA,CAACH,CAAC,EAAE;EACxB,OAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACH,cAAc,CAAC,CAAC;AACnC;AACA,OAAO,SAASO,KAAKA,CAACJ,CAAC,EAAE;EACvB,OAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACF,aAAa,CAAC,CAAC;AAClC;AACA,OAAO,SAASO,WAAWA,CAACL,CAAC,EAAEM,SAAS,EAAE;EACxC,OAAOP,UAAU,CAACC,CAAC,CAAC,GAAGA,CAAC,CAACO,MAAM,CAAC,CAACC,MAAM,EAAEC,IAAI,EAAEC,GAAG,KAAK;IACrD,IAAIC,OAAO,GAAGF,IAAI;IAClB,IAAIH,SAAS,IAAIA,SAAS,CAACI,GAAG,CAAC,EAAE;MAC/BC,OAAO,GAAGN,WAAW,CAACI,IAAI,CAAC;IAC7B;IACAD,MAAM,CAACE,GAAG,CAAC,GAAGC,OAAO;IACrB,OAAOH,MAAM;EACf,CAAC,EAAEL,MAAM,CAACH,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAGA,CAAC;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}