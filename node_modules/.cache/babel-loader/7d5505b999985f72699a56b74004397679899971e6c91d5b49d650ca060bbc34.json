{"ast":null,"code":"import _fromPairs from \"lodash/fromPairs\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\nimport React from \"react\";\nimport { Collection, Events, Helpers, TimerContext } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nimport stringify from \"json-stringify-safe\";\n\n// DISCLAIMER:\n// This file is not currently tested, and it is first on the list of files\n// to refactor in our current refactoring effort. Please do not make changes\n// to this file without manual testing and/or refactoring and adding tests.\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\n\nexport class VictorySharedEvents extends React.Component {\n  static displayName = \"VictorySharedEvents\";\n  static role = \"shared-event-wrapper\";\n  static contextType = TimerContext;\n  static defaultProps = {\n    groupComponent: /*#__PURE__*/React.createElement(\"g\", null)\n  };\n  constructor(props) {\n    super(props);\n    this.getScopedEvents = Events.getScopedEvents.bind(this);\n    this.getEventState = Events.getEventState.bind(this);\n    this.state = this.state || {};\n    this.sharedEventsCache = {};\n    this.globalEvents = {};\n    this.prevGlobalEventKeys = [];\n    this.boundGlobalEvents = {};\n    this.baseProps = this.getBaseProps(props);\n  }\n  shouldComponentUpdate(nextProps) {\n    if (!isEqual(this.props, nextProps)) {\n      this.baseProps = this.getBaseProps(nextProps);\n      const externalMutations = this.getExternalMutations(nextProps, this.baseProps);\n      this.applyExternalMutations(nextProps, externalMutations);\n    }\n    return true;\n  }\n  componentDidMount() {\n    const globalEventKeys = Object.keys(this.globalEvents);\n    globalEventKeys.forEach(key => this.addGlobalListener(key));\n    this.prevGlobalEventKeys = globalEventKeys;\n  }\n  componentDidUpdate() {\n    const globalEventKeys = Object.keys(this.globalEvents);\n    const removedGlobalEventKeys = Collection.difference(this.prevGlobalEventKeys, globalEventKeys);\n    removedGlobalEventKeys.forEach(key => this.removeGlobalListener(key));\n    const addedGlobalEventKeys = Collection.difference(globalEventKeys, this.prevGlobalEventKeys);\n    addedGlobalEventKeys.forEach(key => this.addGlobalListener(key));\n    this.prevGlobalEventKeys = globalEventKeys;\n  }\n  componentWillUnmount() {\n    this.prevGlobalEventKeys.forEach(key => this.removeGlobalListener(key));\n  }\n  addGlobalListener(key) {\n    const boundListener = event => {\n      const listener = this.globalEvents[key];\n      return listener && listener(Events.emulateReactEvent(event));\n    };\n    this.boundGlobalEvents[key] = boundListener;\n    window.addEventListener(Events.getGlobalEventNameFromKey(key), boundListener);\n  }\n  removeGlobalListener(key) {\n    window.removeEventListener(Events.getGlobalEventNameFromKey(key), this.boundGlobalEvents[key]);\n  }\n  getAllEvents(props) {\n    const components = [\"container\", \"groupComponent\"];\n    const componentEvents = Events.getComponentEvents(props, components);\n    if (Array.isArray(componentEvents)) {\n      return Array.isArray(props.events) ? componentEvents.concat(...props.events) : componentEvents;\n    }\n    return props.events;\n  }\n  applyExternalMutations(props, externalMutations) {\n    if (!_isEmpty(externalMutations)) {\n      const callbacks = props.externalEventMutations.reduce((memo, mutation) => Helpers.isFunction(mutation.callback) ? memo.concat(mutation.callback) : memo, []);\n      const compiledCallbacks = callbacks.length ? () => {\n        callbacks.forEach(c => c());\n      } : undefined;\n      this.setState(externalMutations, compiledCallbacks);\n    }\n  }\n  getExternalMutations(props, baseProps) {\n    return !_isEmpty(props.externalEventMutations) ? Events.getExternalMutationsWithChildren(props.externalEventMutations, baseProps, this.state, Object.keys(baseProps)) : undefined;\n  }\n  cacheSharedEvents(name, sharedEvents, cacheValues) {\n    this.sharedEventsCache[name] = [sharedEvents, cacheValues];\n  }\n  getCachedSharedEvents(name, cacheValues) {\n    const [sharedEvents, prevCacheValues] = this.sharedEventsCache[name] || [];\n    if (sharedEvents && isEqual(cacheValues, prevCacheValues)) {\n      return sharedEvents;\n    }\n    return undefined;\n  }\n  getBaseProps(props) {\n    const {\n      container\n    } = props;\n    const children = React.Children.toArray(this.props.children);\n    const childBaseProps = this.getBasePropsFromChildren(children);\n    const parentBaseProps = container ? container.props : {};\n    return Object.assign({}, childBaseProps, {\n      parent: parentBaseProps\n    });\n  }\n  getBasePropsFromChildren(childComponents) {\n    const iteratee = (child, childName) => {\n      if (child.type && Helpers.isFunction(child.type.getBaseProps)) {\n        const baseProps = child.props && child.type.getBaseProps(child.props);\n        return baseProps ? [[childName, baseProps]] : null;\n      }\n      return null;\n    };\n    const baseProps = Helpers.reduceChildren(childComponents, iteratee);\n    return _fromPairs(baseProps);\n  }\n  getNewChildren(props, baseProps) {\n    const {\n      events,\n      eventKey\n    } = props;\n    const alterChildren = (children, childNames) => {\n      return children.reduce((memo, child, index) => {\n        if (child.props.children) {\n          const newChildren = React.Children.toArray(child.props.children);\n          const names = childNames.slice(index, index + newChildren.length);\n          const results = /*#__PURE__*/React.cloneElement(child, child.props, alterChildren(newChildren, names));\n          return memo.concat(results);\n        } else if (childNames[index] !== \"parent\" && child.type && Helpers.isFunction(child.type.getBaseProps)) {\n          const name = child.props.name || childNames[index];\n          const childEvents = Array.isArray(events) && events.filter(event => {\n            if (event.target === \"parent\") {\n              return false;\n            }\n            return Array.isArray(event.childName) ? event.childName.indexOf(name) > -1 : event.childName === name || event.childName === \"all\";\n          });\n          const sharedEventsCacheValues = [name, baseProps, childEvents, stringify(this.state[name])];\n          const sharedEvents = this.getCachedSharedEvents(name, sharedEventsCacheValues) || {\n            events: childEvents,\n            // partially apply child name and baseProps,\n            getEvents: (evts, target) => this.getScopedEvents(evts, target, name, baseProps),\n            // partially apply child name\n            getEventState: (key, target) => this.getEventState(key, target, name)\n          };\n          this.cacheSharedEvents(name, sharedEvents, sharedEventsCacheValues);\n          return memo.concat( /*#__PURE__*/React.cloneElement(child, Object.assign({\n            key: `events-${name}`,\n            sharedEvents,\n            eventKey,\n            name\n          }, child.props)));\n        }\n        return memo.concat(child);\n      }, []);\n    };\n    const childNames = Object.keys(baseProps);\n    const childComponents = React.Children.toArray(props.children);\n    return alterChildren(childComponents, childNames);\n  }\n  getContainer(props, baseProps, events) {\n    const children = this.getNewChildren(props, baseProps);\n    const parents = Array.isArray(events) ? events.filter(event => event.target === \"parent\") : [];\n    const sharedEvents = parents.length > 0 ? {\n      events: parents,\n      // partially apply childName (null) and baseProps,\n      getEvents: (evts, target) => this.getScopedEvents(evts, target, null, baseProps),\n      getEventState: this.getEventState\n    } : null;\n    const container = props.container || props.groupComponent;\n    const role = container.type && container.type.role;\n    const containerProps = container.props || {};\n    const boundGetEvents = Events.getEvents.bind(this);\n    const parentEvents = sharedEvents && boundGetEvents({\n      sharedEvents\n    }, \"parent\");\n    const parentProps = _defaults({}, this.getEventState(\"parent\", \"parent\"), containerProps, baseProps.parent, {\n      children\n    });\n    const containerEvents = _defaults({}, Events.getPartialEvents(parentEvents, \"parent\", parentProps), containerProps.events);\n    this.globalEvents = Events.getGlobalEvents(containerEvents);\n    const localEvents = Events.omitGlobalEvents(containerEvents);\n    return role === \"container\" ? /*#__PURE__*/React.cloneElement(container, Object.assign({}, parentProps, {\n      events: localEvents\n    })) : /*#__PURE__*/React.cloneElement(container, localEvents, children);\n  }\n  render() {\n    const events = this.getAllEvents(this.props);\n    if (events) {\n      return this.getContainer(this.props, this.baseProps, events);\n    }\n    return /*#__PURE__*/React.cloneElement(this.props.container, {\n      children: this.props.children\n    });\n  }\n}","map":{"version":3,"names":["_fromPairs","_isEmpty","_defaults","React","Collection","Events","Helpers","TimerContext","isEqual","stringify","VictorySharedEvents","Component","displayName","role","contextType","defaultProps","groupComponent","createElement","constructor","props","getScopedEvents","bind","getEventState","state","sharedEventsCache","globalEvents","prevGlobalEventKeys","boundGlobalEvents","baseProps","getBaseProps","shouldComponentUpdate","nextProps","externalMutations","getExternalMutations","applyExternalMutations","componentDidMount","globalEventKeys","Object","keys","forEach","key","addGlobalListener","componentDidUpdate","removedGlobalEventKeys","difference","removeGlobalListener","addedGlobalEventKeys","componentWillUnmount","boundListener","event","listener","emulateReactEvent","window","addEventListener","getGlobalEventNameFromKey","removeEventListener","getAllEvents","components","componentEvents","getComponentEvents","Array","isArray","events","concat","callbacks","externalEventMutations","reduce","memo","mutation","isFunction","callback","compiledCallbacks","length","c","undefined","setState","getExternalMutationsWithChildren","cacheSharedEvents","name","sharedEvents","cacheValues","getCachedSharedEvents","prevCacheValues","container","children","Children","toArray","childBaseProps","getBasePropsFromChildren","parentBaseProps","assign","parent","childComponents","iteratee","child","childName","type","reduceChildren","getNewChildren","eventKey","alterChildren","childNames","index","newChildren","names","slice","results","cloneElement","childEvents","filter","target","indexOf","sharedEventsCacheValues","getEvents","evts","getContainer","parents","containerProps","boundGetEvents","parentEvents","parentProps","containerEvents","getPartialEvents","getGlobalEvents","localEvents","omitGlobalEvents","render"],"sources":["/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/node_modules/victory-shared-events/es/victory-shared-events.js"],"sourcesContent":["import _fromPairs from \"lodash/fromPairs\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\nimport React from \"react\";\nimport { Collection, Events, Helpers, TimerContext } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nimport stringify from \"json-stringify-safe\";\n\n// DISCLAIMER:\n// This file is not currently tested, and it is first on the list of files\n// to refactor in our current refactoring effort. Please do not make changes\n// to this file without manual testing and/or refactoring and adding tests.\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\n\nexport class VictorySharedEvents extends React.Component {\n  static displayName = \"VictorySharedEvents\";\n  static role = \"shared-event-wrapper\";\n  static contextType = TimerContext;\n  static defaultProps = {\n    groupComponent: /*#__PURE__*/React.createElement(\"g\", null)\n  };\n  constructor(props) {\n    super(props);\n    this.getScopedEvents = Events.getScopedEvents.bind(this);\n    this.getEventState = Events.getEventState.bind(this);\n    this.state = this.state || {};\n    this.sharedEventsCache = {};\n    this.globalEvents = {};\n    this.prevGlobalEventKeys = [];\n    this.boundGlobalEvents = {};\n    this.baseProps = this.getBaseProps(props);\n  }\n  shouldComponentUpdate(nextProps) {\n    if (!isEqual(this.props, nextProps)) {\n      this.baseProps = this.getBaseProps(nextProps);\n      const externalMutations = this.getExternalMutations(nextProps, this.baseProps);\n      this.applyExternalMutations(nextProps, externalMutations);\n    }\n    return true;\n  }\n  componentDidMount() {\n    const globalEventKeys = Object.keys(this.globalEvents);\n    globalEventKeys.forEach(key => this.addGlobalListener(key));\n    this.prevGlobalEventKeys = globalEventKeys;\n  }\n  componentDidUpdate() {\n    const globalEventKeys = Object.keys(this.globalEvents);\n    const removedGlobalEventKeys = Collection.difference(this.prevGlobalEventKeys, globalEventKeys);\n    removedGlobalEventKeys.forEach(key => this.removeGlobalListener(key));\n    const addedGlobalEventKeys = Collection.difference(globalEventKeys, this.prevGlobalEventKeys);\n    addedGlobalEventKeys.forEach(key => this.addGlobalListener(key));\n    this.prevGlobalEventKeys = globalEventKeys;\n  }\n  componentWillUnmount() {\n    this.prevGlobalEventKeys.forEach(key => this.removeGlobalListener(key));\n  }\n  addGlobalListener(key) {\n    const boundListener = event => {\n      const listener = this.globalEvents[key];\n      return listener && listener(Events.emulateReactEvent(event));\n    };\n    this.boundGlobalEvents[key] = boundListener;\n    window.addEventListener(Events.getGlobalEventNameFromKey(key), boundListener);\n  }\n  removeGlobalListener(key) {\n    window.removeEventListener(Events.getGlobalEventNameFromKey(key), this.boundGlobalEvents[key]);\n  }\n  getAllEvents(props) {\n    const components = [\"container\", \"groupComponent\"];\n    const componentEvents = Events.getComponentEvents(props, components);\n    if (Array.isArray(componentEvents)) {\n      return Array.isArray(props.events) ? componentEvents.concat(...props.events) : componentEvents;\n    }\n    return props.events;\n  }\n  applyExternalMutations(props, externalMutations) {\n    if (!_isEmpty(externalMutations)) {\n      const callbacks = props.externalEventMutations.reduce((memo, mutation) => Helpers.isFunction(mutation.callback) ? memo.concat(mutation.callback) : memo, []);\n      const compiledCallbacks = callbacks.length ? () => {\n        callbacks.forEach(c => c());\n      } : undefined;\n      this.setState(externalMutations, compiledCallbacks);\n    }\n  }\n  getExternalMutations(props, baseProps) {\n    return !_isEmpty(props.externalEventMutations) ? Events.getExternalMutationsWithChildren(props.externalEventMutations, baseProps, this.state, Object.keys(baseProps)) : undefined;\n  }\n  cacheSharedEvents(name, sharedEvents, cacheValues) {\n    this.sharedEventsCache[name] = [sharedEvents, cacheValues];\n  }\n  getCachedSharedEvents(name, cacheValues) {\n    const [sharedEvents, prevCacheValues] = this.sharedEventsCache[name] || [];\n    if (sharedEvents && isEqual(cacheValues, prevCacheValues)) {\n      return sharedEvents;\n    }\n    return undefined;\n  }\n  getBaseProps(props) {\n    const {\n      container\n    } = props;\n    const children = React.Children.toArray(this.props.children);\n    const childBaseProps = this.getBasePropsFromChildren(children);\n    const parentBaseProps = container ? container.props : {};\n    return Object.assign({}, childBaseProps, {\n      parent: parentBaseProps\n    });\n  }\n  getBasePropsFromChildren(childComponents) {\n    const iteratee = (child, childName) => {\n      if (child.type && Helpers.isFunction(child.type.getBaseProps)) {\n        const baseProps = child.props && child.type.getBaseProps(child.props);\n        return baseProps ? [[childName, baseProps]] : null;\n      }\n      return null;\n    };\n    const baseProps = Helpers.reduceChildren(childComponents, iteratee);\n    return _fromPairs(baseProps);\n  }\n  getNewChildren(props, baseProps) {\n    const {\n      events,\n      eventKey\n    } = props;\n    const alterChildren = (children, childNames) => {\n      return children.reduce((memo, child, index) => {\n        if (child.props.children) {\n          const newChildren = React.Children.toArray(child.props.children);\n          const names = childNames.slice(index, index + newChildren.length);\n          const results = /*#__PURE__*/React.cloneElement(child, child.props, alterChildren(newChildren, names));\n          return memo.concat(results);\n        } else if (childNames[index] !== \"parent\" && child.type && Helpers.isFunction(child.type.getBaseProps)) {\n          const name = child.props.name || childNames[index];\n          const childEvents = Array.isArray(events) && events.filter(event => {\n            if (event.target === \"parent\") {\n              return false;\n            }\n            return Array.isArray(event.childName) ? event.childName.indexOf(name) > -1 : event.childName === name || event.childName === \"all\";\n          });\n          const sharedEventsCacheValues = [name, baseProps, childEvents, stringify(this.state[name])];\n          const sharedEvents = this.getCachedSharedEvents(name, sharedEventsCacheValues) || {\n            events: childEvents,\n            // partially apply child name and baseProps,\n            getEvents: (evts, target) => this.getScopedEvents(evts, target, name, baseProps),\n            // partially apply child name\n            getEventState: (key, target) => this.getEventState(key, target, name)\n          };\n          this.cacheSharedEvents(name, sharedEvents, sharedEventsCacheValues);\n          return memo.concat( /*#__PURE__*/React.cloneElement(child, Object.assign({\n            key: `events-${name}`,\n            sharedEvents,\n            eventKey,\n            name\n          }, child.props)));\n        }\n        return memo.concat(child);\n      }, []);\n    };\n    const childNames = Object.keys(baseProps);\n    const childComponents = React.Children.toArray(props.children);\n    return alterChildren(childComponents, childNames);\n  }\n  getContainer(props, baseProps, events) {\n    const children = this.getNewChildren(props, baseProps);\n    const parents = Array.isArray(events) ? events.filter(event => event.target === \"parent\") : [];\n    const sharedEvents = parents.length > 0 ? {\n      events: parents,\n      // partially apply childName (null) and baseProps,\n      getEvents: (evts, target) => this.getScopedEvents(evts, target, null, baseProps),\n      getEventState: this.getEventState\n    } : null;\n    const container = props.container || props.groupComponent;\n    const role = container.type && container.type.role;\n    const containerProps = container.props || {};\n    const boundGetEvents = Events.getEvents.bind(this);\n    const parentEvents = sharedEvents && boundGetEvents({\n      sharedEvents\n    }, \"parent\");\n    const parentProps = _defaults({}, this.getEventState(\"parent\", \"parent\"), containerProps, baseProps.parent, {\n      children\n    });\n    const containerEvents = _defaults({}, Events.getPartialEvents(parentEvents, \"parent\", parentProps), containerProps.events);\n    this.globalEvents = Events.getGlobalEvents(containerEvents);\n    const localEvents = Events.omitGlobalEvents(containerEvents);\n    return role === \"container\" ? /*#__PURE__*/React.cloneElement(container, Object.assign({}, parentProps, {\n      events: localEvents\n    })) : /*#__PURE__*/React.cloneElement(container, localEvents, children);\n  }\n  render() {\n    const events = this.getAllEvents(this.props);\n    if (events) {\n      return this.getContainer(this.props, this.baseProps, events);\n    }\n    return /*#__PURE__*/React.cloneElement(this.props.container, {\n      children: this.props.children\n    });\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}