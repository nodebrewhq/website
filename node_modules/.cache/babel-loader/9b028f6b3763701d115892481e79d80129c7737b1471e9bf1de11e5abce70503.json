{"ast":null,"code":"import _defaults from \"lodash/defaults\";\nimport _throttle from \"lodash/throttle\";\nimport { Helpers as CoreHelpers, Selection } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nconst Helpers = {\n  getDimension(props) {\n    const {\n      horizontal,\n      brushDimension\n    } = props;\n    if (!horizontal || !brushDimension) {\n      return brushDimension;\n    }\n    return brushDimension === \"x\" ? \"y\" : \"x\";\n  },\n  withinBounds(point, bounds, padding) {\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = CoreHelpers.mapValues(bounds, Number);\n    const {\n      x,\n      y\n    } = CoreHelpers.mapValues(point, Number);\n    const paddingValue = padding ? padding / 2 : 0;\n    return x + paddingValue >= Math.min(x1, x2) && x - paddingValue <= Math.max(x1, x2) && y + paddingValue >= Math.min(y1, y2) && y - paddingValue <= Math.max(y1, y2);\n  },\n  getDomainBox(props, fullDomain, selectedDomain) {\n    const brushDimension = this.getDimension(props);\n    const fullDomainObject = _defaults({}, fullDomain, props.domain);\n    const selectedDomainObject = _defaults({}, selectedDomain, fullDomainObject);\n    const fullCoords = Selection.getDomainCoordinates(props, fullDomainObject);\n    const selectedCoords = Selection.getDomainCoordinates(props, selectedDomainObject);\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(...selectedCoords.x) : Math.min(...fullCoords.x),\n      x2: brushDimension !== \"y\" ? Math.max(...selectedCoords.x) : Math.max(...fullCoords.x),\n      y1: brushDimension !== \"x\" ? Math.min(...selectedCoords.y) : Math.min(...fullCoords.y),\n      y2: brushDimension !== \"x\" ? Math.max(...selectedCoords.y) : Math.max(...fullCoords.y)\n    };\n  },\n  getHandles(props, domainBox) {\n    const brushDimension = this.getDimension(props);\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = domainBox;\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxY = Math.max(y1, y2);\n    const handleWidth = props.handleWidth / 2;\n    return {\n      left: brushDimension !== \"y\" && {\n        x1: minX - handleWidth,\n        x2: minX + handleWidth,\n        y1,\n        y2\n      },\n      right: brushDimension !== \"y\" && {\n        x1: maxX - handleWidth,\n        x2: maxX + handleWidth,\n        y1,\n        y2\n      },\n      top: brushDimension !== \"x\" && {\n        x1,\n        x2,\n        y1: minY - handleWidth,\n        y2: minY + handleWidth\n      },\n      bottom: brushDimension !== \"x\" && {\n        x1,\n        x2,\n        y1: maxY - handleWidth,\n        y2: maxY + handleWidth\n      }\n    };\n  },\n  getActiveHandles(point, props, domainBox) {\n    const handles = this.getHandles(props, domainBox);\n    const activeHandles = [\"top\", \"bottom\", \"left\", \"right\"].reduce((memo, opt) => handles[opt] && this.withinBounds(point, handles[opt]) ? memo.concat(opt) : memo, []);\n    return activeHandles.length && activeHandles;\n  },\n  getResizeMutation(box, handles) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = box;\n    const mutations = {\n      left: {\n        x1: Math.max(x1, x2),\n        x2: Math.min(x1, x2),\n        y1,\n        y2\n      },\n      right: {\n        x1: Math.min(x1, x2),\n        x2: Math.max(x1, x2),\n        y1,\n        y2\n      },\n      top: {\n        y1: Math.max(y1, y2),\n        y2: Math.min(y1, y2),\n        x1,\n        x2\n      },\n      bottom: {\n        y1: Math.min(y1, y2),\n        y2: Math.max(y1, y2),\n        x1,\n        x2\n      }\n    };\n    return handles.reduce((memo, current) => {\n      return Object.assign(memo, mutations[current]);\n    }, {});\n  },\n  getMinimumDomain() {\n    return {\n      x: [0, 1 / Number.MAX_SAFE_INTEGER],\n      y: [0, 1 / Number.MAX_SAFE_INTEGER]\n    };\n  },\n  getDefaultBrushArea(targetProps, cachedDomain, evt) {\n    const {\n      domain,\n      fullDomain,\n      scale,\n      horizontal,\n      allowResize\n    } = targetProps;\n    const defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    if (defaultBrushArea === \"none\") {\n      return this.getMinimumDomain();\n    } else if (defaultBrushArea === \"disable\") {\n      return cachedDomain;\n    } else if (defaultBrushArea === \"move\") {\n      const brushBox = this.getDomainBox(targetProps, fullDomain, cachedDomain);\n      const parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n      const pannedBox = this.panBox({\n        ...targetProps,\n        ...brushBox,\n        brushDomain: cachedDomain,\n        startX: (brushBox.x1 + brushBox.x2) / 2,\n        startY: (brushBox.y1 + brushBox.y2) / 2\n      }, Selection.getSVGEventCoordinates(evt, parentSVG));\n      const fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, fullDomain);\n      const constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      return Selection.getBounds({\n        ...constrainedBox,\n        scale,\n        horizontal\n      });\n    }\n    return domain;\n  },\n  getSelectionMutation(point, box, brushDimension) {\n    const {\n      x,\n      y\n    } = point;\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = box;\n    return {\n      x1: brushDimension !== \"y\" ? x : x1,\n      y1: brushDimension !== \"x\" ? y : y1,\n      x2: brushDimension !== \"y\" ? x : x2,\n      y2: brushDimension !== \"x\" ? y : y2\n    };\n  },\n  panBox(props, point) {\n    const {\n      domain,\n      startX,\n      startY\n    } = props;\n    const brushDimension = this.getDimension(props);\n    const brushDomain = _defaults({}, props.brushDomain, domain);\n    const fullDomain = _defaults({}, props.fullDomain, domain);\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = props.x1 ? props : this.getDomainBox(props, fullDomain, brushDomain);\n    const {\n      x,\n      y\n    } = point;\n    const delta = {\n      x: startX ? startX - x : 0,\n      y: startY ? startY - y : 0\n    };\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(x1, x2) - delta.x : Math.min(x1, x2),\n      x2: brushDimension !== \"y\" ? Math.max(x1, x2) - delta.x : Math.max(x1, x2),\n      y1: brushDimension !== \"x\" ? Math.min(y1, y2) - delta.y : Math.min(y1, y2),\n      y2: brushDimension !== \"x\" ? Math.max(y1, y2) - delta.y : Math.max(y1, y2)\n    };\n  },\n  constrainBox(box, fullDomainBox) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = CoreHelpers.mapValues(fullDomainBox, Number);\n    return {\n      x1: box.x2 > x2 ? x2 - Math.abs(box.x2 - box.x1) : Math.max(box.x1, x1),\n      y1: box.y2 > y2 ? y2 - Math.abs(box.y2 - box.y1) : Math.max(box.y1, y1),\n      x2: box.x1 < x1 ? x1 + Math.abs(box.x2 - box.x1) : Math.min(box.x2, x2),\n      y2: box.y1 < y1 ? y1 + Math.abs(box.y2 - box.y1) : Math.min(box.y2, y2)\n    };\n  },\n  constrainPoint(point, fullDomainBox) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = CoreHelpers.mapValues(fullDomainBox, Number);\n    return {\n      x: Math.min(Math.max(point.x, x1), x2),\n      y: Math.min(Math.max(point.y, y1), y2)\n    };\n  },\n  hasMoved(props) {\n    const {\n      x1,\n      x2,\n      y1,\n      y2,\n      mouseMoveThreshold\n    } = props;\n    const brushDimension = this.getDimension(props);\n    const xMoved = Math.abs(x1 - x2) >= mouseMoveThreshold;\n    const yMoved = Math.abs(y1 - y2) >= mouseMoveThreshold;\n    switch (brushDimension) {\n      case \"x\":\n        return xMoved;\n      case \"y\":\n        return yMoved;\n      default:\n        return xMoved || yMoved;\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseDown(evt, targetProps) {\n    evt.preventDefault();\n    const {\n      handleWidth,\n      cachedBrushDomain,\n      domain,\n      allowResize,\n      allowDrag,\n      allowDraw\n    } = targetProps;\n    const brushDimension = this.getDimension(targetProps);\n    const defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    // Don't trigger events for static brushes\n    if (!allowResize && !allowDrag) {\n      return {};\n    }\n    const fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, domain);\n    const parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n    const {\n      x,\n      y\n    } = Selection.getSVGEventCoordinates(evt, parentSVG);\n    // Ignore events that occur outside of the maximum domain region\n    if (!this.withinBounds({\n      x,\n      y\n    }, fullDomainBox, handleWidth)) {\n      return {};\n    }\n    const brushDomain = _defaults({}, targetProps.brushDomain, domain);\n    const currentDomain = isEqual(brushDomain, cachedBrushDomain) ? targetProps.currentDomain || brushDomain || domain : brushDomain || domain;\n    const domainBox = this.getDomainBox(targetProps, domain, currentDomain);\n    const activeHandles = allowResize && this.getActiveHandles({\n      x,\n      y\n    }, targetProps, domainBox);\n    // If the event occurs in any of the handle regions, start a resize\n    if (activeHandles) {\n      return [{\n        target: \"parent\",\n        mutation: () => {\n          return {\n            isSelecting: true,\n            domainBox,\n            fullDomainBox,\n            cachedBrushDomain: brushDomain,\n            currentDomain,\n            parentSVG,\n            ...this.getResizeMutation(domainBox, activeHandles)\n          };\n        }\n      }];\n    } else if (this.withinBounds({\n      x,\n      y\n    }, domainBox) && !isEqual(domain, currentDomain)) {\n      // if the event occurs within a selected region start a panning event, unless the whole\n      // domain is selected\n      return [{\n        target: \"parent\",\n        mutation: () => ({\n          isPanning: allowDrag,\n          startX: x,\n          startY: y,\n          domainBox,\n          fullDomainBox,\n          currentDomain,\n          cachedBrushDomain: brushDomain,\n          parentSVG,\n          ...domainBox // set x1, x2, y1, y2\n        })\n      }];\n    }\n    // if the event occurs outside the region, or if the whole domain is selected,\n    // start a new selection\n    return allowDraw ? [{\n      target: \"parent\",\n      mutation: () => ({\n        isSelecting: allowResize || defaultBrushArea === \"move\",\n        domainBox,\n        fullDomainBox,\n        parentSVG,\n        cachedBrushDomain: brushDomain,\n        cachedCurrentDomain: currentDomain,\n        currentDomain: this.getMinimumDomain(),\n        ...this.getSelectionMutation({\n          x,\n          y\n        }, domainBox, brushDimension)\n      })\n    }] : {};\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onGlobalMouseMove(evt, targetProps) {\n    const {\n      scale,\n      isPanning,\n      isSelecting,\n      fullDomainBox,\n      onBrushDomainChange,\n      allowResize,\n      allowDrag,\n      horizontal,\n      mouseMoveThreshold,\n      parentSVG\n    } = targetProps;\n    const brushDimension = this.getDimension(targetProps);\n    const {\n      x,\n      y\n    } = Selection.getSVGEventCoordinates(evt, parentSVG);\n    if (!allowResize && !allowDrag || mouseMoveThreshold > 0 && !this.hasMoved({\n      ...targetProps,\n      x2: x,\n      y2: y\n    })) {\n      return {};\n    }\n    if (allowDrag && isPanning) {\n      const {\n        startX,\n        startY\n      } = targetProps;\n      const pannedBox = this.panBox(targetProps, {\n        x,\n        y\n      });\n      const constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      const currentDomain = Selection.getBounds({\n        ...constrainedBox,\n        scale,\n        horizontal\n      });\n      const mutatedProps = {\n        currentDomain,\n        parentSVG,\n        startX: pannedBox.x2 >= fullDomainBox.x2 || pannedBox.x1 <= fullDomainBox.x1 ? startX : x,\n        startY: pannedBox.y2 >= fullDomainBox.y2 || pannedBox.y1 <= fullDomainBox.y1 ? startY : y,\n        ...constrainedBox\n      };\n      if (CoreHelpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      return [{\n        target: \"parent\",\n        mutation: () => mutatedProps\n      }];\n    } else if (allowResize && isSelecting) {\n      const {\n        x: x2,\n        y: y2\n      } = this.constrainPoint({\n        x: brushDimension !== \"y\" ? x : targetProps.x2,\n        y: brushDimension !== \"x\" ? y : targetProps.y2\n      }, fullDomainBox);\n      const currentDomain = Selection.getBounds({\n        x2,\n        y2,\n        x1: targetProps.x1,\n        y1: targetProps.y1,\n        scale,\n        horizontal\n      });\n      const mutatedProps = {\n        x2,\n        y2,\n        currentDomain,\n        parentSVG\n      };\n      if (CoreHelpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      return [{\n        target: \"parent\",\n        mutation: () => mutatedProps\n      }];\n    }\n    return {};\n  },\n  // eslint-disable-next-line complexity\n  onGlobalMouseUp(evt, targetProps) {\n    // if a panning or selection has not been started, ignore the event\n    if (!targetProps.isPanning && !targetProps.isSelecting) {\n      return {};\n    }\n    // eslint-disable-line max-statements, complexity\n    const {\n      x1,\n      y1,\n      x2,\n      y2,\n      isPanning,\n      isSelecting,\n      onBrushDomainChange,\n      onBrushDomainChangeEnd,\n      onBrushCleared,\n      currentDomain,\n      allowResize,\n      allowDrag\n    } = targetProps;\n    const defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    const defaultBrushHasArea = defaultBrushArea !== undefined && defaultBrushArea !== \"none\";\n    const mutatedProps = {\n      isPanning: false,\n      isSelecting: false\n    };\n\n    // if the mouse hasn't moved since a mouseDown event, select the default brush area\n    if ((allowResize || defaultBrushHasArea) && (x1 === x2 || y1 === y2)) {\n      const cachedDomain = targetProps.cachedCurrentDomain || currentDomain;\n      const defaultDomain = this.getDefaultBrushArea(targetProps, cachedDomain, evt);\n      mutatedProps.currentDomain = defaultDomain;\n      if (CoreHelpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      if (CoreHelpers.isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      if (CoreHelpers.isFunction(onBrushCleared)) {\n        onBrushCleared(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    } else if (allowDrag && isPanning || allowResize && isSelecting) {\n      if (CoreHelpers.isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    }\n    return [{\n      target: \"parent\",\n      mutation: () => mutatedProps\n    }];\n  }\n};\nexport const BrushHelpers = {\n  ...Helpers,\n  onMouseDown: Helpers.onMouseDown.bind(Helpers),\n  onGlobalMouseUp: Helpers.onGlobalMouseUp.bind(Helpers),\n  onGlobalMouseMove: _throttle(Helpers.onGlobalMouseMove.bind(Helpers), 16,\n  // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n};","map":{"version":3,"names":["_defaults","_throttle","Helpers","CoreHelpers","Selection","isEqual","getDimension","props","horizontal","brushDimension","withinBounds","point","bounds","padding","x1","x2","y1","y2","mapValues","Number","x","y","paddingValue","Math","min","max","getDomainBox","fullDomain","selectedDomain","fullDomainObject","domain","selectedDomainObject","fullCoords","getDomainCoordinates","selectedCoords","getHandles","domainBox","minX","maxX","minY","maxY","handleWidth","left","right","top","bottom","getActiveHandles","handles","activeHandles","reduce","memo","opt","concat","length","getResizeMutation","box","mutations","current","Object","assign","getMinimumDomain","MAX_SAFE_INTEGER","getDefaultBrushArea","targetProps","cachedDomain","evt","scale","allowResize","defaultBrushArea","brushBox","parentSVG","getParentSVG","pannedBox","panBox","brushDomain","startX","startY","getSVGEventCoordinates","fullDomainBox","constrainedBox","constrainBox","getBounds","getSelectionMutation","delta","abs","constrainPoint","hasMoved","mouseMoveThreshold","xMoved","yMoved","onMouseDown","preventDefault","cachedBrushDomain","allowDrag","allowDraw","currentDomain","target","mutation","isSelecting","isPanning","cachedCurrentDomain","onGlobalMouseMove","onBrushDomainChange","mutatedProps","isFunction","onGlobalMouseUp","onBrushDomainChangeEnd","onBrushCleared","defaultBrushHasArea","undefined","defaultDomain","BrushHelpers","bind","leading","trailing"],"sources":["/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/node_modules/victory-brush-container/es/brush-helpers.js"],"sourcesContent":["import _defaults from \"lodash/defaults\";\nimport _throttle from \"lodash/throttle\";\nimport { Helpers as CoreHelpers, Selection } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nconst Helpers = {\n  getDimension(props) {\n    const {\n      horizontal,\n      brushDimension\n    } = props;\n    if (!horizontal || !brushDimension) {\n      return brushDimension;\n    }\n    return brushDimension === \"x\" ? \"y\" : \"x\";\n  },\n  withinBounds(point, bounds, padding) {\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = CoreHelpers.mapValues(bounds, Number);\n    const {\n      x,\n      y\n    } = CoreHelpers.mapValues(point, Number);\n    const paddingValue = padding ? padding / 2 : 0;\n    return x + paddingValue >= Math.min(x1, x2) && x - paddingValue <= Math.max(x1, x2) && y + paddingValue >= Math.min(y1, y2) && y - paddingValue <= Math.max(y1, y2);\n  },\n  getDomainBox(props, fullDomain, selectedDomain) {\n    const brushDimension = this.getDimension(props);\n    const fullDomainObject = _defaults({}, fullDomain, props.domain);\n    const selectedDomainObject = _defaults({}, selectedDomain, fullDomainObject);\n    const fullCoords = Selection.getDomainCoordinates(props, fullDomainObject);\n    const selectedCoords = Selection.getDomainCoordinates(props, selectedDomainObject);\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(...selectedCoords.x) : Math.min(...fullCoords.x),\n      x2: brushDimension !== \"y\" ? Math.max(...selectedCoords.x) : Math.max(...fullCoords.x),\n      y1: brushDimension !== \"x\" ? Math.min(...selectedCoords.y) : Math.min(...fullCoords.y),\n      y2: brushDimension !== \"x\" ? Math.max(...selectedCoords.y) : Math.max(...fullCoords.y)\n    };\n  },\n  getHandles(props, domainBox) {\n    const brushDimension = this.getDimension(props);\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = domainBox;\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxY = Math.max(y1, y2);\n    const handleWidth = props.handleWidth / 2;\n    return {\n      left: brushDimension !== \"y\" && {\n        x1: minX - handleWidth,\n        x2: minX + handleWidth,\n        y1,\n        y2\n      },\n      right: brushDimension !== \"y\" && {\n        x1: maxX - handleWidth,\n        x2: maxX + handleWidth,\n        y1,\n        y2\n      },\n      top: brushDimension !== \"x\" && {\n        x1,\n        x2,\n        y1: minY - handleWidth,\n        y2: minY + handleWidth\n      },\n      bottom: brushDimension !== \"x\" && {\n        x1,\n        x2,\n        y1: maxY - handleWidth,\n        y2: maxY + handleWidth\n      }\n    };\n  },\n  getActiveHandles(point, props, domainBox) {\n    const handles = this.getHandles(props, domainBox);\n    const activeHandles = [\"top\", \"bottom\", \"left\", \"right\"].reduce((memo, opt) => handles[opt] && this.withinBounds(point, handles[opt]) ? memo.concat(opt) : memo, []);\n    return activeHandles.length && activeHandles;\n  },\n  getResizeMutation(box, handles) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = box;\n    const mutations = {\n      left: {\n        x1: Math.max(x1, x2),\n        x2: Math.min(x1, x2),\n        y1,\n        y2\n      },\n      right: {\n        x1: Math.min(x1, x2),\n        x2: Math.max(x1, x2),\n        y1,\n        y2\n      },\n      top: {\n        y1: Math.max(y1, y2),\n        y2: Math.min(y1, y2),\n        x1,\n        x2\n      },\n      bottom: {\n        y1: Math.min(y1, y2),\n        y2: Math.max(y1, y2),\n        x1,\n        x2\n      }\n    };\n    return handles.reduce((memo, current) => {\n      return Object.assign(memo, mutations[current]);\n    }, {});\n  },\n  getMinimumDomain() {\n    return {\n      x: [0, 1 / Number.MAX_SAFE_INTEGER],\n      y: [0, 1 / Number.MAX_SAFE_INTEGER]\n    };\n  },\n  getDefaultBrushArea(targetProps, cachedDomain, evt) {\n    const {\n      domain,\n      fullDomain,\n      scale,\n      horizontal,\n      allowResize\n    } = targetProps;\n    const defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    if (defaultBrushArea === \"none\") {\n      return this.getMinimumDomain();\n    } else if (defaultBrushArea === \"disable\") {\n      return cachedDomain;\n    } else if (defaultBrushArea === \"move\") {\n      const brushBox = this.getDomainBox(targetProps, fullDomain, cachedDomain);\n      const parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n      const pannedBox = this.panBox({\n        ...targetProps,\n        ...brushBox,\n        brushDomain: cachedDomain,\n        startX: (brushBox.x1 + brushBox.x2) / 2,\n        startY: (brushBox.y1 + brushBox.y2) / 2\n      }, Selection.getSVGEventCoordinates(evt, parentSVG));\n      const fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, fullDomain);\n      const constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      return Selection.getBounds({\n        ...constrainedBox,\n        scale,\n        horizontal\n      });\n    }\n    return domain;\n  },\n  getSelectionMutation(point, box, brushDimension) {\n    const {\n      x,\n      y\n    } = point;\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = box;\n    return {\n      x1: brushDimension !== \"y\" ? x : x1,\n      y1: brushDimension !== \"x\" ? y : y1,\n      x2: brushDimension !== \"y\" ? x : x2,\n      y2: brushDimension !== \"x\" ? y : y2\n    };\n  },\n  panBox(props, point) {\n    const {\n      domain,\n      startX,\n      startY\n    } = props;\n    const brushDimension = this.getDimension(props);\n    const brushDomain = _defaults({}, props.brushDomain, domain);\n    const fullDomain = _defaults({}, props.fullDomain, domain);\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = props.x1 ? props : this.getDomainBox(props, fullDomain, brushDomain);\n    const {\n      x,\n      y\n    } = point;\n    const delta = {\n      x: startX ? startX - x : 0,\n      y: startY ? startY - y : 0\n    };\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(x1, x2) - delta.x : Math.min(x1, x2),\n      x2: brushDimension !== \"y\" ? Math.max(x1, x2) - delta.x : Math.max(x1, x2),\n      y1: brushDimension !== \"x\" ? Math.min(y1, y2) - delta.y : Math.min(y1, y2),\n      y2: brushDimension !== \"x\" ? Math.max(y1, y2) - delta.y : Math.max(y1, y2)\n    };\n  },\n  constrainBox(box, fullDomainBox) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = CoreHelpers.mapValues(fullDomainBox, Number);\n    return {\n      x1: box.x2 > x2 ? x2 - Math.abs(box.x2 - box.x1) : Math.max(box.x1, x1),\n      y1: box.y2 > y2 ? y2 - Math.abs(box.y2 - box.y1) : Math.max(box.y1, y1),\n      x2: box.x1 < x1 ? x1 + Math.abs(box.x2 - box.x1) : Math.min(box.x2, x2),\n      y2: box.y1 < y1 ? y1 + Math.abs(box.y2 - box.y1) : Math.min(box.y2, y2)\n    };\n  },\n  constrainPoint(point, fullDomainBox) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = CoreHelpers.mapValues(fullDomainBox, Number);\n    return {\n      x: Math.min(Math.max(point.x, x1), x2),\n      y: Math.min(Math.max(point.y, y1), y2)\n    };\n  },\n  hasMoved(props) {\n    const {\n      x1,\n      x2,\n      y1,\n      y2,\n      mouseMoveThreshold\n    } = props;\n    const brushDimension = this.getDimension(props);\n    const xMoved = Math.abs(x1 - x2) >= mouseMoveThreshold;\n    const yMoved = Math.abs(y1 - y2) >= mouseMoveThreshold;\n    switch (brushDimension) {\n      case \"x\":\n        return xMoved;\n      case \"y\":\n        return yMoved;\n      default:\n        return xMoved || yMoved;\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseDown(evt, targetProps) {\n    evt.preventDefault();\n    const {\n      handleWidth,\n      cachedBrushDomain,\n      domain,\n      allowResize,\n      allowDrag,\n      allowDraw\n    } = targetProps;\n    const brushDimension = this.getDimension(targetProps);\n    const defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    // Don't trigger events for static brushes\n    if (!allowResize && !allowDrag) {\n      return {};\n    }\n    const fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, domain);\n    const parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n    const {\n      x,\n      y\n    } = Selection.getSVGEventCoordinates(evt, parentSVG);\n    // Ignore events that occur outside of the maximum domain region\n    if (!this.withinBounds({\n      x,\n      y\n    }, fullDomainBox, handleWidth)) {\n      return {};\n    }\n    const brushDomain = _defaults({}, targetProps.brushDomain, domain);\n    const currentDomain = isEqual(brushDomain, cachedBrushDomain) ? targetProps.currentDomain || brushDomain || domain : brushDomain || domain;\n    const domainBox = this.getDomainBox(targetProps, domain, currentDomain);\n    const activeHandles = allowResize && this.getActiveHandles({\n      x,\n      y\n    }, targetProps, domainBox);\n    // If the event occurs in any of the handle regions, start a resize\n    if (activeHandles) {\n      return [{\n        target: \"parent\",\n        mutation: () => {\n          return {\n            isSelecting: true,\n            domainBox,\n            fullDomainBox,\n            cachedBrushDomain: brushDomain,\n            currentDomain,\n            parentSVG,\n            ...this.getResizeMutation(domainBox, activeHandles)\n          };\n        }\n      }];\n    } else if (this.withinBounds({\n      x,\n      y\n    }, domainBox) && !isEqual(domain, currentDomain)) {\n      // if the event occurs within a selected region start a panning event, unless the whole\n      // domain is selected\n      return [{\n        target: \"parent\",\n        mutation: () => ({\n          isPanning: allowDrag,\n          startX: x,\n          startY: y,\n          domainBox,\n          fullDomainBox,\n          currentDomain,\n          cachedBrushDomain: brushDomain,\n          parentSVG,\n          ...domainBox // set x1, x2, y1, y2\n        })\n      }];\n    }\n    // if the event occurs outside the region, or if the whole domain is selected,\n    // start a new selection\n    return allowDraw ? [{\n      target: \"parent\",\n      mutation: () => ({\n        isSelecting: allowResize || defaultBrushArea === \"move\",\n        domainBox,\n        fullDomainBox,\n        parentSVG,\n        cachedBrushDomain: brushDomain,\n        cachedCurrentDomain: currentDomain,\n        currentDomain: this.getMinimumDomain(),\n        ...this.getSelectionMutation({\n          x,\n          y\n        }, domainBox, brushDimension)\n      })\n    }] : {};\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onGlobalMouseMove(evt, targetProps) {\n    const {\n      scale,\n      isPanning,\n      isSelecting,\n      fullDomainBox,\n      onBrushDomainChange,\n      allowResize,\n      allowDrag,\n      horizontal,\n      mouseMoveThreshold,\n      parentSVG\n    } = targetProps;\n    const brushDimension = this.getDimension(targetProps);\n    const {\n      x,\n      y\n    } = Selection.getSVGEventCoordinates(evt, parentSVG);\n    if (!allowResize && !allowDrag || mouseMoveThreshold > 0 && !this.hasMoved({\n      ...targetProps,\n      x2: x,\n      y2: y\n    })) {\n      return {};\n    }\n    if (allowDrag && isPanning) {\n      const {\n        startX,\n        startY\n      } = targetProps;\n      const pannedBox = this.panBox(targetProps, {\n        x,\n        y\n      });\n      const constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      const currentDomain = Selection.getBounds({\n        ...constrainedBox,\n        scale,\n        horizontal\n      });\n      const mutatedProps = {\n        currentDomain,\n        parentSVG,\n        startX: pannedBox.x2 >= fullDomainBox.x2 || pannedBox.x1 <= fullDomainBox.x1 ? startX : x,\n        startY: pannedBox.y2 >= fullDomainBox.y2 || pannedBox.y1 <= fullDomainBox.y1 ? startY : y,\n        ...constrainedBox\n      };\n      if (CoreHelpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      return [{\n        target: \"parent\",\n        mutation: () => mutatedProps\n      }];\n    } else if (allowResize && isSelecting) {\n      const {\n        x: x2,\n        y: y2\n      } = this.constrainPoint({\n        x: brushDimension !== \"y\" ? x : targetProps.x2,\n        y: brushDimension !== \"x\" ? y : targetProps.y2\n      }, fullDomainBox);\n      const currentDomain = Selection.getBounds({\n        x2,\n        y2,\n        x1: targetProps.x1,\n        y1: targetProps.y1,\n        scale,\n        horizontal\n      });\n      const mutatedProps = {\n        x2,\n        y2,\n        currentDomain,\n        parentSVG\n      };\n      if (CoreHelpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      return [{\n        target: \"parent\",\n        mutation: () => mutatedProps\n      }];\n    }\n    return {};\n  },\n  // eslint-disable-next-line complexity\n  onGlobalMouseUp(evt, targetProps) {\n    // if a panning or selection has not been started, ignore the event\n    if (!targetProps.isPanning && !targetProps.isSelecting) {\n      return {};\n    }\n    // eslint-disable-line max-statements, complexity\n    const {\n      x1,\n      y1,\n      x2,\n      y2,\n      isPanning,\n      isSelecting,\n      onBrushDomainChange,\n      onBrushDomainChangeEnd,\n      onBrushCleared,\n      currentDomain,\n      allowResize,\n      allowDrag\n    } = targetProps;\n    const defaultBrushArea = !allowResize && !targetProps.defaultBrushArea ? \"move\" : targetProps.defaultBrushArea;\n    const defaultBrushHasArea = defaultBrushArea !== undefined && defaultBrushArea !== \"none\";\n    const mutatedProps = {\n      isPanning: false,\n      isSelecting: false\n    };\n\n    // if the mouse hasn't moved since a mouseDown event, select the default brush area\n    if ((allowResize || defaultBrushHasArea) && (x1 === x2 || y1 === y2)) {\n      const cachedDomain = targetProps.cachedCurrentDomain || currentDomain;\n      const defaultDomain = this.getDefaultBrushArea(targetProps, cachedDomain, evt);\n      mutatedProps.currentDomain = defaultDomain;\n      if (CoreHelpers.isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      if (CoreHelpers.isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n      if (CoreHelpers.isFunction(onBrushCleared)) {\n        onBrushCleared(defaultDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    } else if (allowDrag && isPanning || allowResize && isSelecting) {\n      if (CoreHelpers.isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    }\n    return [{\n      target: \"parent\",\n      mutation: () => mutatedProps\n    }];\n  }\n};\nexport const BrushHelpers = {\n  ...Helpers,\n  onMouseDown: Helpers.onMouseDown.bind(Helpers),\n  onGlobalMouseUp: Helpers.onGlobalMouseUp.bind(Helpers),\n  onGlobalMouseMove: _throttle(Helpers.onGlobalMouseMove.bind(Helpers), 16,\n  // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}