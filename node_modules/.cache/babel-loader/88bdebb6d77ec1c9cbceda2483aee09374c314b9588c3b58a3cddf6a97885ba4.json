{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\n/* eslint no-magic-numbers: [\"error\", { \"ignore\": [-0.5, 0.5, 0, 1, 2] }]*/\nimport React from \"react\";\nimport { VictoryPortal } from \"../victory-portal/victory-portal\";\nimport { Rect } from \"../victory-primitives/rect\";\nimport { Text } from \"../victory-primitives/text\";\nimport { TSpan } from \"../victory-primitives/tspan\";\nimport * as Helpers from \"../victory-util/helpers\";\nimport * as LabelHelpers from \"../victory-util/label-helpers\";\nimport * as Log from \"../victory-util/log\";\nimport * as Style from \"../victory-util/style\";\nimport * as TextSize from \"../victory-util/textsize\";\nimport * as UserProps from \"../victory-util/user-props\";\nconst defaultStyles = {\n  fill: \"#252525\",\n  fontSize: 14,\n  fontFamily: \"'Gill Sans', 'Gill Sans MT', 'SerÂ­avek', 'Trebuchet MS', sans-serif\",\n  stroke: \"transparent\"\n};\nconst getPosition = (props, dimension) => {\n  if (!props.datum) {\n    return 0;\n  }\n  const scaledPoint = Helpers.scalePoint(props, props.datum);\n  return scaledPoint[dimension];\n};\nconst getFontSize = style => {\n  const baseSize = style && style.fontSize;\n  if (typeof baseSize === \"number\") {\n    return baseSize;\n  } else if (baseSize === undefined || baseSize === null) {\n    return defaultStyles.fontSize;\n  } else if (typeof baseSize === \"string\") {\n    const fontSize = Number(baseSize.replace(\"px\", \"\"));\n    if (!isNaN(fontSize)) {\n      return fontSize;\n    }\n    Log.warn(\"fontSize should be expressed as a number of pixels\");\n    return defaultStyles.fontSize;\n  }\n  return defaultStyles.fontSize;\n};\nconst getSingleValue = function (prop, index) {\n  if (index === void 0) {\n    index = 0;\n  }\n  return Array.isArray(prop) ? prop[index] || prop[0] : prop;\n};\nconst shouldUseMultilineBackgrounds = props => {\n  const {\n    backgroundStyle,\n    backgroundPadding\n  } = props;\n  return Array.isArray(backgroundStyle) && !_isEmpty(backgroundStyle) || Array.isArray(backgroundPadding) && !_isEmpty(backgroundPadding);\n};\nconst getStyles = (style, props) => {\n  if (props.disableInlineStyles) {\n    const baseStyles = Helpers.evaluateStyle(style, props);\n    return {\n      // Font size is necessary to calculate the y position of the label\n      fontSize: getFontSize(baseStyles)\n    };\n  }\n  const getSingleStyle = s => {\n    const baseStyles = Helpers.evaluateStyle(s ? _defaults({}, s, defaultStyles) : defaultStyles, props);\n    return Object.assign({}, baseStyles, {\n      fontSize: getFontSize(baseStyles)\n    });\n  };\n  return Array.isArray(style) && !_isEmpty(style) ? style.map(s => getSingleStyle(s)) : getSingleStyle(style);\n};\nconst getBackgroundStyles = (style, props) => {\n  if (!style) {\n    return undefined;\n  }\n  return Array.isArray(style) && !_isEmpty(style) ? style.map(s => Helpers.evaluateStyle(s, props)) : Helpers.evaluateStyle(style, props);\n};\nconst getBackgroundPadding = props => {\n  if (props.backgroundPadding && Array.isArray(props.backgroundPadding)) {\n    return props.backgroundPadding.map(backgroundPadding => {\n      const padding = Helpers.evaluateProp(backgroundPadding, props);\n      return Helpers.getPadding({\n        padding\n      });\n    });\n  }\n  const padding = Helpers.evaluateProp(props.backgroundPadding, props);\n  return Helpers.getPadding({\n    padding\n  });\n};\nconst getLineHeight = props => {\n  const lineHeight = Helpers.evaluateProp(props.lineHeight, props);\n  if (Array.isArray(lineHeight)) {\n    return _isEmpty(lineHeight) ? [1] : lineHeight;\n  }\n  return lineHeight;\n};\nconst getContent = (text, props) => {\n  if (text === undefined || text === null) {\n    return undefined;\n  }\n  if (Array.isArray(text)) {\n    return text.map(line => Helpers.evaluateProp(line, props));\n  }\n  const child = Helpers.evaluateProp(text, props);\n  if (child === undefined || child === null) {\n    return undefined;\n  }\n  return Array.isArray(child) ? child : `${child}`.split(\"\\n\");\n};\nconst getDy = (props, verticalAnchor, lineHeight) => {\n  const dy = props.dy ? Helpers.evaluateProp(props.dy, props) : 0;\n  const length = props.inline ? 1 : props.text.length;\n  const capHeight = Helpers.evaluateProp(props.capHeight, props);\n  const anchor = verticalAnchor ? Helpers.evaluateProp(verticalAnchor, props) : \"middle\";\n  const fontSizes = [...Array(length).keys()].map(i => getSingleValue(props.style, i).fontSize);\n  const lineHeights = [...Array(length).keys()].map(i => getSingleValue(lineHeight, i));\n  if (anchor === \"start\") {\n    return dy + (capHeight / 2 + lineHeights[0] / 2) * fontSizes[0];\n  } else if (props.inline) {\n    return anchor === \"end\" ? dy + (capHeight / 2 - lineHeights[0] / 2) * fontSizes[0] : dy + capHeight / 2 * fontSizes[0];\n  } else if (length === 1) {\n    return anchor === \"end\" ? dy + (capHeight / 2 + (0.5 - length) * lineHeights[0]) * fontSizes[0] : dy + (capHeight / 2 + (0.5 - length / 2) * lineHeights[0]) * fontSizes[0];\n  }\n  const allHeights = [...Array(length).keys()].reduce((memo, i) => {\n    return memo + (capHeight / 2 + (0.5 - length) * lineHeights[i]) * fontSizes[i] / length;\n  }, 0);\n  return anchor === \"end\" ? dy + allHeights : dy + allHeights / 2 + capHeight / 2 * lineHeights[length - 1] * fontSizes[length - 1];\n};\nconst getTransform = (props, x, y) => {\n  const {\n    polar\n  } = props;\n  const style = getSingleValue(props.style);\n  const defaultAngle = polar ? LabelHelpers.getPolarAngle(props) : 0;\n  const baseAngle = style.angle === undefined ? Helpers.evaluateProp(props.angle, props) : style.angle;\n  const angle = baseAngle === undefined ? defaultAngle : baseAngle;\n  const transform = props.transform || style.transform;\n  const transformPart = transform && Helpers.evaluateProp(transform, props);\n  const rotatePart = angle && {\n    rotate: [angle, x, y]\n  };\n  return transformPart || angle ? Style.toTransformString(transformPart, rotatePart) : undefined;\n};\nconst getXCoordinate = (calculatedProps, labelSizeWidth) => {\n  const {\n    direction,\n    textAnchor,\n    x,\n    dx\n  } = calculatedProps;\n  if (direction === \"rtl\") {\n    return x - labelSizeWidth;\n  }\n  switch (textAnchor) {\n    case \"middle\":\n      return Math.round(x - labelSizeWidth / 2);\n    case \"end\":\n      return Math.round(x - labelSizeWidth);\n    default:\n      // start\n      return x + (dx || 0);\n  }\n};\nconst getYCoordinate = (calculatedProps, textHeight) => {\n  const {\n    verticalAnchor,\n    y,\n    originalDy = 0\n  } = calculatedProps;\n  const offset = y + originalDy;\n  switch (verticalAnchor) {\n    case \"start\":\n      return Math.floor(offset);\n    case \"end\":\n      return Math.ceil(offset - textHeight);\n    default:\n      // middle\n      return Math.floor(offset - textHeight / 2);\n  }\n};\nconst getFullBackground = (calculatedProps, tspanValues) => {\n  const {\n    dx = 0,\n    transform,\n    backgroundComponent,\n    backgroundStyle,\n    inline,\n    backgroundPadding,\n    capHeight\n  } = calculatedProps;\n  const textSizes = tspanValues.map(tspan => {\n    return tspan.textSize;\n  });\n  const height = inline ? Math.max(...textSizes.map(size => size.height)) : textSizes.reduce((memo, size, i) => {\n    const capHeightAdjustment = i ? 0 : capHeight / 2;\n    return memo + size.height * (tspanValues[i].lineHeight - capHeightAdjustment);\n  }, 0);\n  const width = inline ? textSizes.reduce((memo, size, index) => {\n    const offset = index ? dx : 0;\n    return memo + size.width + offset;\n  }, 0) : Math.max(...textSizes.map(size => size.width));\n  const xCoordinate = getXCoordinate(calculatedProps, width);\n  const yCoordinate = getYCoordinate(calculatedProps, height);\n  const backgroundProps = {\n    key: \"background\",\n    height: height + backgroundPadding.top + backgroundPadding.bottom,\n    style: backgroundStyle,\n    transform,\n    width: width + backgroundPadding.left + backgroundPadding.right,\n    x: inline ? xCoordinate - backgroundPadding.left : xCoordinate + dx - backgroundPadding.left,\n    y: yCoordinate\n  };\n  return /*#__PURE__*/React.cloneElement(backgroundComponent, _defaults({}, backgroundComponent.props, backgroundProps));\n};\nconst getInlineXOffset = (calculatedProps, textElements, index) => {\n  const {\n    textAnchor\n  } = calculatedProps;\n  const widths = textElements.map(t => t.widthWithPadding);\n  const totalWidth = widths.reduce((memo, width) => memo + width, 0);\n  const centerOffset = -totalWidth / 2;\n  switch (textAnchor) {\n    case \"start\":\n      return widths.reduce((memo, width, i) => i < index ? memo + width : memo, 0);\n    case \"end\":\n      return widths.reduce((memo, width, i) => i > index ? memo - width : memo, 0);\n    default:\n      // middle\n      return widths.reduce((memo, width, i) => {\n        const offsetWidth = i < index ? width : 0;\n        return i === index ? memo + width / 2 : memo + offsetWidth;\n      }, centerOffset);\n  }\n};\nconst getChildBackgrounds = (calculatedProps, tspanValues) => {\n  const {\n    dy,\n    dx,\n    transform,\n    backgroundStyle,\n    backgroundPadding,\n    backgroundComponent,\n    inline,\n    y\n  } = calculatedProps;\n  const textElements = tspanValues.map((current, i) => {\n    const previous = getSingleValue(tspanValues, i - 1);\n    const labelSize = current.textSize;\n    const totalLineHeight = current.fontSize * current.lineHeight;\n    const textHeight = Math.ceil(totalLineHeight);\n    const padding = getSingleValue(backgroundPadding, i);\n    const prevPadding = getSingleValue(backgroundPadding, i - 1);\n    const xOffset = inline ? dx || 0 : 0;\n    const childDy = i && !inline ? previous.fontSize * previous.lineHeight + prevPadding.top + prevPadding.bottom : dy - totalLineHeight * 0.5 - (current.fontSize - current.capHeight);\n    return {\n      textHeight,\n      labelSize,\n      heightWithPadding: textHeight + padding.top + padding.bottom,\n      widthWithPadding: labelSize.width + padding.left + padding.right + xOffset,\n      y,\n      fontSize: current.fontSize,\n      dy: childDy\n    };\n  });\n  return textElements.map((textElement, i) => {\n    const xCoordinate = getXCoordinate(calculatedProps, textElement.labelSize.width);\n    const yCoordinate = textElements.slice(0, i + 1).reduce((prev, curr) => {\n      return prev + curr.dy;\n    }, y);\n    const padding = getSingleValue(backgroundPadding, i);\n    const height = textElement.heightWithPadding;\n    const xCoord = inline ? getInlineXOffset(calculatedProps, textElements, i) + xCoordinate - padding.left : xCoordinate;\n    const yCoord = inline ? getYCoordinate(calculatedProps, height) - padding.top : yCoordinate;\n    const backgroundProps = {\n      key: `tspan-background-${i}`,\n      height,\n      style: getSingleValue(backgroundStyle, i),\n      width: textElement.widthWithPadding,\n      transform,\n      x: xCoord - padding.left,\n      y: yCoord\n    };\n    return /*#__PURE__*/React.cloneElement(backgroundComponent, _defaults({}, backgroundComponent.props, backgroundProps));\n  });\n};\nconst getBackgroundElement = (calculatedProps, tspanValues) => {\n  return shouldUseMultilineBackgrounds(calculatedProps) ? getChildBackgrounds(calculatedProps, tspanValues) : getFullBackground(calculatedProps, tspanValues);\n};\nconst calculateSpanDy = (tspanValues, i, calculatedProps) => {\n  const current = getSingleValue(tspanValues, i);\n  const previous = getSingleValue(tspanValues, i - 1);\n  const previousHeight = previous.fontSize * previous.lineHeight;\n  const currentHeight = current.fontSize * current.lineHeight;\n  const previousCaps = previous.fontSize - previous.capHeight;\n  const currentCaps = current.fontSize - current.capHeight;\n  const textHeight = previousHeight - previous.fontSize / 2 + current.fontSize / 2 - previousHeight / 2 + currentHeight / 2 - currentCaps / 2 + previousCaps / 2;\n  return shouldUseMultilineBackgrounds(calculatedProps) ? textHeight + current.backgroundPadding.top + previous.backgroundPadding.bottom : textHeight;\n};\nconst getTSpanDy = (tspanValues, calculatedProps, i) => {\n  const {\n    inline\n  } = calculatedProps;\n  const current = getSingleValue(tspanValues, i);\n  if (i && !inline) {\n    return calculateSpanDy(tspanValues, i, calculatedProps);\n  } else if (inline) {\n    return i === 0 ? current.backgroundPadding.top : undefined;\n  }\n  return current.backgroundPadding.top;\n};\nconst evaluateProps = props => {\n  /* Potential evaluated props are\n    1) text\n    2) style\n    3) everything else\n  */\n  const text = getContent(props.text, props);\n  const style = getStyles(props.style, Object.assign({}, props, {\n    text\n  }));\n  const backgroundStyle = getBackgroundStyles(props.backgroundStyle, Object.assign({}, props, {\n    text,\n    style\n  }));\n  const backgroundPadding = getBackgroundPadding(Object.assign({}, props, {\n    text,\n    style,\n    backgroundStyle\n  }));\n  const id = Helpers.evaluateProp(props.id, props);\n  return Object.assign({}, props, {\n    backgroundStyle,\n    backgroundPadding,\n    style,\n    text,\n    id\n  });\n};\nconst getCalculatedProps = props => {\n  const ariaLabel = Helpers.evaluateProp(props.ariaLabel, props);\n  const style = getSingleValue(props.style);\n  const lineHeight = getLineHeight(props);\n  const direction = props.direction ? Helpers.evaluateProp(props.direction, props) : \"inherit\";\n  const textAnchor = props.textAnchor ? Helpers.evaluateProp(props.textAnchor, props) : style.textAnchor || \"start\";\n  const verticalAnchor = props.verticalAnchor ? Helpers.evaluateProp(props.verticalAnchor, props) : style.verticalAnchor || \"middle\";\n  const dx = props.dx ? Helpers.evaluateProp(props.dx, props) : 0;\n  const dy = getDy(props, verticalAnchor, lineHeight);\n  const x = props.x !== undefined ? props.x : getPosition(props, \"x\");\n  const y = props.y !== undefined ? props.y : getPosition(props, \"y\");\n  const transform = getTransform(props, x, y);\n  return Object.assign({}, props, {\n    ariaLabel,\n    lineHeight,\n    direction,\n    textAnchor,\n    verticalAnchor,\n    dx,\n    dy,\n    originalDy: Helpers.evaluateProp(props.dy, props),\n    transform,\n    x,\n    y\n  });\n};\nconst renderLabel = (calculatedProps, tspanValues) => {\n  const {\n    ariaLabel,\n    inline,\n    className,\n    title,\n    events,\n    direction,\n    text,\n    textAnchor,\n    dx,\n    dy,\n    transform,\n    x,\n    y,\n    desc,\n    id,\n    tabIndex,\n    tspanComponent,\n    textComponent\n  } = calculatedProps;\n  const userProps = UserProps.getSafeUserProps(calculatedProps);\n  const textProps = {\n    \"aria-label\": ariaLabel,\n    key: \"text\",\n    ...events,\n    direction,\n    dx,\n    x,\n    y: y + dy,\n    transform,\n    className,\n    title,\n    desc: Helpers.evaluateProp(desc, calculatedProps),\n    tabIndex: Helpers.evaluateProp(tabIndex, calculatedProps),\n    id,\n    ...userProps\n  };\n  const tspans = text.map((line, i) => {\n    const currentStyle = tspanValues[i].style;\n    const tspanProps = {\n      key: `${id}-key-${i}`,\n      x: !inline ? x : undefined,\n      dx: inline ? dx + tspanValues[i].backgroundPadding.left : dx,\n      dy: getTSpanDy(tspanValues, calculatedProps, i),\n      textAnchor: currentStyle.textAnchor || textAnchor,\n      style: currentStyle,\n      children: line\n    };\n    return /*#__PURE__*/React.cloneElement(tspanComponent, tspanProps);\n  });\n  return /*#__PURE__*/React.cloneElement(textComponent, textProps, tspans);\n};\nconst defaultProps = {\n  backgroundComponent: /*#__PURE__*/React.createElement(Rect, null),\n  groupComponent: /*#__PURE__*/React.createElement(\"g\", null),\n  direction: \"inherit\",\n  textComponent: /*#__PURE__*/React.createElement(Text, null),\n  tspanComponent: /*#__PURE__*/React.createElement(TSpan, null),\n  capHeight: 0.71,\n  // Magic number from d3.\n  lineHeight: 1\n};\nexport const VictoryLabel = initialProps => {\n  const props = evaluateProps(_defaults({}, initialProps, defaultProps));\n  if (props.text === null || props.text === undefined) {\n    return null;\n  }\n  const calculatedProps = getCalculatedProps(props);\n  const {\n    text,\n    style,\n    capHeight,\n    backgroundPadding,\n    lineHeight\n  } = calculatedProps;\n  const tspanValues = text.map((line, i) => {\n    const currentStyle = getSingleValue(style, i);\n    const capHeightPx = TextSize.convertLengthToPixels(`${capHeight}em`, currentStyle.fontSize);\n    const currentLineHeight = getSingleValue(lineHeight, i);\n    return {\n      style: currentStyle,\n      fontSize: currentStyle.fontSize || defaultStyles.fontSize,\n      capHeight: capHeightPx,\n      text: line,\n      // TODO: This looks like a bug:\n      textSize: TextSize.approximateTextSize(line, currentStyle),\n      lineHeight: currentLineHeight,\n      backgroundPadding: getSingleValue(backgroundPadding, i)\n    };\n  });\n  const label = renderLabel(calculatedProps, tspanValues);\n  if (props.backgroundStyle) {\n    const backgroundElement = getBackgroundElement(calculatedProps, tspanValues);\n    const children = [backgroundElement, label];\n    const backgroundWithLabel = /*#__PURE__*/React.cloneElement(props.groupComponent, {}, children);\n    return props.renderInPortal ? /*#__PURE__*/React.createElement(VictoryPortal, null, backgroundWithLabel) : backgroundWithLabel;\n  }\n  return props.renderInPortal ? /*#__PURE__*/React.createElement(VictoryPortal, null, label) : label;\n};\nVictoryLabel.displayName = \"VictoryLabel\";\nVictoryLabel.role = \"label\";\nVictoryLabel.defaultStyles = defaultStyles;","map":{"version":3,"names":["_isEmpty","_defaults","React","VictoryPortal","Rect","Text","TSpan","Helpers","LabelHelpers","Log","Style","TextSize","UserProps","defaultStyles","fill","fontSize","fontFamily","stroke","getPosition","props","dimension","datum","scaledPoint","scalePoint","getFontSize","style","baseSize","undefined","Number","replace","isNaN","warn","getSingleValue","prop","index","Array","isArray","shouldUseMultilineBackgrounds","backgroundStyle","backgroundPadding","getStyles","disableInlineStyles","baseStyles","evaluateStyle","getSingleStyle","s","Object","assign","map","getBackgroundStyles","getBackgroundPadding","padding","evaluateProp","getPadding","getLineHeight","lineHeight","getContent","text","line","child","split","getDy","verticalAnchor","dy","length","inline","capHeight","anchor","fontSizes","keys","i","lineHeights","allHeights","reduce","memo","getTransform","x","y","polar","defaultAngle","getPolarAngle","baseAngle","angle","transform","transformPart","rotatePart","rotate","toTransformString","getXCoordinate","calculatedProps","labelSizeWidth","direction","textAnchor","dx","Math","round","getYCoordinate","textHeight","originalDy","offset","floor","ceil","getFullBackground","tspanValues","backgroundComponent","textSizes","tspan","textSize","height","max","size","capHeightAdjustment","width","xCoordinate","yCoordinate","backgroundProps","key","top","bottom","left","right","cloneElement","getInlineXOffset","textElements","widths","t","widthWithPadding","totalWidth","centerOffset","offsetWidth","getChildBackgrounds","current","previous","labelSize","totalLineHeight","prevPadding","xOffset","childDy","heightWithPadding","textElement","slice","prev","curr","xCoord","yCoord","getBackgroundElement","calculateSpanDy","previousHeight","currentHeight","previousCaps","currentCaps","getTSpanDy","evaluateProps","id","getCalculatedProps","ariaLabel","renderLabel","className","title","events","desc","tabIndex","tspanComponent","textComponent","userProps","getSafeUserProps","textProps","tspans","currentStyle","tspanProps","children","defaultProps","createElement","groupComponent","VictoryLabel","initialProps","capHeightPx","convertLengthToPixels","currentLineHeight","approximateTextSize","label","backgroundElement","backgroundWithLabel","renderInPortal","displayName","role"],"sources":["/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/node_modules/victory-core/es/victory-label/victory-label.js"],"sourcesContent":["import _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\n/* eslint no-magic-numbers: [\"error\", { \"ignore\": [-0.5, 0.5, 0, 1, 2] }]*/\nimport React from \"react\";\nimport { VictoryPortal } from \"../victory-portal/victory-portal\";\nimport { Rect } from \"../victory-primitives/rect\";\nimport { Text } from \"../victory-primitives/text\";\nimport { TSpan } from \"../victory-primitives/tspan\";\nimport * as Helpers from \"../victory-util/helpers\";\nimport * as LabelHelpers from \"../victory-util/label-helpers\";\nimport * as Log from \"../victory-util/log\";\nimport * as Style from \"../victory-util/style\";\nimport * as TextSize from \"../victory-util/textsize\";\nimport * as UserProps from \"../victory-util/user-props\";\nconst defaultStyles = {\n  fill: \"#252525\",\n  fontSize: 14,\n  fontFamily: \"'Gill Sans', 'Gill Sans MT', 'SerÂ­avek', 'Trebuchet MS', sans-serif\",\n  stroke: \"transparent\"\n};\nconst getPosition = (props, dimension) => {\n  if (!props.datum) {\n    return 0;\n  }\n  const scaledPoint = Helpers.scalePoint(props, props.datum);\n  return scaledPoint[dimension];\n};\nconst getFontSize = style => {\n  const baseSize = style && style.fontSize;\n  if (typeof baseSize === \"number\") {\n    return baseSize;\n  } else if (baseSize === undefined || baseSize === null) {\n    return defaultStyles.fontSize;\n  } else if (typeof baseSize === \"string\") {\n    const fontSize = Number(baseSize.replace(\"px\", \"\"));\n    if (!isNaN(fontSize)) {\n      return fontSize;\n    }\n    Log.warn(\"fontSize should be expressed as a number of pixels\");\n    return defaultStyles.fontSize;\n  }\n  return defaultStyles.fontSize;\n};\nconst getSingleValue = function (prop, index) {\n  if (index === void 0) {\n    index = 0;\n  }\n  return Array.isArray(prop) ? prop[index] || prop[0] : prop;\n};\nconst shouldUseMultilineBackgrounds = props => {\n  const {\n    backgroundStyle,\n    backgroundPadding\n  } = props;\n  return Array.isArray(backgroundStyle) && !_isEmpty(backgroundStyle) || Array.isArray(backgroundPadding) && !_isEmpty(backgroundPadding);\n};\nconst getStyles = (style, props) => {\n  if (props.disableInlineStyles) {\n    const baseStyles = Helpers.evaluateStyle(style, props);\n    return {\n      // Font size is necessary to calculate the y position of the label\n      fontSize: getFontSize(baseStyles)\n    };\n  }\n  const getSingleStyle = s => {\n    const baseStyles = Helpers.evaluateStyle(s ? _defaults({}, s, defaultStyles) : defaultStyles, props);\n    return Object.assign({}, baseStyles, {\n      fontSize: getFontSize(baseStyles)\n    });\n  };\n  return Array.isArray(style) && !_isEmpty(style) ? style.map(s => getSingleStyle(s)) : getSingleStyle(style);\n};\nconst getBackgroundStyles = (style, props) => {\n  if (!style) {\n    return undefined;\n  }\n  return Array.isArray(style) && !_isEmpty(style) ? style.map(s => Helpers.evaluateStyle(s, props)) : Helpers.evaluateStyle(style, props);\n};\nconst getBackgroundPadding = props => {\n  if (props.backgroundPadding && Array.isArray(props.backgroundPadding)) {\n    return props.backgroundPadding.map(backgroundPadding => {\n      const padding = Helpers.evaluateProp(backgroundPadding, props);\n      return Helpers.getPadding({\n        padding\n      });\n    });\n  }\n  const padding = Helpers.evaluateProp(props.backgroundPadding, props);\n  return Helpers.getPadding({\n    padding\n  });\n};\nconst getLineHeight = props => {\n  const lineHeight = Helpers.evaluateProp(props.lineHeight, props);\n  if (Array.isArray(lineHeight)) {\n    return _isEmpty(lineHeight) ? [1] : lineHeight;\n  }\n  return lineHeight;\n};\nconst getContent = (text, props) => {\n  if (text === undefined || text === null) {\n    return undefined;\n  }\n  if (Array.isArray(text)) {\n    return text.map(line => Helpers.evaluateProp(line, props));\n  }\n  const child = Helpers.evaluateProp(text, props);\n  if (child === undefined || child === null) {\n    return undefined;\n  }\n  return Array.isArray(child) ? child : `${child}`.split(\"\\n\");\n};\nconst getDy = (props, verticalAnchor, lineHeight) => {\n  const dy = props.dy ? Helpers.evaluateProp(props.dy, props) : 0;\n  const length = props.inline ? 1 : props.text.length;\n  const capHeight = Helpers.evaluateProp(props.capHeight, props);\n  const anchor = verticalAnchor ? Helpers.evaluateProp(verticalAnchor, props) : \"middle\";\n  const fontSizes = [...Array(length).keys()].map(i => getSingleValue(props.style, i).fontSize);\n  const lineHeights = [...Array(length).keys()].map(i => getSingleValue(lineHeight, i));\n  if (anchor === \"start\") {\n    return dy + (capHeight / 2 + lineHeights[0] / 2) * fontSizes[0];\n  } else if (props.inline) {\n    return anchor === \"end\" ? dy + (capHeight / 2 - lineHeights[0] / 2) * fontSizes[0] : dy + capHeight / 2 * fontSizes[0];\n  } else if (length === 1) {\n    return anchor === \"end\" ? dy + (capHeight / 2 + (0.5 - length) * lineHeights[0]) * fontSizes[0] : dy + (capHeight / 2 + (0.5 - length / 2) * lineHeights[0]) * fontSizes[0];\n  }\n  const allHeights = [...Array(length).keys()].reduce((memo, i) => {\n    return memo + (capHeight / 2 + (0.5 - length) * lineHeights[i]) * fontSizes[i] / length;\n  }, 0);\n  return anchor === \"end\" ? dy + allHeights : dy + allHeights / 2 + capHeight / 2 * lineHeights[length - 1] * fontSizes[length - 1];\n};\nconst getTransform = (props, x, y) => {\n  const {\n    polar\n  } = props;\n  const style = getSingleValue(props.style);\n  const defaultAngle = polar ? LabelHelpers.getPolarAngle(props) : 0;\n  const baseAngle = style.angle === undefined ? Helpers.evaluateProp(props.angle, props) : style.angle;\n  const angle = baseAngle === undefined ? defaultAngle : baseAngle;\n  const transform = props.transform || style.transform;\n  const transformPart = transform && Helpers.evaluateProp(transform, props);\n  const rotatePart = angle && {\n    rotate: [angle, x, y]\n  };\n  return transformPart || angle ? Style.toTransformString(transformPart, rotatePart) : undefined;\n};\nconst getXCoordinate = (calculatedProps, labelSizeWidth) => {\n  const {\n    direction,\n    textAnchor,\n    x,\n    dx\n  } = calculatedProps;\n  if (direction === \"rtl\") {\n    return x - labelSizeWidth;\n  }\n  switch (textAnchor) {\n    case \"middle\":\n      return Math.round(x - labelSizeWidth / 2);\n    case \"end\":\n      return Math.round(x - labelSizeWidth);\n    default:\n      // start\n      return x + (dx || 0);\n  }\n};\nconst getYCoordinate = (calculatedProps, textHeight) => {\n  const {\n    verticalAnchor,\n    y,\n    originalDy = 0\n  } = calculatedProps;\n  const offset = y + originalDy;\n  switch (verticalAnchor) {\n    case \"start\":\n      return Math.floor(offset);\n    case \"end\":\n      return Math.ceil(offset - textHeight);\n    default:\n      // middle\n      return Math.floor(offset - textHeight / 2);\n  }\n};\nconst getFullBackground = (calculatedProps, tspanValues) => {\n  const {\n    dx = 0,\n    transform,\n    backgroundComponent,\n    backgroundStyle,\n    inline,\n    backgroundPadding,\n    capHeight\n  } = calculatedProps;\n  const textSizes = tspanValues.map(tspan => {\n    return tspan.textSize;\n  });\n  const height = inline ? Math.max(...textSizes.map(size => size.height)) : textSizes.reduce((memo, size, i) => {\n    const capHeightAdjustment = i ? 0 : capHeight / 2;\n    return memo + size.height * (tspanValues[i].lineHeight - capHeightAdjustment);\n  }, 0);\n  const width = inline ? textSizes.reduce((memo, size, index) => {\n    const offset = index ? dx : 0;\n    return memo + size.width + offset;\n  }, 0) : Math.max(...textSizes.map(size => size.width));\n  const xCoordinate = getXCoordinate(calculatedProps, width);\n  const yCoordinate = getYCoordinate(calculatedProps, height);\n  const backgroundProps = {\n    key: \"background\",\n    height: height + backgroundPadding.top + backgroundPadding.bottom,\n    style: backgroundStyle,\n    transform,\n    width: width + backgroundPadding.left + backgroundPadding.right,\n    x: inline ? xCoordinate - backgroundPadding.left : xCoordinate + dx - backgroundPadding.left,\n    y: yCoordinate\n  };\n  return /*#__PURE__*/React.cloneElement(backgroundComponent, _defaults({}, backgroundComponent.props, backgroundProps));\n};\nconst getInlineXOffset = (calculatedProps, textElements, index) => {\n  const {\n    textAnchor\n  } = calculatedProps;\n  const widths = textElements.map(t => t.widthWithPadding);\n  const totalWidth = widths.reduce((memo, width) => memo + width, 0);\n  const centerOffset = -totalWidth / 2;\n  switch (textAnchor) {\n    case \"start\":\n      return widths.reduce((memo, width, i) => i < index ? memo + width : memo, 0);\n    case \"end\":\n      return widths.reduce((memo, width, i) => i > index ? memo - width : memo, 0);\n    default:\n      // middle\n      return widths.reduce((memo, width, i) => {\n        const offsetWidth = i < index ? width : 0;\n        return i === index ? memo + width / 2 : memo + offsetWidth;\n      }, centerOffset);\n  }\n};\nconst getChildBackgrounds = (calculatedProps, tspanValues) => {\n  const {\n    dy,\n    dx,\n    transform,\n    backgroundStyle,\n    backgroundPadding,\n    backgroundComponent,\n    inline,\n    y\n  } = calculatedProps;\n  const textElements = tspanValues.map((current, i) => {\n    const previous = getSingleValue(tspanValues, i - 1);\n    const labelSize = current.textSize;\n    const totalLineHeight = current.fontSize * current.lineHeight;\n    const textHeight = Math.ceil(totalLineHeight);\n    const padding = getSingleValue(backgroundPadding, i);\n    const prevPadding = getSingleValue(backgroundPadding, i - 1);\n    const xOffset = inline ? dx || 0 : 0;\n    const childDy = i && !inline ? previous.fontSize * previous.lineHeight + prevPadding.top + prevPadding.bottom : dy - totalLineHeight * 0.5 - (current.fontSize - current.capHeight);\n    return {\n      textHeight,\n      labelSize,\n      heightWithPadding: textHeight + padding.top + padding.bottom,\n      widthWithPadding: labelSize.width + padding.left + padding.right + xOffset,\n      y,\n      fontSize: current.fontSize,\n      dy: childDy\n    };\n  });\n  return textElements.map((textElement, i) => {\n    const xCoordinate = getXCoordinate(calculatedProps, textElement.labelSize.width);\n    const yCoordinate = textElements.slice(0, i + 1).reduce((prev, curr) => {\n      return prev + curr.dy;\n    }, y);\n    const padding = getSingleValue(backgroundPadding, i);\n    const height = textElement.heightWithPadding;\n    const xCoord = inline ? getInlineXOffset(calculatedProps, textElements, i) + xCoordinate - padding.left : xCoordinate;\n    const yCoord = inline ? getYCoordinate(calculatedProps, height) - padding.top : yCoordinate;\n    const backgroundProps = {\n      key: `tspan-background-${i}`,\n      height,\n      style: getSingleValue(backgroundStyle, i),\n      width: textElement.widthWithPadding,\n      transform,\n      x: xCoord - padding.left,\n      y: yCoord\n    };\n    return /*#__PURE__*/React.cloneElement(backgroundComponent, _defaults({}, backgroundComponent.props, backgroundProps));\n  });\n};\nconst getBackgroundElement = (calculatedProps, tspanValues) => {\n  return shouldUseMultilineBackgrounds(calculatedProps) ? getChildBackgrounds(calculatedProps, tspanValues) : getFullBackground(calculatedProps, tspanValues);\n};\nconst calculateSpanDy = (tspanValues, i, calculatedProps) => {\n  const current = getSingleValue(tspanValues, i);\n  const previous = getSingleValue(tspanValues, i - 1);\n  const previousHeight = previous.fontSize * previous.lineHeight;\n  const currentHeight = current.fontSize * current.lineHeight;\n  const previousCaps = previous.fontSize - previous.capHeight;\n  const currentCaps = current.fontSize - current.capHeight;\n  const textHeight = previousHeight - previous.fontSize / 2 + current.fontSize / 2 - previousHeight / 2 + currentHeight / 2 - currentCaps / 2 + previousCaps / 2;\n  return shouldUseMultilineBackgrounds(calculatedProps) ? textHeight + current.backgroundPadding.top + previous.backgroundPadding.bottom : textHeight;\n};\nconst getTSpanDy = (tspanValues, calculatedProps, i) => {\n  const {\n    inline\n  } = calculatedProps;\n  const current = getSingleValue(tspanValues, i);\n  if (i && !inline) {\n    return calculateSpanDy(tspanValues, i, calculatedProps);\n  } else if (inline) {\n    return i === 0 ? current.backgroundPadding.top : undefined;\n  }\n  return current.backgroundPadding.top;\n};\nconst evaluateProps = props => {\n  /* Potential evaluated props are\n    1) text\n    2) style\n    3) everything else\n  */\n  const text = getContent(props.text, props);\n  const style = getStyles(props.style, Object.assign({}, props, {\n    text\n  }));\n  const backgroundStyle = getBackgroundStyles(props.backgroundStyle, Object.assign({}, props, {\n    text,\n    style\n  }));\n  const backgroundPadding = getBackgroundPadding(Object.assign({}, props, {\n    text,\n    style,\n    backgroundStyle\n  }));\n  const id = Helpers.evaluateProp(props.id, props);\n  return Object.assign({}, props, {\n    backgroundStyle,\n    backgroundPadding,\n    style,\n    text,\n    id\n  });\n};\nconst getCalculatedProps = props => {\n  const ariaLabel = Helpers.evaluateProp(props.ariaLabel, props);\n  const style = getSingleValue(props.style);\n  const lineHeight = getLineHeight(props);\n  const direction = props.direction ? Helpers.evaluateProp(props.direction, props) : \"inherit\";\n  const textAnchor = props.textAnchor ? Helpers.evaluateProp(props.textAnchor, props) : style.textAnchor || \"start\";\n  const verticalAnchor = props.verticalAnchor ? Helpers.evaluateProp(props.verticalAnchor, props) : style.verticalAnchor || \"middle\";\n  const dx = props.dx ? Helpers.evaluateProp(props.dx, props) : 0;\n  const dy = getDy(props, verticalAnchor, lineHeight);\n  const x = props.x !== undefined ? props.x : getPosition(props, \"x\");\n  const y = props.y !== undefined ? props.y : getPosition(props, \"y\");\n  const transform = getTransform(props, x, y);\n  return Object.assign({}, props, {\n    ariaLabel,\n    lineHeight,\n    direction,\n    textAnchor,\n    verticalAnchor,\n    dx,\n    dy,\n    originalDy: Helpers.evaluateProp(props.dy, props),\n    transform,\n    x,\n    y\n  });\n};\nconst renderLabel = (calculatedProps, tspanValues) => {\n  const {\n    ariaLabel,\n    inline,\n    className,\n    title,\n    events,\n    direction,\n    text,\n    textAnchor,\n    dx,\n    dy,\n    transform,\n    x,\n    y,\n    desc,\n    id,\n    tabIndex,\n    tspanComponent,\n    textComponent\n  } = calculatedProps;\n  const userProps = UserProps.getSafeUserProps(calculatedProps);\n  const textProps = {\n    \"aria-label\": ariaLabel,\n    key: \"text\",\n    ...events,\n    direction,\n    dx,\n    x,\n    y: y + dy,\n    transform,\n    className,\n    title,\n    desc: Helpers.evaluateProp(desc, calculatedProps),\n    tabIndex: Helpers.evaluateProp(tabIndex, calculatedProps),\n    id,\n    ...userProps\n  };\n  const tspans = text.map((line, i) => {\n    const currentStyle = tspanValues[i].style;\n    const tspanProps = {\n      key: `${id}-key-${i}`,\n      x: !inline ? x : undefined,\n      dx: inline ? dx + tspanValues[i].backgroundPadding.left : dx,\n      dy: getTSpanDy(tspanValues, calculatedProps, i),\n      textAnchor: currentStyle.textAnchor || textAnchor,\n      style: currentStyle,\n      children: line\n    };\n    return /*#__PURE__*/React.cloneElement(tspanComponent, tspanProps);\n  });\n  return /*#__PURE__*/React.cloneElement(textComponent, textProps, tspans);\n};\nconst defaultProps = {\n  backgroundComponent: /*#__PURE__*/React.createElement(Rect, null),\n  groupComponent: /*#__PURE__*/React.createElement(\"g\", null),\n  direction: \"inherit\",\n  textComponent: /*#__PURE__*/React.createElement(Text, null),\n  tspanComponent: /*#__PURE__*/React.createElement(TSpan, null),\n  capHeight: 0.71,\n  // Magic number from d3.\n  lineHeight: 1\n};\nexport const VictoryLabel = initialProps => {\n  const props = evaluateProps(_defaults({}, initialProps, defaultProps));\n  if (props.text === null || props.text === undefined) {\n    return null;\n  }\n  const calculatedProps = getCalculatedProps(props);\n  const {\n    text,\n    style,\n    capHeight,\n    backgroundPadding,\n    lineHeight\n  } = calculatedProps;\n  const tspanValues = text.map((line, i) => {\n    const currentStyle = getSingleValue(style, i);\n    const capHeightPx = TextSize.convertLengthToPixels(`${capHeight}em`, currentStyle.fontSize);\n    const currentLineHeight = getSingleValue(lineHeight, i);\n    return {\n      style: currentStyle,\n      fontSize: currentStyle.fontSize || defaultStyles.fontSize,\n      capHeight: capHeightPx,\n      text: line,\n      // TODO: This looks like a bug:\n      textSize: TextSize.approximateTextSize(line, currentStyle),\n      lineHeight: currentLineHeight,\n      backgroundPadding: getSingleValue(backgroundPadding, i)\n    };\n  });\n  const label = renderLabel(calculatedProps, tspanValues);\n  if (props.backgroundStyle) {\n    const backgroundElement = getBackgroundElement(calculatedProps, tspanValues);\n    const children = [backgroundElement, label];\n    const backgroundWithLabel = /*#__PURE__*/React.cloneElement(props.groupComponent, {}, children);\n    return props.renderInPortal ? /*#__PURE__*/React.createElement(VictoryPortal, null, backgroundWithLabel) : backgroundWithLabel;\n  }\n  return props.renderInPortal ? /*#__PURE__*/React.createElement(VictoryPortal, null, label) : label;\n};\nVictoryLabel.displayName = \"VictoryLabel\";\nVictoryLabel.role = \"label\";\nVictoryLabel.defaultStyles = defaultStyles;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}