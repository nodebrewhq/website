{"ast":null,"code":"import React from \"react\";\nimport * as d3Ease from \"victory-vendor/d3-ease\";\nimport { victoryInterpolator } from \"./util\";\nimport TimerContext from \"../victory-util/timer-context\";\n\n/**\n * Single animation object to interpolate\n */\n\n/**\n * Animation styles to interpolate\n */\n\n/** d3-ease changed the naming scheme for ease from \"linear\" -> \"easeLinear\" etc. */\nconst formatAnimationName = name => {\n  const capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);\n  return `ease${capitalizedName}`;\n};\nconst DEFAULT_DURATION = 1000;\nexport const VictoryAnimation = _ref => {\n  let {\n    duration = DEFAULT_DURATION,\n    easing = \"quadInOut\",\n    delay = 0,\n    data,\n    children,\n    onEnd\n  } = _ref;\n  const [state, setState] = React.useState({\n    data: Array.isArray(data) ? data[0] : data,\n    animationInfo: {\n      progress: 0,\n      animating: false\n    }\n  });\n  const timer = React.useContext(TimerContext).animationTimer;\n  const queue = React.useRef(Array.isArray(data) ? data.slice(1) : []);\n  const interpolator = React.useRef(null);\n  const loopID = React.useRef(undefined);\n  const ease = d3Ease[formatAnimationName(easing)];\n  React.useEffect(() => {\n    // Length check prevents us from triggering `onEnd` in `traverseQueue`.\n    if (queue.current.length) {\n      traverseQueue();\n    }\n\n    // Clean up the animation loop\n    return () => {\n      if (loopID.current) {\n        timer.unsubscribe(loopID.current);\n      } else {\n        timer.stop();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    // If the previous animation didn't finish, force it to complete before starting a new one\n    if (interpolator.current && state.animationInfo && state.animationInfo.progress < 1) {\n      setState({\n        data: interpolator.current(1),\n        animationInfo: {\n          progress: 1,\n          animating: false,\n          terminating: true\n        }\n      });\n    } else {\n      // Cancel existing loop if it exists\n      timer.unsubscribe(loopID.current);\n      // Set the tween queue to the new data\n      queue.current = Array.isArray(data) ? data : [data];\n      // Start traversing the tween queue\n      traverseQueue();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n  const traverseQueue = () => {\n    if (queue.current.length) {\n      const nextData = queue.current[0];\n\n      // Compare cached version to next props\n      interpolator.current = victoryInterpolator(state.data, nextData);\n\n      // Reset step to zero\n      if (delay) {\n        setTimeout(() => {\n          loopID.current = timer.subscribe(functionToBeRunEachFrame, duration);\n        }, delay);\n      } else {\n        loopID.current = timer.subscribe(functionToBeRunEachFrame, duration);\n      }\n    } else if (onEnd) {\n      onEnd();\n    }\n  };\n  const functionToBeRunEachFrame = elapsed => {\n    if (!interpolator.current) return;\n\n    // Step can generate imprecise values, sometimes greater than 1\n    // if this happens set the state to 1 and return, cancelling the timer\n    const step = duration ? elapsed / duration : 1;\n    if (step >= 1) {\n      setState({\n        data: interpolator.current(1),\n        animationInfo: {\n          progress: 1,\n          animating: false,\n          terminating: true\n        }\n      });\n      if (loopID.current) {\n        timer.unsubscribe(loopID.current);\n      }\n      queue.current.shift();\n      traverseQueue();\n      return;\n    }\n\n    // If we're not at the end of the timer, set the state by passing\n    // current step value that's transformed by the ease function to the\n    // interpolator, which is cached for performance whenever props are received\n    setState({\n      data: interpolator.current(ease(step)),\n      animationInfo: {\n        progress: step,\n        animating: step < 1\n      }\n    });\n  };\n  return children(state.data, state.animationInfo);\n};","map":{"version":3,"names":["React","d3Ease","victoryInterpolator","TimerContext","formatAnimationName","name","capitalizedName","charAt","toUpperCase","slice","DEFAULT_DURATION","VictoryAnimation","_ref","duration","easing","delay","data","children","onEnd","state","setState","useState","Array","isArray","animationInfo","progress","animating","timer","useContext","animationTimer","queue","useRef","interpolator","loopID","undefined","ease","useEffect","current","length","traverseQueue","unsubscribe","stop","terminating","nextData","setTimeout","subscribe","functionToBeRunEachFrame","elapsed","step","shift"],"sources":["/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/node_modules/victory-core/es/victory-animation/victory-animation.js"],"sourcesContent":["import React from \"react\";\nimport * as d3Ease from \"victory-vendor/d3-ease\";\nimport { victoryInterpolator } from \"./util\";\nimport TimerContext from \"../victory-util/timer-context\";\n\n/**\n * Single animation object to interpolate\n */\n\n/**\n * Animation styles to interpolate\n */\n\n/** d3-ease changed the naming scheme for ease from \"linear\" -> \"easeLinear\" etc. */\nconst formatAnimationName = name => {\n  const capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);\n  return `ease${capitalizedName}`;\n};\nconst DEFAULT_DURATION = 1000;\nexport const VictoryAnimation = _ref => {\n  let {\n    duration = DEFAULT_DURATION,\n    easing = \"quadInOut\",\n    delay = 0,\n    data,\n    children,\n    onEnd\n  } = _ref;\n  const [state, setState] = React.useState({\n    data: Array.isArray(data) ? data[0] : data,\n    animationInfo: {\n      progress: 0,\n      animating: false\n    }\n  });\n  const timer = React.useContext(TimerContext).animationTimer;\n  const queue = React.useRef(Array.isArray(data) ? data.slice(1) : []);\n  const interpolator = React.useRef(null);\n  const loopID = React.useRef(undefined);\n  const ease = d3Ease[formatAnimationName(easing)];\n  React.useEffect(() => {\n    // Length check prevents us from triggering `onEnd` in `traverseQueue`.\n    if (queue.current.length) {\n      traverseQueue();\n    }\n\n    // Clean up the animation loop\n    return () => {\n      if (loopID.current) {\n        timer.unsubscribe(loopID.current);\n      } else {\n        timer.stop();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    // If the previous animation didn't finish, force it to complete before starting a new one\n    if (interpolator.current && state.animationInfo && state.animationInfo.progress < 1) {\n      setState({\n        data: interpolator.current(1),\n        animationInfo: {\n          progress: 1,\n          animating: false,\n          terminating: true\n        }\n      });\n    } else {\n      // Cancel existing loop if it exists\n      timer.unsubscribe(loopID.current);\n      // Set the tween queue to the new data\n      queue.current = Array.isArray(data) ? data : [data];\n      // Start traversing the tween queue\n      traverseQueue();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n  const traverseQueue = () => {\n    if (queue.current.length) {\n      const nextData = queue.current[0];\n\n      // Compare cached version to next props\n      interpolator.current = victoryInterpolator(state.data, nextData);\n\n      // Reset step to zero\n      if (delay) {\n        setTimeout(() => {\n          loopID.current = timer.subscribe(functionToBeRunEachFrame, duration);\n        }, delay);\n      } else {\n        loopID.current = timer.subscribe(functionToBeRunEachFrame, duration);\n      }\n    } else if (onEnd) {\n      onEnd();\n    }\n  };\n  const functionToBeRunEachFrame = elapsed => {\n    if (!interpolator.current) return;\n\n    // Step can generate imprecise values, sometimes greater than 1\n    // if this happens set the state to 1 and return, cancelling the timer\n    const step = duration ? elapsed / duration : 1;\n    if (step >= 1) {\n      setState({\n        data: interpolator.current(1),\n        animationInfo: {\n          progress: 1,\n          animating: false,\n          terminating: true\n        }\n      });\n      if (loopID.current) {\n        timer.unsubscribe(loopID.current);\n      }\n      queue.current.shift();\n      traverseQueue();\n      return;\n    }\n\n    // If we're not at the end of the timer, set the state by passing\n    // current step value that's transformed by the ease function to the\n    // interpolator, which is cached for performance whenever props are received\n    setState({\n      data: interpolator.current(ease(step)),\n      animationInfo: {\n        progress: step,\n        animating: step < 1\n      }\n    });\n  };\n  return children(state.data, state.animationInfo);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}