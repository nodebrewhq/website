{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Query, DataManager, Predicate } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * data module is used to generate query and data source.\n *\n * @private\n */\nvar Data = /** @class */function () {\n  /**\n   * Constructor for data module\n   *\n   * @param {Schedule} parent Accepts the schedule element instance\n   * @param {Object | DataManager} dataSource Accepts the datasource as JSON objects or DataManager\n   * @param {Query} query Accepts the query to process the data\n   * @private\n   */\n  function Data(parent, dataSource, query) {\n    this.parent = parent;\n    this.initDataManager(dataSource, query);\n  }\n  /**\n   * The function used to initialize dataManager and query\n   *\n   * @param {Object | DataManager} dataSource Accepts the datasource as JSON objects or DataManager\n   * @param {Query} query Accepts the query to process the data\n   * @returns {void}\n   * @private\n   */\n  Data.prototype.initDataManager = function (dataSource, query) {\n    this.dataManager = dataSource instanceof DataManager ? dataSource : new DataManager(dataSource);\n    this.query = query instanceof Query ? query : new Query();\n  };\n  /**\n   * The function used to generate updated Query from schedule model\n   *\n   * @param {Date} startDate Accepts the start date\n   * @param {Date} endDate Accepts the end date\n   * @returns {void}\n   * @private\n   */\n  Data.prototype.generateQuery = function (startDate, endDate) {\n    var query = this.query.clone();\n    if (this.parent && startDate && endDate) {\n      if (this.parent.activeViewOptions && this.parent.activeViewOptions.enableLazyLoading && !isNullOrUndefined(this.parent.activeViewOptions.group.resources) && this.parent.activeViewOptions.group.resources.length > 0 && this.parent.resourceBase && this.parent.resourceBase.resourceCollection.length > 0 && this.parent.resourceBase.renderedResources.length > 0) {\n        var resIdCollection_1 = [];\n        this.parent.resourceBase.resourceCollection.forEach(function () {\n          return resIdCollection_1.push([]);\n        });\n        this.parent.resourceBase.renderedResources.forEach(function (resource) {\n          resIdCollection_1.forEach(function (resId, index) {\n            var groupId = resource.groupOrder[parseInt(index.toString(), 10)];\n            if (groupId && resId.indexOf(groupId) < 0) {\n              resId.push(groupId);\n            }\n          });\n        });\n        this.parent.resourceBase.resourceCollection.forEach(function (resource, index) {\n          query.addParams(resource.field, resIdCollection_1[parseInt(index.toString(), 10)].toString());\n        });\n      }\n      if (this.parent.timezone) {\n        startDate = this.parent.tzModule.remove(new Date(+startDate.getTime()), this.parent.timezone);\n        endDate = this.parent.tzModule.remove(new Date(+endDate.getTime()), this.parent.timezone);\n      }\n      if (this.parent.eventSettings.includeFiltersInQuery) {\n        var dateQuery = this.getStartEndQuery(startDate, endDate);\n        var recurrenceQuery = new Predicate(this.parent.eventFields.recurrenceRule, 'notequal', null).and(new Predicate(this.parent.eventFields.recurrenceRule, 'notequal', ''));\n        return query.where(dateQuery.or(recurrenceQuery));\n      }\n      query.addParams('StartDate', startDate.toISOString());\n      query.addParams('EndDate', endDate.toISOString());\n    }\n    return query;\n  };\n  /**\n   * The function used to generate updated Query from schedule model\n   *\n   * @param {Date} startDate Accepts the start date\n   * @param {Date} endDate Accepts the end date\n   * @returns {void}\n   * @private\n   */\n  Data.prototype.getStartEndQuery = function (startDate, endDate) {\n    var fieldMapping = this.parent.eventFields;\n    var dateQuery = new Predicate(fieldMapping.startTime, 'greaterthanorequal', startDate).and(new Predicate(fieldMapping.endTime, 'greaterthanorequal', startDate)).and(new Predicate(fieldMapping.startTime, 'lessthan', endDate)).or(new Predicate(fieldMapping.startTime, 'lessthanorequal', startDate).and(new Predicate(fieldMapping.endTime, 'greaterthan', startDate)));\n    return dateQuery;\n  };\n  /**\n   * The function used to get dataSource by executing given Query\n   *\n   * @param  {Query} query - A Query that specifies to generate dataSource\n   * @returns {void}\n   * @private\n   */\n  Data.prototype.getData = function (query) {\n    return this.dataManager.executeQuery(query);\n  };\n  /**\n   * To destroy the crud module.\n   *\n   * @returns {void}\n   * @private\n   */\n  Data.prototype.destroy = function () {\n    this.dataManager = null;\n    this.query = null;\n  };\n  return Data;\n}();\nexport { Data };","map":{"version":3,"names":["Query","DataManager","Predicate","isNullOrUndefined","Data","parent","dataSource","query","initDataManager","prototype","dataManager","generateQuery","startDate","endDate","clone","activeViewOptions","enableLazyLoading","group","resources","length","resourceBase","resourceCollection","renderedResources","resIdCollection_1","forEach","push","resource","resId","index","groupId","groupOrder","parseInt","toString","indexOf","addParams","field","timezone","tzModule","remove","Date","getTime","eventSettings","includeFiltersInQuery","dateQuery","getStartEndQuery","recurrenceQuery","eventFields","recurrenceRule","and","where","or","toISOString","fieldMapping","startTime","endTime","getData","executeQuery","destroy"],"sources":["/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/node_modules/@syncfusion/ej2-schedule/src/schedule/actions/data.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Query, DataManager, Predicate } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * data module is used to generate query and data source.\n *\n * @private\n */\nvar Data = /** @class */ (function () {\n    /**\n     * Constructor for data module\n     *\n     * @param {Schedule} parent Accepts the schedule element instance\n     * @param {Object | DataManager} dataSource Accepts the datasource as JSON objects or DataManager\n     * @param {Query} query Accepts the query to process the data\n     * @private\n     */\n    function Data(parent, dataSource, query) {\n        this.parent = parent;\n        this.initDataManager(dataSource, query);\n    }\n    /**\n     * The function used to initialize dataManager and query\n     *\n     * @param {Object | DataManager} dataSource Accepts the datasource as JSON objects or DataManager\n     * @param {Query} query Accepts the query to process the data\n     * @returns {void}\n     * @private\n     */\n    Data.prototype.initDataManager = function (dataSource, query) {\n        this.dataManager = dataSource instanceof DataManager ? dataSource : new DataManager(dataSource);\n        this.query = query instanceof Query ? query : new Query();\n    };\n    /**\n     * The function used to generate updated Query from schedule model\n     *\n     * @param {Date} startDate Accepts the start date\n     * @param {Date} endDate Accepts the end date\n     * @returns {void}\n     * @private\n     */\n    Data.prototype.generateQuery = function (startDate, endDate) {\n        var query = this.query.clone();\n        if (this.parent && startDate && endDate) {\n            if (this.parent.activeViewOptions && this.parent.activeViewOptions.enableLazyLoading &&\n                !isNullOrUndefined(this.parent.activeViewOptions.group.resources) &&\n                this.parent.activeViewOptions.group.resources.length > 0 && this.parent.resourceBase &&\n                this.parent.resourceBase.resourceCollection.length > 0 && this.parent.resourceBase.renderedResources.length > 0) {\n                var resIdCollection_1 = [];\n                this.parent.resourceBase.resourceCollection.forEach(function () { return resIdCollection_1.push([]); });\n                this.parent.resourceBase.renderedResources.forEach(function (resource) {\n                    resIdCollection_1.forEach(function (resId, index) {\n                        var groupId = resource.groupOrder[parseInt(index.toString(), 10)];\n                        if (groupId && resId.indexOf(groupId) < 0) {\n                            resId.push(groupId);\n                        }\n                    });\n                });\n                this.parent.resourceBase.resourceCollection.forEach(function (resource, index) {\n                    query.addParams(resource.field, resIdCollection_1[parseInt(index.toString(), 10)].toString());\n                });\n            }\n            if (this.parent.timezone) {\n                startDate = this.parent.tzModule.remove(new Date(+startDate.getTime()), this.parent.timezone);\n                endDate = this.parent.tzModule.remove(new Date(+endDate.getTime()), this.parent.timezone);\n            }\n            if (this.parent.eventSettings.includeFiltersInQuery) {\n                var dateQuery = this.getStartEndQuery(startDate, endDate);\n                var recurrenceQuery = new Predicate(this.parent.eventFields.recurrenceRule, 'notequal', null).and(new Predicate(this.parent.eventFields.recurrenceRule, 'notequal', ''));\n                return query.where(dateQuery.or(recurrenceQuery));\n            }\n            query.addParams('StartDate', startDate.toISOString());\n            query.addParams('EndDate', endDate.toISOString());\n        }\n        return query;\n    };\n    /**\n     * The function used to generate updated Query from schedule model\n     *\n     * @param {Date} startDate Accepts the start date\n     * @param {Date} endDate Accepts the end date\n     * @returns {void}\n     * @private\n     */\n    Data.prototype.getStartEndQuery = function (startDate, endDate) {\n        var fieldMapping = this.parent.eventFields;\n        var dateQuery = new Predicate(fieldMapping.startTime, 'greaterthanorequal', startDate)\n            .and(new Predicate(fieldMapping.endTime, 'greaterthanorequal', startDate))\n            .and(new Predicate(fieldMapping.startTime, 'lessthan', endDate))\n            .or(new Predicate(fieldMapping.startTime, 'lessthanorequal', startDate)\n            .and(new Predicate(fieldMapping.endTime, 'greaterthan', startDate)));\n        return dateQuery;\n    };\n    /**\n     * The function used to get dataSource by executing given Query\n     *\n     * @param  {Query} query - A Query that specifies to generate dataSource\n     * @returns {void}\n     * @private\n     */\n    Data.prototype.getData = function (query) {\n        return this.dataManager.executeQuery(query);\n    };\n    /**\n     * To destroy the crud module.\n     *\n     * @returns {void}\n     * @private\n     */\n    Data.prototype.destroy = function () {\n        this.dataManager = null;\n        this.query = null;\n    };\n    return Data;\n}());\nexport { Data };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}