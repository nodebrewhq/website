{"ast":null,"code":"var _jsxFileName = \"/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/src/components/Schedule.js\",\n  _s = $RefreshSig$();\n// Calendar.jsx\nimport React, { useState } from 'react';\nimport { Box, Heading, Container, useColorModeValue } from '@chakra-ui/react';\nimport Calendar from 'react-calendar';\nimport './style.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst eventList = [{\n  date: '2023-06-09',\n  event: 'Induction + Team Building'\n}, {\n  date: '2023-06-16',\n  event: 'Familiarize with Git, GitHub, Figma'\n}, {\n  date: '2023-06-23',\n  event: 'Researching Projects and Domains'\n}, {\n  date: '2023-06-30',\n  event: 'Group Formation and UX/UI Session'\n}, {\n  date: '2023-07-07',\n  event: 'Product-Market Fit and Product Development'\n}, {\n  date: '2023-07-14',\n  event: 'Meeting with Development Mentor'\n}, {\n  date: '2023-07-21',\n  event: 'Mentor Session + Resume Building'\n}, {\n  date: '2023-07-28',\n  event: 'Mentor Session + LinkedIn Building'\n}, {\n  date: '2023-08-04',\n  event: 'Finalizing Project and Deployment'\n}, {\n  date: '2023-08-11',\n  event: 'Project Showcasing'\n}];\nconst InteractiveCalendar = () => {\n  _s();\n  const [value, setValue] = useState(new Date());\n  const bg = useColorModeValue('white', 'gray.800');\n  const textColor = useColorModeValue('gray.700', 'gray.300');\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    const event = eventList.find(event => new Date(event.date).toDateString() === date.toDateString());\n    return event ? /*#__PURE__*/_jsxDEV(Box, {\n      mt: 1,\n      color: \"blue.500\",\n      fontWeight: \"bold\",\n      fontSize: \"xs\",\n      children: event.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this) : null;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"container.md\",\n    py: 10,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h1\",\n      mb: 8,\n      color: textColor,\n      children: \"Interactive Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      bg: bg,\n      p: 4,\n      borderRadius: \"md\",\n      boxShadow: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: setValue,\n        value: value,\n        tileContent: tileContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractiveCalendar, \"QcnUkL4figmsxjF7Xnqe69R/7kc=\", false, function () {\n  return [useColorModeValue, useColorModeValue];\n});\n_c = InteractiveCalendar;\nexport default InteractiveCalendar;\nvar _c;\n$RefreshReg$(_c, \"InteractiveCalendar\");","map":{"version":3,"names":["React","useState","Box","Heading","Container","useColorModeValue","Calendar","jsxDEV","_jsxDEV","eventList","date","event","InteractiveCalendar","_s","value","setValue","Date","bg","textColor","tileContent","view","find","toDateString","mt","color","fontWeight","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","maxW","py","as","mb","p","borderRadius","boxShadow","onChange","_c","$RefreshReg$"],"sources":["/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/src/components/Schedule.js"],"sourcesContent":["// Calendar.jsx\nimport React, { useState } from 'react';\nimport { Box, Heading, Container, useColorModeValue } from '@chakra-ui/react';\nimport Calendar from 'react-calendar';\nimport './style.css'\nimport 'react-calendar/dist/Calendar.css';\n\nconst eventList = [\n  { date: '2023-06-09', event: 'Induction + Team Building' },\n  { date: '2023-06-16', event: 'Familiarize with Git, GitHub, Figma' },\n  { date: '2023-06-23', event: 'Researching Projects and Domains' },\n  { date: '2023-06-30', event: 'Group Formation and UX/UI Session' },\n  { date: '2023-07-07', event: 'Product-Market Fit and Product Development' },\n  { date: '2023-07-14', event: 'Meeting with Development Mentor' },\n  { date: '2023-07-21', event: 'Mentor Session + Resume Building' },\n  { date: '2023-07-28', event: 'Mentor Session + LinkedIn Building' },\n  { date: '2023-08-04', event: 'Finalizing Project and Deployment' },\n  { date: '2023-08-11', event: 'Project Showcasing' },\n];\n\nconst InteractiveCalendar = () => {\n  const [value, setValue] = useState(new Date());\n  const bg = useColorModeValue('white', 'gray.800');\n  const textColor = useColorModeValue('gray.700', 'gray.300');\n\n  const tileContent = ({ date, view }) => {\n    const event = eventList.find(\n      (event) => new Date(event.date).toDateString() === date.toDateString()\n    );\n    return event ? (\n      <Box mt={1} color=\"blue.500\" fontWeight=\"bold\" fontSize=\"xs\">\n        {event.event}\n      </Box>\n    ) : null;\n  };\n\n  return (\n    <Container maxW=\"container.md\" py={10}>\n      <Heading as=\"h1\" mb={8} color={textColor}>\n        Interactive Calendar\n      </Heading>\n      <Box bg={bg} p={4} borderRadius=\"md\" boxShadow=\"md\">\n        <Calendar\n          onChange={setValue}\n          value={value}\n          tileContent={tileContent}\n        />\n      </Box>\n    </Container>\n  );\n};\n\nexport default InteractiveCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}