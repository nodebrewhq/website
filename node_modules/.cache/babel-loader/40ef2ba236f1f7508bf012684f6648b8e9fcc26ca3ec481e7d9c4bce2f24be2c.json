{"ast":null,"code":"import React from \"react\";\nimport { getBarPath, getBarWidth, getCornerRadius, getPolarBarPath, getStyle } from \"victory-bar\";\nimport { useCanvasContext } from \"./hooks/use-canvas-context\";\nconst evaluateProps = props => {\n  /**\n   * Potential evaluated props of following must be evaluated in this order:\n   * 1) `style`\n   * 2) `barWidth`\n   * 3) `cornerRadius`\n   */\n  const style = getStyle(props.style, props);\n  const barWidth = getBarWidth(props.barWidth, Object.assign({}, props, {\n    style\n  }));\n  const cornerRadius = getCornerRadius(props.cornerRadius, Object.assign({}, props, {\n    style,\n    barWidth\n  }));\n  const modifiedProps = Object.assign({}, props, {\n    style,\n    barWidth,\n    cornerRadius\n  });\n  return modifiedProps;\n};\nconst usePreviousValue = value => {\n  const ref = React.useRef();\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport const CanvasBar = props => {\n  const {\n    canvasRef\n  } = useCanvasContext();\n  const modifiedProps = evaluateProps(props);\n  const {\n    polar,\n    style,\n    barWidth,\n    cornerRadius,\n    origin\n  } = modifiedProps;\n  const path2d = React.useMemo(() => {\n    const p = polar ? getPolarBarPath(modifiedProps, cornerRadius) : getBarPath(modifiedProps, barWidth, cornerRadius);\n    return new Path2D(p);\n  }, [polar, barWidth, cornerRadius, modifiedProps]);\n  const previousPath = usePreviousValue(path2d);\n  const draw = React.useCallback((ctx, path) => {\n    ctx.fillStyle = style.fill;\n    ctx.strokeStyle = style.stroke;\n    ctx.globalAlpha = style.fillOpacity;\n    ctx.lineWidth = style.strokeWidth;\n    if (polar) {\n      ctx.translate(origin?.x || 0, origin?.y || 0);\n    }\n    ctx.fill(path);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }, [style, origin, polar]);\n\n  // This will clear the previous bar without clearing the entire canvas\n  const clearPreviousPath = React.useCallback(ctx => {\n    if (previousPath) {\n      ctx.save();\n      // This ensures that the entire shape is erased\n      const strokeWidth = style.strokeWidth || 0;\n      ctx.lineWidth = strokeWidth + 2;\n      ctx.globalCompositeOperation = \"destination-out\";\n      draw(ctx, previousPath);\n      ctx.stroke(previousPath);\n      ctx.restore();\n    }\n  }, [draw, previousPath, style]);\n  React.useEffect(() => {\n    const ctx = canvasRef.current?.getContext(\"2d\");\n    if (!ctx) return;\n    clearPreviousPath(ctx);\n    draw(ctx, path2d);\n  }, [canvasRef, draw, polar, barWidth, cornerRadius, modifiedProps, path2d, clearPreviousPath]);\n  return null;\n};","map":{"version":3,"names":["React","getBarPath","getBarWidth","getCornerRadius","getPolarBarPath","getStyle","useCanvasContext","evaluateProps","props","style","barWidth","Object","assign","cornerRadius","modifiedProps","usePreviousValue","value","ref","useRef","useEffect","current","CanvasBar","canvasRef","polar","origin","path2d","useMemo","p","Path2D","previousPath","draw","useCallback","ctx","path","fillStyle","fill","strokeStyle","stroke","globalAlpha","fillOpacity","lineWidth","strokeWidth","translate","x","y","setTransform","clearPreviousPath","save","globalCompositeOperation","restore","getContext"],"sources":["/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/node_modules/victory-canvas/es/canvas-bar.js"],"sourcesContent":["import React from \"react\";\nimport { getBarPath, getBarWidth, getCornerRadius, getPolarBarPath, getStyle } from \"victory-bar\";\nimport { useCanvasContext } from \"./hooks/use-canvas-context\";\nconst evaluateProps = props => {\n  /**\n   * Potential evaluated props of following must be evaluated in this order:\n   * 1) `style`\n   * 2) `barWidth`\n   * 3) `cornerRadius`\n   */\n  const style = getStyle(props.style, props);\n  const barWidth = getBarWidth(props.barWidth, Object.assign({}, props, {\n    style\n  }));\n  const cornerRadius = getCornerRadius(props.cornerRadius, Object.assign({}, props, {\n    style,\n    barWidth\n  }));\n  const modifiedProps = Object.assign({}, props, {\n    style,\n    barWidth,\n    cornerRadius\n  });\n  return modifiedProps;\n};\nconst usePreviousValue = value => {\n  const ref = React.useRef();\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport const CanvasBar = props => {\n  const {\n    canvasRef\n  } = useCanvasContext();\n  const modifiedProps = evaluateProps(props);\n  const {\n    polar,\n    style,\n    barWidth,\n    cornerRadius,\n    origin\n  } = modifiedProps;\n  const path2d = React.useMemo(() => {\n    const p = polar ? getPolarBarPath(modifiedProps, cornerRadius) : getBarPath(modifiedProps, barWidth, cornerRadius);\n    return new Path2D(p);\n  }, [polar, barWidth, cornerRadius, modifiedProps]);\n  const previousPath = usePreviousValue(path2d);\n  const draw = React.useCallback((ctx, path) => {\n    ctx.fillStyle = style.fill;\n    ctx.strokeStyle = style.stroke;\n    ctx.globalAlpha = style.fillOpacity;\n    ctx.lineWidth = style.strokeWidth;\n    if (polar) {\n      ctx.translate(origin?.x || 0, origin?.y || 0);\n    }\n    ctx.fill(path);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }, [style, origin, polar]);\n\n  // This will clear the previous bar without clearing the entire canvas\n  const clearPreviousPath = React.useCallback(ctx => {\n    if (previousPath) {\n      ctx.save();\n      // This ensures that the entire shape is erased\n      const strokeWidth = style.strokeWidth || 0;\n      ctx.lineWidth = strokeWidth + 2;\n      ctx.globalCompositeOperation = \"destination-out\";\n      draw(ctx, previousPath);\n      ctx.stroke(previousPath);\n      ctx.restore();\n    }\n  }, [draw, previousPath, style]);\n  React.useEffect(() => {\n    const ctx = canvasRef.current?.getContext(\"2d\");\n    if (!ctx) return;\n    clearPreviousPath(ctx);\n    draw(ctx, path2d);\n  }, [canvasRef, draw, polar, barWidth, cornerRadius, modifiedProps, path2d, clearPreviousPath]);\n  return null;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}